%!PS-Adobe-2.0
%%Creator: dvips 5.493 Copyright 1986, 1992 Radical Eye Software
%%Title: dash.dvi
%%CreationDate: Wed Nov 25 00:16:56 1992
%%Pages: 28
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%EndComments
%DVIPSCommandLine: dvips -o dash.ps dash.dvi
%DVIPSSource:  TeX output 1992.11.25:0016
%%BeginProcSet: tex.pro
%!
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N /X{S N}
B /TR{translate}N /isls false N /vsize 11 72 mul N /@rigin{isls{[0 -1 1 0 0 0]
concat}if 72 Resolution div 72 VResolution div neg scale isls{Resolution hsize
-72 div mul 0 TR}if Resolution VResolution vsize -72 div 1 add mul TR matrix
currentmatrix dup dup 4 get round 4 exch put dup dup 5 get round 5 exch put
setmatrix}N /@landscape{/isls true N}B /@manualfeed{statusdict /manualfeed
true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N
/IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn begin /FontType 3 N /FontMatrix
fntrx N /FontBBox FBB N string /base X array /BitMaps X /BuildChar{
CharBuilder}N /Encoding IE N end dup{/foo setfont}2 array copy cvx N load 0 nn
put /ctr 0 N[}B /df{/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0
0 sf neg 0 0]N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data
dup length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128
ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127
sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp 0 N
/cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2 index get
S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff ch-yoff ch-height
sub ch-xoff ch-width add ch-yoff setcachedevice ch-width ch-height true[1 0 0
-1 -.1 ch-xoff sub ch-yoff .1 add]{ch-image}imagemask restore}B /D{/cc X dup
type /stringtype ne{]}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1
ne{dup dup length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}
B /I{cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/FV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage userdict
/eop-hook known{eop-hook}if}N /@start{userdict /start-hook known{start-hook}
if pop /VResolution X /Resolution X 1000 div /DVImag X /IE 256 array N 0 1 255
{IE S 1 string dup 0 3 index put cvn put}for 65781.76 div /vsize X 65781.76
div /hsize X}N /p{show}N /RMat[1 0 0 -1 0 0]N /BDot 260 string N /rulex 0 N
/ruley 0 N /v{/ruley X /rulex X V}B /V{}B /RV statusdict begin /product where{
pop product dup length 7 ge{0 7 getinterval dup(Display)eq exch 0 4
getinterval(NeXT)eq or}{pop false}ifelse}{false}ifelse end{{gsave TR -.1 -.1
TR 1 1 scale rulex ruley false RMat{BDot}imagemask grestore}}{{gsave TR -.1
-.1 TR rulex ruley scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /FV{
gsave transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N
/tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{4 M}B
/w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{p 1 w}B /r{
p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p a}B /bos{/SS save
N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N /vs
792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen false N
/rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B /@scaleunit 100 N
/@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit div /vsc X}B /@hsize{/hs
X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{/CLIP 2 N}B /@hoffset{/ho X}B
/@voffset{/vo X}B /@angle{/ang X}B /@rwi{10 div /rwi X /rwiSeen true N}B /@rhi
{10 div /rhi X /rhiSeen true N}B /@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B
/@ury{/ury X}B /magscale true def end /@MacSetUp{userdict /md known{userdict
/md get type /dicttype eq{userdict begin md length 10 add md maxlength ge{/md
md dup length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{
}N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath clippath
mark{transform{itransform moveto}}{transform{itransform lineto}}{6 -2 roll
transform 6 -2 roll transform 6 -2 roll transform{itransform 6 2 roll
itransform 6 2 roll itransform 6 2 roll curveto}}{{closepath}}pathforall
newpath counttomark array astore /gc xdf pop ct 39 0 put 10 fz 0 fs 2
F/|______Courier fnt invertflag{PaintBlack}if}N /txpose{pxs pys scale ppr
aload pop por{noflips{pop S neg S TR pop 1 -1 scale}if xflip yflip and{pop S
neg S TR 180 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0
get neg sub neg TR}if xflip yflip not and{pop S neg S TR pop 180 rotate ppr 3
get ppr 1 get neg sub neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get
neg TR}if}{noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop
pop 90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get
neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr 0
get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add 2 div 3
1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp{pop pop
showpage pm restore}N end}if}if}N /normalscale{Resolution 72 div VResolution
72 div neg scale magscale{DVImag dup scale}if 0 setgray}N /psfts{S 65781.76
div N}N /startTexFig{/psf$SavedState save N userdict maxlength dict begin
/magscale false def normalscale currentpoint TR /psf$ury psfts /psf$urx psfts
/psf$lly psfts /psf$llx psfts /psf$y psfts /psf$x psfts currentpoint /psf$cy X
/psf$cx X /psf$sx psf$x psf$urx psf$llx sub div N /psf$sy psf$y psf$ury
psf$lly sub div N psf$sx psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy
psf$sy div psf$ury sub TR /showpage{}N /erasepage{}N /copypage{}N /p 3 def
@MacSetUp}N /doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto closepath
clip newpath moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{
SDict begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial{CLIP
1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto closepath
clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx sub div rhiSeen{
rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly
sub div dup scale llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly
moveto urx lly lineto urx ury lineto llx ury lineto closepath clip}if
/showpage{}N /erasepage{}N /copypage{}N newpath}N /@endspecial{count ocount
sub{pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N /@defspecial{SDict begin}N /@fedspecial{end}B /li{lineto}B /rl{
rlineto}B /rc{rcurveto}B /np{/SaveX currentpoint /SaveY X N 1 setlinecap
newpath}N /st{stroke SaveX SaveY moveto}N /fil{fill SaveX SaveY moveto}N
/ellipse{/endangle X /startangle X /yrad X /xrad X /savematrix matrix
currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc savematrix
setmatrix}N end
%%EndProcSet
TeXDict begin 40258431 52099146 1000 300 300 (/u6/ip/tmp/dash.dvi)
@start /Fa 21 122 df<FFE0FFE0FFE00B037E8B11>45 D<001800003C00003C00003C00007E
00007E00007E0000CF0000CF0000CF000187800187800387C00303C00303C007FFE007FFE00601
E00C00F00C00F01E00F8FF03FFFF03FF18177F961C>97 D<FFFE00FFFF801E07C01E03C01E03E0
1E03E01E03E01E03E01E03C01E07C01FFF001FFF801E03C01E03E01E01F01E01F01E01F01E01F0
1E01F01E03E01E07E0FFFFC0FFFF0014177E961A>I<00FE1803FFB80FC1F81F00F83E00783C00
387C00387C0018F80018F80000F80000F80000F80000F80000F800187C00187C00183C00383E00
701F00700FC1E003FFC000FF0015177E961B>I<FFFE00FFFF801E07C01E01E01E00F01E00F01E
00781E00781E007C1E007C1E007C1E007C1E007C1E007C1E007C1E00781E00781E00F81E00F01E
01E01E07C0FFFF80FFFE0016177E961C>I<FFFFC0FFFFC01E03C01E00C01E00C01E00E01E1860
1E18601E18601E38001FF8001FF8001E38001E18301E18301E18301E00301E00701E00601E00E0
1E01E0FFFFE0FFFFE014177E9619>I<00FE1803FFB80FC1F81F00F83E00783C00387C00387C00
18F80018F80000F80000F80000F80000F80FFFF80FFF7C00787C00783C00783E00781F00780FE1
F803FFF800FF1818177E961D>103 D<FFCFFCFFCFFC1E01E01E01E01E01E01E01E01E01E01E01
E01E01E01E01E01FFFE01FFFE01E01E01E01E01E01E01E01E01E01E01E01E01E01E01E01E01E01
E0FFCFFCFFCFFC16177E961C>I<FFC0FFC01E001E001E001E001E001E001E001E001E001E001E
001E001E001E001E001E001E001E001E00FFC0FFC00A177F960E>I<FFC1FEFFC1FE1E01F01E01
E01E03C01E07801E0F001E1E001E3C001E7C001EFC001FFE001FDF001F9F001F0F801E07C01E07
C01E03E01E01F01E01F01E00F8FFC1FFFFC1FF18177E961D>107 D<FFE000FFE0001E00001E00
001E00001E00001E00001E00001E00001E00001E00001E00001E00001E01801E01801E01801E01
801E03801E03001E07001E0F00FFFF00FFFF0011177E9617>I<FE03FCFF03FC1F80F01F80601F
C0601BE0601BE06019F06018F86018F860187C60183C60183E60181F60180F60180FE01807E018
07E01803E01801E03C01E0FF00E0FF006016177E961C>110 D<FFFC00FFFF001E07801E03C01E
03E01E03E01E03E01E03E01E03E01E03C01E07801FFF001FFC001E00001E00001E00001E00001E
00001E00001E00001E0000FFC000FFC00013177E9619>112 D<00FE0003FF800F83E01F01F03E
00F83C00787C007C78003CF8003EF8003EF8003EF8003EF8003EF8003EF8003E78003C7C007C3C
7C783EFEF81FC7F00FC3E003FF8000FF020001820001C60001FE0001FE0001FC0000FC00007817
1E7E961D>I<FFF800FFFE001E0F001E07801E07C01E07C01E07C01E07C01E07801E0F001FFE00
1FFC001E1E001E0E001E0F001E0F001E0F001E0F801E0F801E0FC61E0FCEFFC7FEFFC1FC17177E
961B>I<0FCC3FFC787C703CE01CE00CE00CF000FC007FE07FF83FFC0FFC00FE001E001EC00EC0
0EE00EF01CF83CFFF8CFE00F177E9615>I<7FFFFC7FFFFC783C1C603C0C603C0CE03C0EC03C06
C03C06C03C06003C00003C00003C00003C00003C00003C00003C00003C00003C00003C00003C00
003C0007FFE007FFE017177F961B>I<FFC0FFFFC0FF1F003C1E00380F00300F00300F80600780
6007806003C0C003C0C003E1C001E18001E18000F30000F30000FF00007E00007E00003C00003C
00003C0000180018177F961C>118 D<FF87FE3FC0FF87FE3FC03E00F00F001E00F006001E01F8
06000F01F80C000F01F80C000F033C0C0007833C180007833C180007861E180003C61E300003C6
1E300003CE1F300001EC0F600001EC0F600001FC0FE00000F807C00000F807C00000F807C00000
F003C0000070038000007003800022177F9626>I<FFC3FEFFC3FE0F81F00781C007C18003E300
01E70001F60000FC00007C00007C00003C00007E00007F0000CF0001C7800187C00303C00701E0
0F01F01F01F8FF83FFFF83FF18177F961C>I<FFE03FC0FFE03FC00F801E0007801C0007C03800
03C0300001E0600001F0E00000F0C00000F9C000007D8000003F0000003F0000001E0000001E00
00001E0000001E0000001E0000001E0000001E0000001E000000FFC00000FFC0001A1780961C>
I E /Fb 31 122 df<3C7EFFFFFFFF7E3C08087D870F>46 D<00700001F0000FF000FFF000FFF0
00F3F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F0
0003F00003F00003F00003F00003F00003F00003F00003F000FFFF80FFFF80FFFF80111D7C9C1A
>49 D<07F8003FFE007FFF807C7FC0FE3FC0FE1FE0FE0FE0FE0FE07C0FE0380FE0000FE0001FC0
001FC0003F80003F00007E0000FC0001F00001E00003C0E00780E00F00E01C01E03FFFE07FFFC0
FFFFC0FFFFC0FFFFC0FFFFC0131D7D9C1A>I<03FC000FFF001FFFC01F1FC03F0FE03F0FE03F8F
E03F0FE01F0FE0001FC0001FC0003F8001FE0001FE00001FC0000FE00007F00007F80007F87C07
F8FE07F8FE07F8FE07F8FE07F0FE0FF07C1FE07FFFC01FFF8007FC00151D7E9C1A>I<3C7EFFFF
FFFF7E3C000000003C7EFFFFFFFF7E3C08147D930F>58 D<000FFC06007FFF9E01FFFFFE03FF03
FE0FF800FE1FE0007E1FC0003E3FC0003E7F80001E7F80001E7F00000EFF00000EFF000000FF00
0000FF000000FF000000FF000000FF000000FF000000FF0000007F00000E7F80000E7F80000E3F
C0001E1FC0003C1FE0003C0FF800F803FF03F001FFFFE0007FFF80000FFC001F1F7D9E26>67
D<FFFFFE0000FFFFFFC000FFFFFFF00007F00FF80007F001FC0007F000FE0007F0007F0007F000
7F0007F0003F8007F0003F8007F0003F8007F0003FC007F0003FC007F0003FC007F0003FC007F0
003FC007F0003FC007F0003FC007F0003FC007F0003FC007F0003F8007F0003F8007F0003F8007
F0007F0007F0007F0007F000FE0007F001FC0007F00FF800FFFFFFF000FFFFFFC000FFFFFE0000
221F7E9E28>I<FFFF9FFFF0FFFF9FFFF0FFFF9FFFF007F000FE0007F000FE0007F000FE0007F0
00FE0007F000FE0007F000FE0007F000FE0007F000FE0007F000FE0007F000FE0007FFFFFE0007
FFFFFE0007FFFFFE0007F000FE0007F000FE0007F000FE0007F000FE0007F000FE0007F000FE00
07F000FE0007F000FE0007F000FE0007F000FE0007F000FE0007F000FE00FFFF9FFFF0FFFF9FFF
F0FFFF9FFFF0241F7E9E29>72 D<FFFFC000FFFFC000FFFFC00007F0000007F0000007F0000007
F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F00000
07F0000007F0000007F001C007F001C007F001C007F001C007F003C007F003C007F0078007F007
8007F00F8007F03F80FFFFFF80FFFFFF80FFFFFF801A1F7E9E1F>76 D<001FF80000FFFF0001F8
1F8007F00FE00FE007F01FC003F81F8001F83F8001FC7F8001FE7F0000FE7F0000FEFF0000FFFF
0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FF7F0000FE7F0000FE
7F8001FE3F8001FC3F8001FC1FC003F80FE007F007F00FE001F81F8000FFFF00001FF800201F7D
9E27>79 D<FFFFFE00FFFFFF80FFFFFFE007F00FF007F007F807F003F807F003FC07F003FC07F0
03FC07F003FC07F003FC07F003FC07F003F807F007F007F00FF007FFFFC007FFFF0007F0000007
F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F00000
FFFF8000FFFF8000FFFF80001E1F7E9E24>I<FFFFF80000FFFFFF0000FFFFFFC00007F01FE000
07F00FF00007F007F00007F007F80007F007F80007F007F80007F007F80007F007F80007F007F0
0007F00FE00007F01FC00007FFFF000007FFFC000007F07E000007F03F000007F01F800007F01F
C00007F01FC00007F01FC00007F01FE00007F01FE00007F01FE00007F01FE07007F01FF07007F0
1FF070FFFF8FF8E0FFFF87FFE0FFFF81FF80241F7E9E27>82 D<FFFF83FFE0FFFF83FFE0FFFF83
FFE007F0001C0007F0001C0007F0001C0007F0001C0007F0001C0007F0001C0007F0001C0007F0
001C0007F0001C0007F0001C0007F0001C0007F0001C0007F0001C0007F0001C0007F0001C0007
F0001C0007F0001C0007F0001C0007F0001C0007F0001C0007F0003C0003F800380003F8007800
01FC00F00000FF03F000007FFFE000001FFF80000007FE0000231F7E9E28>85
D<07FE001FFF803F0FE03F07E03F03F03F03F01E03F00003F001FFF00FFFF03FC3F07E03F0FC03
F0F803F0F803F0F803F0FC07F07E1FFE3FFDFE0FF0FE17147F9319>97 D<03FE000FFF801F8FC0
3F0FC07E0FC07C0FC0FC0780FC0000FC0000FC0000FC0000FC0000FC0000FC00007E00007E00E0
3F01E01FC3C00FFF8003FE0013147E9317>99 D<0007FC000007FC000007FC000000FC000000FC
000000FC000000FC000000FC000000FC000000FC000000FC000000FC0003FCFC000FFFFC001F87
FC003F01FC007E00FC007C00FC00FC00FC00FC00FC00FC00FC00FC00FC00FC00FC00FC00FC00FC
00FC00FC00FC007C00FC007E00FC003E01FC001F87FF800FFFFF8003FCFF8019207E9F1D>I<01
FF0007FFC01F87E03F01F07E00F07E00F8FC00F8FC00F8FFFFF8FFFFF8FC0000FC0000FC00007C
00007E00003E00383F00781FC1F007FFE001FF8015147F9318>I<003F8001FFC003F7E007E7E0
0FE7E00FC7E00FC3C00FC0000FC0000FC0000FC0000FC000FFFC00FFFC00FFFC000FC0000FC000
0FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0007FFC00
7FFC007FFC0013207F9F10>I<FF800000FF800000FF8000001F8000001F8000001F8000001F80
00001F8000001F8000001F8000001F8000001F8000001F8FF0001FBFFC001FF8FC001FE07E001F
C07E001FC07E001F807E001F807E001F807E001F807E001F807E001F807E001F807E001F807E00
1F807E001F807E001F807E00FFF1FFC0FFF1FFC0FFF1FFC01A207E9F1D>104
D<1F003F803F807F807F803F803F801F0000000000000000000000FF80FF80FF801F801F801F80
1F801F801F801F801F801F801F801F801F801F801F80FFF0FFF0FFF00C217EA00F>I<FF80FF80
FF801F801F801F801F801F801F801F801F801F801F801F801F801F801F801F801F801F801F801F
801F801F801F801F801F801F801F80FFF0FFF0FFF00C207E9F0F>108 D<FF07F80FF000FF1FFE
3FFC00FF787EF0FC001FF03FE07E001FE03FC07E001FC03F807E001F803F007E001F803F007E00
1F803F007E001F803F007E001F803F007E001F803F007E001F803F007E001F803F007E001F803F
007E001F803F007E001F803F007E00FFF1FFE3FFC0FFF1FFE3FFC0FFF1FFE3FFC02A147E932F>
I<FF0FF000FF3FFC00FF78FC001FE07E001FC07E001FC07E001F807E001F807E001F807E001F80
7E001F807E001F807E001F807E001F807E001F807E001F807E001F807E00FFF1FFC0FFF1FFC0FF
F1FFC01A147E931D>I<01FF0007FFC01F83F03E00F83E00F87C007C7C007CFC007EFC007EFC00
7EFC007EFC007EFC007E7C007C7C007C3E00F83E00F81F83F007FFC001FF0017147F931A>I<FF
9FE000FFFFF800FFF0FC001FC07E001F803F001F803F001F801F801F801F801F801F801F801F80
1F801F801F801F801F801F801F803F801F803F001F803F001FC07E001FF1FC001FFFF8001F9FE0
001F8000001F8000001F8000001F8000001F8000001F800000FFF00000FFF00000FFF00000191D
7F931D>I<FF1F80FF7FC0FF77E01FE7E01FC7E01FC7E01F83C01F80001F80001F80001F80001F
80001F80001F80001F80001F80001F8000FFF800FFF800FFF80013147F9316>114
D<0FFE3FFE783EF01EF00EF80EFE00FFF0FFFC7FFE3FFE0FFF00FFE01FE00FF00FF80FFC3EFFFC
EFF010147E9315>I<03800380038003800780078007800F801F803FFCFFFCFFFC1F801F801F80
1F801F801F801F801F801F801F8E1F8E1F8E1F8E1F8E0FDC0FFC03F00F1D7F9C14>I<FF83FE00
FF83FE00FF83FE001F807E001F807E001F807E001F807E001F807E001F807E001F807E001F807E
001F807E001F807E001F807E001F807E001F80FE001F81FE000FC3FFC00FFF7FC003FE7FC01A14
7E931D>I<FFF0FF80FFF0FF80FFF0FF800FC038000FC0380007E0700007E0700007F0F00003F0
E00003F9E00001F9C00001F9C00000FF800000FF800000FF8000007F0000007F0000003E000000
3E0000001C000019147F931C>I<FFF0FF80FFF0FF80FFF0FF800FC038000FC0380007E0700007
E0700007F0F00003F0E00003F9E00001F9C00001F9C00000FF800000FF800000FF8000007F0000
007F0000003E0000003E0000001C0000001C00000038000078380000FC780000FC700000E0E000
00F1E000007F8000001F000000191D7F931C>121 D E /Fc 1 3 df<C0000CE0001C7000383800
701C00E00E01C006018007038003870001CE0000FC0000780000780000FC0001CE000387000703
800601800E01C01C00E0380070700038E0001CC0000C16187A9623>2 D
E /Fd 1 51 df<1F807FE0F1F0F8F8F878F8787078007800F800F001F001E003C007800E001C18
38187038FFF0FFF0FFF00D157E9412>50 D E /Fe 6 81 df<00030003000700060006000E000C
000C001C0018001800380030003000700060006000E000C000C001C00180018001800380030003
000700060006000E000C000C001C0018001800380030003000700060006000E000C000C000102D
7DA117>61 D<80000000E0000000F80000003E0000000F80000003E0000000F80000003E000000
0F80000003E0000000F80000003E0000000F80000003C0000003C000000F8000003E000000F800
0003E000000F8000003E000000F8000003E000000F8000003E000000F8000000E0000000800000
001A1C7C9823>I<00FFFC0000FFFC00000F8000000F0000000F0000001F0000001E0000001E00
00001E0000003E0000003C0000003C0000003C0000007C000000780000007800000078000000F8
000000F0000000F000C000F001C001F0018001E0018001E0038001E0030003E0070003C00F0003
C01E0007C07E007FFFFE00FFFFFC001A1F7E9E1F>76 D<00FF80003FF000FF80003FF0000F8000
7F00000F80007E00000F8000FE00001F8000FE00001B8001BC00001B80033C000019C0037C0000
39C0067C000031C00678000031C00C78000031C018F8000071C018F8000061C030F0000061C030
F0000061C061F00000E1C0C1F00000C1C0C1E00000C1C181E00000C0E183E00001C0E303E00001
80E303C0000180E603C0000180EC07C0000380EC07C0000300F80780000700F80780000F80F00F
80007FF0E0FFF800FFF0E1FFF8002C1F7E9E2C>I<00FF807FF000FF807FF0000F800F80000FC0
0600000FC00E00001FC00E00001BE00C000019E00C000019E01C000039F01C000030F018000030
F018000030F838000070783800006078300000607C300000603C700000E03C700000C03C600000
C03E600000C01EE00001C01EE00001801FC00001800FC00001800FC00003800FC0000300078000
07000780000F800780007FF0038000FFF0030000241F7E9E25>I<00FFFFC000FFFFF0000F00F8
000F003C001F003C001F003E001E003E001E003E003E003E003E007C003C007C003C0078007C00
F0007C01F0007807C0007FFF8000FFFC0000F8000000F0000000F0000001F0000001F0000001E0
000001E0000003E0000003E0000003C0000003C0000007C000007FFC0000FFFC00001F1F7E9E1D
>80 D E /Ff 41 122 df<7FF0FFF0FFF0FFE00C047D8B10>45 D<000F80003FE000F0F001C070
0380700380380700780F00780F00780E00781E00781E00703C00F03C00F03C00F03C00F07801E0
7801E07801E07801C07003C0F003C0F00380F00780F00700700F00700E00701C003878001FF000
0FC000151F7C9D17>48 D<000100030007000F003F00FE07FE073E003E003C003C007C007C0078
007800F800F800F000F001F001F001E001E003E003E003C003C007C0FFF8FFF8101E7B9D17>I<
0000E00001E00001E00003E00003C00003C00003C0000780000780000780000F00000F00000E00
001E00001C00003C0000380000780000700000E70001EF0001CF00038F00071F000F1E001E1E00
3C1E007FBE00FFFCC0C0FFC0003F80007C0000780000780000780000F80000F00000F00000F000
13277E9D17>52 D<0CF8180FF8381FFC701FFCF03F1FE03C07E07801C0700180E00380E0070000
0700000E00000E00001E00001C00003C0000380000780000780000F00000F00000F00001E00001
E00003E00003C00003C00003C00007C000078000078000151F7A9D17>55
D<003F00007FC001F3C003C1E00380E00700E00700E00701E00F01C00F03C00F83800FC70007FE
0007FC0003FC0007FE000F7F001C3F00381F00780F00F00700E00700E00700E00F00E00E00E01E
00E01C00E03800F8F0007FE0001F8000131F7B9D17>I<003F00007F8001F3C003C1C00780E007
80E00F00E00F01E01F01E01E01E01E01E01E03E03E03C03C03C03C07C01C07C01C0F801E1F800F
FF800FFF80010F00000F00001E00001E00703C00F07800F07000E0E000E3C000FF80007E000013
1F7B9D17>I<000007000000070000000F0000000F0000001F0000003F0000003F0000006F0000
006F000000CF000000CF0000018F0000038F0000030F0000060F0000060F00000C0F80000C0780
0018078000180780003FFF80007FFF800060078000C0078000C007800180078001800780030007
80070007801F8007C07FC07FF8FFC07FF81D207E9F22>65 D<0000FE060007FF8E001FC3DC007E
00FC00F8007C01F0007C03E0003807C000380F8000380F8000381F0000301F0000303E0000303E
0000007E0000007C0000007C0000007C000000FC000000F8000000F8000000F80001C0F8000180
F800018078000380780003007C0007003C000E003E001C001F0078000FC1F00003FFC00000FF00
001F217A9F21>67 D<01FFFFFE01FFFFFE001E007C001E001C001E001C003E001C003C000C003C
001C003C0018007C0C1800780C1800780C0000781C0000F8380000FFF80000FFF80000F0780001
F0300001E0300001E0303001E0307003E0006003C000E003C000C003C001C007C0018007800380
07800F800F803F00FFFFFF00FFFFFE001F1F7D9E1F>69 D<01FFFFFC01FFFFFC001E00F8001E00
38001E0038003E0018003C0018003C0038003C0030007C0C3000780C3000780C0000781C0000F8
380000FFF80000FFF80000F0780001F0300001E0300001E0300001E0300003E0000003C0000003
C0000003C0000007C0000007800000078000000F800000FFFC0000FFFC00001E1F7D9E1E>I<01
FFF001FFF0001F00001E00001E00003E00003C00003C00003C00007C0000780000780000780000
F80000F00000F00000F00001F00001E00001E00001E00003E00003C00003C00003C00007C00007
80000780000F8000FFF800FFF800141F7D9E12>73 D<01FFF80001FFF800001F0000001E000000
1E0000003E0000003C0000003C0000003C0000007C000000780000007800000078000000F80000
00F0000000F0000000F0000001F0000001E0000001E0018001E0038003E0030003C0030003C007
0003C0060007C00E0007801E0007803C000F80FC00FFFFFC00FFFFF800191F7D9E1D>76
D<0001FC000007FF00001F07C0003C03E000F001E001E000F003C000F007C00078078000780F00
00781F0000781E0000783E0000783E0000787C0000F87C0000F87C0000F87C0000F8F80001F0F8
0001F0F80001E0F80003E0F80003C0F80007C07800078078000F007C001F003C003E003E007C00
1E00F0000F83E00007FF800001FC00001D217A9F23>79 D<01FFFF8001FFFFE0001E01F0001E00
78003E0078003E007C003C007C003C007C007C007C007C00F8007800F8007800F000F801E000F8
03E000F00F8000FFFF0001FFF80001F0000001E0000001E0000003E0000003E0000003C0000003
C0000007C0000007C0000007800000078000000F800000FFF80000FFF800001E1F7D9E1F>I<00
07F0C0001FFDC0007C3F8000F00F8000E0078001C0078003C00300038003000380030003800300
0380000003C0000003E0000003FC000003FF800001FFE00000FFF000001FF8000003F8000000F8
00000078000000380000003800300038003000380070007800700070007000F0007801E000FC03
C000FF078000EFFF0000C3FC00001A217D9F1A>83 D<1FFFFFF01FFFFFF01F0781E03C0780E038
078060300F8060700F0060600F00E0600F00C0E01F00C0C01E00C0001E0000001E0000003E0000
003C0000003C0000003C0000007C000000780000007800000078000000F8000000F0000000F000
0000F0000001F0000001E0000001E0000003E00000FFFF0000FFFF00001C1F789E21>I<7FFC3F
F87FFC3FF807C007C0078003000F8007000F8006000F0006000F0006001F000E001F000C001E00
0C001E000C003E001C003E0018003C0018003C0018007C0038007C003000780030007800300078
007000F8006000F0006000F000E000F000C000F001C000F003800070070000780F00003C3C0000
1FF8000007E000001D20779E22>I<00FB8003FFC0079FC00F0F801E07803C0F803C0F00780F00
780F00781F00F81E00F01E00F01E00F03E70F03C60F03C60707CE079FCC03FDFC01F0F8014147C
9317>97 D<07C0003FC0003FC0000780000780000F80000F80000F00000F00001F00001F00001E
00001EFC003FFE003F8F003F07003E07807C07807C0780780780780780780F80F80F80F00F00F0
0F00F01E00F01E00F03C0070780078F0003FE0001F800011207C9F15>I<007E0003FF0007C380
0F07801E07803C07803C0200780000780000780000F80000F00000F00000F00000F00000700300
7807003C3E003FFC000FE00011147C9315>I<0000F80007F80007F80000F00000F00001F00001
F00001E00001E00003E00003E00003C000FBC003FFC0079FC00F0F801E07803C0F803C0F80780F
00780F00781F00F81F00F01E00F01E00F03E70F03E60F03C60707CE079FCC03FDFC01F0F801520
7C9F17>I<00FE0003FF0007C7800F03801E01803C03807C0700781F007FFC007FF000F80000F0
0000F00000F000007000007003007807003C3E001FFC000FE00011147C9315>I<0000F80003FC
0003BC0007BC0007BC000F00000F00000F00000F00001F00001E00001E0003FFF003FFF0003E00
003C00003C00003C00003C00007C0000780000780000780000780000780000F80000F00000F000
00F00000F00001E00001E00001E00001E00001C00003C00073C0007B8000FF00007F00007C0000
1629829F0E>I<003E7000FFF801E3F803C1F00781F00F01F00F01F01E01E01E01E03E03E03E03
E03C03C03C03C03C07C03C07C03C0F801C1F801E3F800FFF8007EF00000F00001F00001F00001E
00703E00787C00F8F800FFF0003FC000151D7E9315>I<01F0000FF0000FF00001E00001E00001
E00003E00003C00003C00003C00007C00007800007BF0007FFC00FE3C00FC1E00F81E00F03E01F
03C01E03C01E03C01E07C03E07803C07803C0F803C0F1C7C0F18781F18781E38781E70F80FE070
07C016207E9F17>I<00F000F000F000E000000000000000000000000000000F801FC03BC073C0
63C067C0E78007800F800F000F001F001E001E703E603C603CE03DC03F801F000C1F7D9E0E>I<
01F0000FF0000FF00001E00001E00001E00003E00003C00003C00003C00007C0000780000781E0
0787F00F8E300F1CF00F38F00F70F01FE0E01FC0001FC0001FF0003FFC003C7C003C3E003C3E70
7C3C60783C60783CE0783DC0F81FC0700F8014207E9F15>107 D<03E01FE01FE003C003C007C0
07C0078007800F800F800F000F001F001F001E001E003E003E003C003C007C007C0078007800F9
C0F980F180F380F3007F003E000B207D9F0C>I<1F0FC1F8003F9FF3FE0033F8F71E0073F07E0F
0063E07C0F0063C0F81F00E7C0F81E000780F01E000780F01E000781F03E000F81F03C000F01E0
3C000F01E07C000F03E078E01F03E078C01E03C0F8C01E03C0F1C01E07C0F3803E07C07F001C03
803E0023147D9325>I<1F0FC03F9FF033F8F073F07863E07863C0F8E7C0F00780F00780F00781
F00F81E00F01E00F03E00F03C71F03C61E07C61E078E1E079C3E03F81C01F018147D931A>I<00
7E0003FF8007C7800F03C01E01C03C01E03C01E07801E07801E07803E0F803E0F003C0F003C0F0
0780F00780700F00781E003C7C003FF8000FC00013147C9317>I<03E1F007F7F8067F3C0E7C1C
0C781E0CF81E1CF81E00F01E00F01E01F03E01F03E01E03C01E03C03E07803E07803C0F003E1E0
07F3C007FF8007BE000780000F80000F80000F00000F00001F00001F0000FFE000FFE000171D80
9317>I<00F86003FFE0078FE00F07C01E07C03C03C03C07C0780780780780780780F80F80F00F
00F00F00F00F00F01F00F03E00707E0078FE003FFE001FBC00003C00003C00007C000078000078
0000780000F8000FFF000FFF00131D7C9315>I<1F1F003FBF8033F1C073E3C063C3C063C3C0E7
C3800780000780000780000F80000F00000F00000F00001F00001E00001E00001E00003E00001C
000012147D9313>I<00FC03FE07870F0F0E0F0E0F1F001FF01FF80FFC07FE03FE003E701EF01C
F01CF03CF0787FF01FC010147D9313>I<01C003E003E003C003C007C007C00780FFF0FFF00F80
0F000F001F001F001E001E003E003E003C003C007C707C60786078E079C03F801F000C1C7C9B0F
>I<0F80E01FC1F039E1F071E1E063E1E063C3E0E3C3C007C3C00783C00787C00F87800F07800F
07800F0F9C0F0F180F0F180F0F380F3F3007FFF003E3E016147D9318>I<0F81C01FC3E039E3E0
71E3E063E1E063C0E0E3C0C007C0C00780C00781C00F81800F01800F01800F03000F03000F0700
0F0E000F9C0007F80003F00013147D9315>I<0F80E0E01FC1F1F039E1F1F071E1E1F063E1E0F0
63C3E070E3C3E06007C3C0600783C0600787C0E00F87C0C00F0780C00F0780C00F0781C00F0781
800F0F83800F0F83000F9FCF0007FBFE0003F1F8001C147D931E>I<0F80701FC0F839E0F871E0
F063E0F063C1F0E3C1E007C1E00781E00783E00F83C00F03C00F03C00F07C00F07800F07800F0F
800F1F8007FF0003FF00000F00001F00101E00783E00783C0078780071F0007FE0001F8000151D
7D9316>121 D E /Fg 45 123 df<3C7EFFFFFFFF7E3C08087C8710>46
D<00180000780003F800FFF800FFF800FDF80001F80001F80001F80001F80001F80001F80001F8
0001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F8
0001F80001F80001F8007FFFE07FFFE07FFFE013207C9F1C>49 D<07FC001FFF803FFFC07E3FE0
FF1FF0FF0FF0FF07F8FF07F8FF03F87E03F83C07F80007F80007F0000FF0000FE0001FC0001F80
003F00007E0000F80001F00001E03803C0380780380F00381C00783FFFF07FFFF0FFFFF0FFFFF0
FFFFF0FFFFF015207D9F1C>I<01FE0007FFC00FFFE01F0FF03F87F83F87F83FC3F83FC3F83F83
F81F87F80E07F00007F0000FE0001FC001FF0001FF00000FE00003F80003FC0001FC0001FE7E01
FEFF01FEFF01FEFF01FEFF01FEFF03FCFE03FC7E07F83FFFF01FFFC003FF0017207E9F1C>I<00
00E00001E00003E00007E0000FE0000FE0001FE0003FE00077E000E7E000E7E001C7E00387E007
07E00E07E00E07E01C07E03807E07007E0E007E0FFFFFEFFFFFEFFFFFE0007E00007E00007E000
07E00007E00007E000FFFE00FFFE00FFFE17207E9F1C>I<7000007C00007FFFFE7FFFFE7FFFFE
7FFFFE7FFFFC7FFFF8F000F0E001E0E003C0E00380E00780000F00001E00001E00003C00007C00
007C0000FC0000F80000F80001F80001F80001F80003F80003F80003F80003F80003F80003F800
03F80003F80001F00017227DA11C>55 D<00007000000000F800000000F800000000F800000001
FC00000001FC00000003FE00000003FE00000003FE000000077F000000077F0000000F7F800000
0E3F8000000E3F8000001E3FC000001C1FC000001C1FC00000380FE00000380FE00000780FF000
007007F000007007F00000FFFFF80000FFFFF80001FFFFFC0001C001FC0001C001FC0003C001FE
00038000FE00038000FE000700007F00FFF00FFFF8FFF00FFFF8FFF00FFFF825227EA12A>65
D<0007FE0180003FFFC38000FFFFEF8003FF81FF8007FC007F800FF0003F801FE0001F801FC000
0F803FC00007807F800007807F800007807F80000380FF00000380FF00000000FF00000000FF00
000000FF00000000FF00000000FF00000000FF00000000FF00000000FF000000007F800003807F
800003807F800003803FC00007801FC00007001FE0000F000FF0001E0007FC003C0003FF81F800
00FFFFF000003FFFC0000007FF000021227DA128>67 D<FFFFFF8000FFFFFFF000FFFFFFFC0007
F003FE0007F0007F0007F0003F8007F0001FC007F0000FE007F0000FE007F0000FF007F00007F0
07F00007F007F00007F007F00007F807F00007F807F00007F807F00007F807F00007F807F00007
F807F00007F807F00007F807F00007F807F00007F007F00007F007F00007F007F0000FE007F000
0FE007F0001FC007F0003F8007F0007F0007F003FE00FFFFFFFC00FFFFFFF000FFFFFF80002522
7EA12B>I<FFFFFFFCFFFFFFFCFFFFFFFC07F001FC07F0007C07F0003C07F0001C07F0001E07F0
001E07F01C0E07F01C0E07F01C0E07F01C0E07F03C0007F07C0007FFFC0007FFFC0007FFFC0007
F07C0007F03C0007F01C0707F01C0707F01C0707F01C0E07F0000E07F0000E07F0001E07F0001E
07F0003E07F0007E07F001FCFFFFFFFCFFFFFFFCFFFFFFFC20227EA125>I<FFFFFFF8FFFFFFF8
FFFFFFF807F003F807F000F807F0007807F0003807F0003C07F0003C07F0381C07F0381C07F038
1C07F0381C07F0780007F0F80007FFF80007FFF80007FFF80007F0F80007F0780007F0380007F0
380007F0380007F0380007F0000007F0000007F0000007F0000007F0000007F0000007F00000FF
FFE000FFFFE000FFFFE0001E227EA123>I<0003FF00C0003FFFE1C000FFFFF7C001FF80FFC007
FC003FC00FF8001FC01FE0000FC01FC00007C03FC00003C07F800003C07F800003C07F800001C0
FF000001C0FF00000000FF00000000FF00000000FF00000000FF00000000FF00000000FF000000
00FF000FFFFCFF000FFFFC7F800FFFFC7F80001FC07F80001FC03FC0001FC01FC0001FC01FE000
1FC00FF8001FC007FC003FC001FF80FFC000FFFFFFC0003FFFF3C00003FF80C026227DA12C>I<
FFFF83FFFEFFFF83FFFEFFFF83FFFE07F0001FC007F0001FC007F0001FC007F0001FC007F0001F
C007F0001FC007F0001FC007F0001FC007F0001FC007F0001FC007F0001FC007F0001FC007FFFF
FFC007FFFFFFC007FFFFFFC007F0001FC007F0001FC007F0001FC007F0001FC007F0001FC007F0
001FC007F0001FC007F0001FC007F0001FC007F0001FC007F0001FC007F0001FC007F0001FC0FF
FF83FFFEFFFF83FFFEFFFF83FFFE27227EA12C>I<FFFFE0FFFFE0FFFFE003F80003F80003F800
03F80003F80003F80003F80003F80003F80003F80003F80003F80003F80003F80003F80003F800
03F80003F80003F80003F80003F80003F80003F80003F80003F80003F80003F80003F800FFFFE0
FFFFE0FFFFE013227FA115>I<FFFFE000FFFFE000FFFFE00007F0000007F0000007F0000007F0
000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007
F0000007F0000007F0000007F0000007F0003807F0003807F0003807F0003807F0007807F00078
07F0007807F000F007F001F007F003F007F00FF0FFFFFFF0FFFFFFF0FFFFFFF01D227EA122>76
D<FFF800001FFFFFF800001FFFFFFC00003FFF07FC00003FE007FC00003FE0077E000077E0077E
000077E0073F0000E7E0073F0000E7E0071F8001C7E0071F8001C7E0071F8001C7E0070FC00387
E0070FC00387E00707E00707E00707E00707E00703F00E07E00703F00E07E00703F00E07E00701
F81C07E00701F81C07E00700FC3807E00700FC3807E007007E7007E007007E7007E007007E7007
E007003FE007E007003FE007E007001FC007E007001FC007E007000F8007E0FFF80F80FFFFFFF8
0F80FFFFFFF80700FFFF30227EA135>I<FFF8003FFEFFFC003FFEFFFE003FFE07FF0001C007FF
0001C0077F8001C0077FC001C0073FE001C0071FE001C0070FF001C0070FF801C00707FC01C007
03FE01C00701FE01C00700FF01C00700FF81C007007FC1C007003FE1C007001FE1C007000FF1C0
07000FF9C0070007FDC0070003FDC0070001FFC0070000FFC0070000FFC00700007FC00700003F
C00700001FC00700001FC00700000FC0FFF80007C0FFF80003C0FFF80001C027227EA12C>I<00
07FC0000003FFF800000FE0FE00003F803F80007E000FC000FC0007E001FC0007F001F80003F00
3F80003F803F80003F807F00001FC07F00001FC07F00001FC0FF00001FE0FF00001FE0FF00001F
E0FF00001FE0FF00001FE0FF00001FE0FF00001FE0FF00001FE0FF00001FE07F00001FC07F8000
3FC07F80003FC03F80003F803FC0007F801FC0007F000FE000FE0007F001FC0003F803F80000FE
0FE000003FFF80000007FC000023227DA12A>I<FFFFFF00FFFFFFE0FFFFFFF007F007F807F001
FC07F000FE07F000FE07F000FF07F000FF07F000FF07F000FF07F000FF07F000FF07F000FE07F0
01FE07F001FC07F007F807FFFFF007FFFFC007F0000007F0000007F0000007F0000007F0000007
F0000007F0000007F0000007F0000007F0000007F0000007F00000FFFF8000FFFF8000FFFF8000
20227EA126>I<03FE0C0FFF9C1FFFFC3F03FC7C00FC7C007CF8003CF8003CF8001CFC001CFE00
00FF0000FFF0007FFF007FFFE03FFFF01FFFF80FFFFC03FFFE007FFE0003FF0000FF00003F0000
3FE0001FE0001FE0001FF0001FF8003EFC007EFF80FCFFFFF8E7FFF0C0FFC018227DA11F>83
D<7FFFFFFF807FFFFFFF807FFFFFFF807E03F81F807C03F807807803F807807003F80380F003F8
03C0F003F803C0E003F801C0E003F801C0E003F801C0E003F801C00003F800000003F800000003
F800000003F800000003F800000003F800000003F800000003F800000003F800000003F8000000
03F800000003F800000003F800000003F800000003F800000003F800000003F800000003F80000
03FFFFF80003FFFFF80003FFFFF80022227EA127>I<FFFF07FFF83FFEFFFF07FFF83FFEFFFF07
FFF83FFE07F0003F8001C007F0003F8001C007F8003F8003C003F8007FC0038003F8007FC00380
03FC00FFE0078001FC00EFE0070001FC00EFE0070000FE01EFF00E0000FE01C7F00E0000FE01C7
F00E00007F03C7F81C00007F0383F81C00007F8383F83C00003F8783FC3800003F8701FC380000
3FC701FC7800001FCE00FE7000001FCE00FE7000001FEE00FEF000000FFC007FE000000FFC007F
E000000FFC007FE0000007F8003FC0000007F8003FC0000003F8003F80000003F0001F80000003
F0001F80000001F0001F00000001E0000F00000001E0000F000037227FA13A>87
D<0FFE003FFF807F0FC07F07E07F07F07F03F07F03F03E03F00003F001FFF00FFFF03FE3F07F83
F07F03F0FF03F0FE03F0FE03F0FE07F0FF0FF87F1FFF3FFDFF0FF0FF18167E951B>97
D<FF800000FF800000FF8000001F8000001F8000001F8000001F8000001F8000001F8000001F80
00001F8000001F8000001F8000001F9FE0001FFFFC001FF0FE001FC03F001F803F801F801F801F
801F801F801FC01F801FC01F801FC01F801FC01F801FC01F801FC01F801FC01F801FC01F801F80
1F803F801F803F001FC07F001FF0FE001E7FF8001C1FE0001A237EA21F>I<01FF8007FFE01FC7
F03F87F03F07F07F07F07E07F0FE03E0FE0000FE0000FE0000FE0000FE0000FE0000FE00007F00
007F00003F80703F80F01FE1E007FFC001FF0014167E9519>I<0003FE000003FE000003FE0000
007E0000007E0000007E0000007E0000007E0000007E0000007E0000007E0000007E0000007E00
01FE7E0007FFFE001FC3FE003F80FE003F007E007F007E007E007E00FE007E00FE007E00FE007E
00FE007E00FE007E00FE007E00FE007E00FE007E007E007E007E007E003F00FE003F01FE001FC3
FFC00FFFFFC001FC7FC01A237EA21F>I<01FE0007FF801FC7E03F03E03F03F07E01F07E01F8FE
01F8FE01F8FFFFF8FFFFF8FE0000FE0000FE0000FE00007E00007F00003F00381F80780FE1F007
FFE000FF8015167E951A>I<003FC000FFE003FBF007E7F007E7F00FC7F00FC7F00FC3E00FC000
0FC0000FC0000FC0000FC000FFFC00FFFC00FFFC000FC0000FC0000FC0000FC0000FC0000FC000
0FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0007FFC007FFC007FFC00
14237FA211>I<03FE3F000FFFFF801F8FF3803F07EF807E03FF807E03F2007E03F0007E03F000
7E03F0007E03F0007E03F0003F07E0001F8FC0001FFF80003BFE000038000000380000003C0000
003FFFE0003FFFFC001FFFFE001FFFFF003FFFFF007C007F80F8001F80F8000F80F8000F80F800
0F80FC001F807E003F003F80FE000FFFF80001FFC00019217F951C>I<FF800000FF800000FF80
00001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F
8000001F87F0001F9FFC001FF8FC001FF07E001FE07E001FC07E001FC07E001F807E001F807E00
1F807E001F807E001F807E001F807E001F807E001F807E001F807E001F807E001F807E001F807E
00FFF1FFC0FFF1FFC0FFF1FFC01A237EA21F>I<1F003F807F807F807F807F803F801F00000000
000000000000000000FF80FF80FF801F801F801F801F801F801F801F801F801F801F801F801F80
1F801F801F801F80FFF0FFF0FFF00C247FA30F>I<FF800000FF800000FF8000001F8000001F80
00001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F83FF801F
83FF801F83FF801F81F0001F83E0001F87C0001F8F80001F9F00001FFE00001FFF00001FFF0000
1FFF80001FDFC0001F8FE0001F87E0001F87F0001F83F8001F81F8001F80FC00FFF1FFC0FFF1FF
C0FFF1FFC01A237EA21E>107 D<FF80FF80FF801F801F801F801F801F801F801F801F801F801F
801F801F801F801F801F801F801F801F801F801F801F801F801F801F801F801F801F801F801F80
FFF0FFF0FFF00C237FA20F>I<FF87F80FF000FF9FFC3FF800FFBC7E78FC001FF07FE0FE001FE0
3FC07E001FC03F807E001FC03F807E001F803F007E001F803F007E001F803F007E001F803F007E
001F803F007E001F803F007E001F803F007E001F803F007E001F803F007E001F803F007E001F80
3F007E001F803F007E00FFF1FFE3FFC0FFF1FFE3FFC0FFF1FFE3FFC02A167E952F>I<FF87F000
FF9FFC00FFF8FC001FF07E001FE07E001FC07E001FC07E001F807E001F807E001F807E001F807E
001F807E001F807E001F807E001F807E001F807E001F807E001F807E001F807E00FFF1FFC0FFF1
FFC0FFF1FFC01A167E951F>I<00FE0007FFC00F83E01F01F03E00F87E00FC7E00FC7E00FCFE00
FEFE00FEFE00FEFE00FEFE00FEFE00FEFE00FE7E00FC7E00FC3F01F81F01F00F83E007FFC000FE
0017167E951C>I<FF9FE000FFFFFC00FFF0FE001FC07F001F803F801F803F801F803F801F801F
C01F801FC01F801FC01F801FC01F801FC01F801FC01F801FC01F801FC01F803F801F803F801F80
7F001FC07F001FF1FE001FFFF8001F9FE0001F8000001F8000001F8000001F8000001F8000001F
8000001F800000FFF00000FFF00000FFF000001A207E951F>I<FF1F80FF7FC0FF77E01FE7E01F
C7E01FC7E01F83C01F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F
80001F8000FFF800FFF800FFF80013167E9517>114 D<0FFF003FFF007C1F00780F00F00700F0
0700F80000FF0000FFF8007FFC007FFE001FFF000FFF80007F80E00F80E00F80F00780F00780F8
0F00FE1F00FFFE00C7F80011167E9516>I<01C00001C00001C00001C00003C00003C00003C000
07C00007C0000FC0003FFF00FFFF00FFFF000FC0000FC0000FC0000FC0000FC0000FC0000FC000
0FC0000FC0000FC0000FC3800FC3800FC3800FC3800FC3800FC78007E70003FE0001FC0011207F
9F16>I<FF83FE00FF83FE00FF83FE001F807E001F807E001F807E001F807E001F807E001F807E
001F807E001F807E001F807E001F807E001F807E001F807E001F807E001F80FE001F80FE001F81
FE000FC3FFC00FFF7FC003FC7FC01A167E951F>I<FFE3FF8FF8FFE3FF8FF8FFE3FF8FF81FC07C
03C00FC07E03800FC0FE038007E0FE070007E1FF070007E1DF070003F1DF0E0003F3DF8E0003FB
8F9E0001FB8FDC0001FF07DC0001FF07FC0000FF07F80000FE03F800007E03F000007E03F00000
7C01F000003C01E000003C01E00025167F9528>119 D<FFF0FFE0FFF0FFE0FFF0FFE007E07800
07F0F00003F8E00001F9E00000FFC000007F8000007F0000003F0000001F8000003FC000007FE0
0000F7F00001E3F00001C1F80003C1FC000780FE00FFC1FFE0FFC1FFE0FFC1FFE01B167F951E>
I<FFF03FE0FFF03FE0FFF03FE00FC00E000FE01E0007E01C0007E01C0003F0380003F0380003F8
780001F8700001FCF00000FCE00000FCE000007FC000007FC000007FC000003F8000003F800000
1F0000001F0000000E0000000E0000001C00007C1C0000FE3C0000FE380000E0780000E0700000
71E000007FC000001F0000001B207F951E>I<7FFFF07FFFF07C0FF0780FE0701FC0F03F80E07F
80E07F00E0FE0001FE0001FC0003F80007F87007F0700FE0701FE0F01FC0F03F80E07F01E0FF07
E0FFFFE0FFFFE014167E9519>I E /Fh 43 122 df<003F800001FFF00007FFFC000FE0FE001F
C07F001F803F003F803F803F001F807F001FC07F001FC07F001FC07F001FC0FF001FE0FF001FE0
FF001FE0FF001FE0FF001FE0FF001FE0FF001FE0FF001FE0FF001FE0FF001FE0FF001FE0FF001F
E0FF001FE0FF001FE0FF001FE07F001FC07F001FC07F001FC07F001FC03F001F803F803F801F80
3F001FC07F000FE0FE0007FFFC0001FFF000003F80001B277DA622>48 D<000700000F00007F00
07FF00FFFF00FFFF00F8FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF00
00FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF00
00FF0000FF0000FF0000FF0000FF0000FF0000FF007FFFFE7FFFFE7FFFFE17277BA622>I<00FF
C00007FFF8001FFFFC003F83FF007E01FF807F00FF80FF807FC0FF807FC0FF803FE0FF803FE0FF
803FE07F003FE03E003FE000003FE000003FE000007FC000007FC00000FF800000FF000001FE00
0003FC000003F8000007F000000FC000001F8000003F00E0007E00E000F800E001F001C003E001
C003C001C007FFFFC00FFFFFC01FFFFFC03FFFFFC07FFFFF80FFFFFF80FFFFFF80FFFFFF801B27
7DA622>I<00FFC00003FFF80007FFFC000FC3FE001F81FF003FC0FF803FE0FF803FE0FF803FE0
FF803FE0FF803FE0FF801FC0FF000F81FF000001FE000003FC000007F80000FFF00000FFC00000
FFF8000003FE000001FF000000FF800000FFC000007FC000007FE01E007FE07F807FE07F807FE0
FFC07FE0FFC07FE0FFC07FE0FFC07FC0FFC0FFC07F80FF807F01FF803F83FF001FFFFC0007FFF8
0000FFC0001B277DA622>I<00000F0000001F0000003F0000007F0000007F000000FF000001FF
000003FF000003FF000007FF00000F7F00001E7F00003C7F00003C7F0000787F0000F07F0001E0
7F0001C07F0003C07F0007807F000F007F001E007F001E007F003C007F0078007F00F0007F00FF
FFFFF8FFFFFFF8FFFFFFF80000FF000000FF000000FF000000FF000000FF000000FF000000FF00
007FFFF8007FFFF8007FFFF81D277EA622>I<1C0007001F803F001FFFFF001FFFFE001FFFFC00
1FFFFC001FFFF0001FFFE0001FFF80001FFE00001E0000001E0000001E0000001E0000001E0000
001E7FC0001FFFF8001FFFFE001FC1FF001F007F801E007F8000003FC000003FC000003FE00000
3FE03C003FE07F003FE0FF003FE0FF803FE0FF803FE0FF803FE0FF003FC0FF007FC07C007F803C
00FF003F83FE000FFFFC0007FFF00000FF80001B277DA622>I<0007F800003FFC0000FFFE0001
FE1F0007F81F000FF03F800FE07F801FC07F803FC07F803FC07F807FC03F007F801E007F800000
7F800000FF820000FF9FF000FFBFFC00FFFFFE00FFE07F00FFE03F80FFC03FC0FFC03FC0FFC03F
E0FF803FE0FF803FE0FF803FE0FF803FE07F803FE07F803FE07F803FE07F803FE03F803FC03F80
3FC01FC03F800FE07F8007F0FF0003FFFC0001FFF800007FE0001B277DA622>I<380000003E00
00003FFFFFF03FFFFFF03FFFFFF03FFFFFE07FFFFFC07FFFFFC07FFFFF807FFFFF0070003E0070
007C0070007800E000F800E001F000E003E0000007C0000007C000000F8000000F8000001F0000
003F0000003F0000003F0000007F0000007E0000007E000000FE000000FE000000FE000000FE00
0001FE000001FE000001FE000001FE000001FE000001FE000001FE000001FE000000FC00000078
00001C297CA822>I<007FC00001FFF80007FFFC000FC0FE000F003F001E001F001E001F803E00
0F803E000F803F000F803FC00F803FF01F803FF81F003FFE3F001FFFFE001FFFFC000FFFF80007
FFFC0003FFFE0007FFFF000FFFFF801FBFFFC03F0FFFC07E03FFE07C00FFE0FC007FE0F8001FE0
F80007E0F80007E0F80003E0F80003E0FC0003C07C0007C07E0007803F000F801FC07F000FFFFE
0007FFF80000FFC0001B277DA622>I<007FC00003FFF00007FFFC000FE1FE001FC07E003F807F
007F803F807F803F80FF803FC0FF803FC0FF803FC0FF803FC0FF803FE0FF803FE0FF803FE0FF80
3FE0FF807FE07F807FE07F807FE03F80FFE01FC0FFE00FFFFFE007FFBFE001FF3FE000083FE000
003FC000003FC00F003FC01F803FC03FC07F803FC07F803FC07F003FC0FF003F80FE001F01FC00
1F07F8000FFFE00007FFC00001FE00001B277DA622>I<000007C00000000007C0000000000FE0
000000000FE0000000000FE0000000001FF0000000001FF0000000003FF8000000003FF8000000
003FF8000000007FFC000000007FFC00000000FFFE00000000F3FE00000000F3FE00000001F3FF
00000001E1FF00000003E1FF80000003C0FF80000003C0FF80000007C0FFC0000007807FC00000
0F807FE000000F003FE000000F003FE000001F003FF000001E001FF000003FFFFFF800003FFFFF
F800003FFFFFF800007C000FFC0000780007FC0000F80007FE0000F00003FE0000F00003FE0001
F00003FF0001E00001FF0003E00001FF80FFFF003FFFFEFFFF003FFFFEFFFF003FFFFE2F297EA8
34>65 D<00007FF003800007FFFE0780001FFFFF8F80007FF80FFF8000FFC003FF8003FF0000FF
8007FE00007F800FFC00003F800FF800001F801FF000001F803FF000000F803FE000000F807FE0
000007807FE0000007807FC000000780FFC000000000FFC000000000FFC000000000FFC0000000
00FFC000000000FFC000000000FFC000000000FFC000000000FFC000000000FFC000000000FFC0
000000007FC0000000007FE0000003807FE0000003803FE0000003803FF0000003801FF0000007
800FF8000007000FFC00000F0007FE00001E0003FF00007C0000FFC000F800007FF807F000001F
FFFFC0000007FFFF000000007FF8000029297CA832>67 D<FFFFFFF80000FFFFFFFF8000FFFFFF
FFE00003FE003FF80003FE0007FC0003FE0001FE0003FE0000FF0003FE00007F8003FE00007FC0
03FE00003FC003FE00003FE003FE00001FE003FE00001FF003FE00001FF003FE00001FF003FE00
001FF003FE00001FF803FE00001FF803FE00001FF803FE00001FF803FE00001FF803FE00001FF8
03FE00001FF803FE00001FF803FE00001FF803FE00001FF803FE00001FF003FE00001FF003FE00
001FF003FE00001FE003FE00003FE003FE00003FC003FE00007FC003FE00007F8003FE0000FF00
03FE0001FE0003FE0007FC0003FE003FF800FFFFFFFFE000FFFFFFFF8000FFFFFFFC00002D297D
A835>I<FFFFF83FFFFEFFFFF83FFFFEFFFFF83FFFFE03FE0000FF8003FE0000FF8003FE0000FF
8003FE0000FF8003FE0000FF8003FE0000FF8003FE0000FF8003FE0000FF8003FE0000FF8003FE
0000FF8003FE0000FF8003FE0000FF8003FE0000FF8003FE0000FF8003FE0000FF8003FFFFFFFF
8003FFFFFFFF8003FFFFFFFF8003FE0000FF8003FE0000FF8003FE0000FF8003FE0000FF8003FE
0000FF8003FE0000FF8003FE0000FF8003FE0000FF8003FE0000FF8003FE0000FF8003FE0000FF
8003FE0000FF8003FE0000FF8003FE0000FF8003FE0000FF8003FE0000FF8003FE0000FF80FFFF
F83FFFFEFFFFF83FFFFEFFFFF83FFFFE2F297DA836>72 D<FFFFFEFFFFFEFFFFFE01FF0001FF00
01FF0001FF0001FF0001FF0001FF0001FF0001FF0001FF0001FF0001FF0001FF0001FF0001FF00
01FF0001FF0001FF0001FF0001FF0001FF0001FF0001FF0001FF0001FF0001FF0001FF0001FF00
01FF0001FF0001FF0001FF0001FF0001FF0001FF00FFFFFEFFFFFEFFFFFE17297FA81A>I<0000
FFE000000007FFFC0000003FFFFF8000007FC07FC00001FF001FF00003FC0007F80007F80003FC
000FF80003FE001FF00001FF001FF00001FF003FE00000FF803FE00000FF807FE00000FFC07FC0
00007FC07FC000007FC07FC000007FC0FFC000007FE0FFC000007FE0FFC000007FE0FFC000007F
E0FFC000007FE0FFC000007FE0FFC000007FE0FFC000007FE0FFC000007FE0FFC000007FE07FC0
00007FC07FE00000FFC07FE00000FFC03FE00000FF803FE00000FF801FF00001FF001FF00001FF
000FF80003FE0007FC0007FC0003FE000FF80001FF001FF00000FFC07FE000003FFFFF8000000F
FFFE00000000FFE000002B297CA834>79 D<FFFFFFF800FFFFFFFF00FFFFFFFFC003FE007FE003
FE001FF003FE000FF803FE0007FC03FE0007FC03FE0007FE03FE0007FE03FE0007FE03FE0007FE
03FE0007FE03FE0007FE03FE0007FE03FE0007FC03FE0007FC03FE000FF803FE001FF003FE007F
E003FFFFFFC003FFFFFF0003FFFFF80003FE00000003FE00000003FE00000003FE00000003FE00
000003FE00000003FE00000003FE00000003FE00000003FE00000003FE00000003FE00000003FE
00000003FE00000003FE000000FFFFF80000FFFFF80000FFFFF8000027297DA82F>I<FFFFFFE0
0000FFFFFFFE0000FFFFFFFF800003FE007FE00003FE001FF00003FE000FF80003FE0007FC0003
FE0007FC0003FE0007FE0003FE0007FE0003FE0007FE0003FE0007FE0003FE0007FE0003FE0007
FE0003FE0007FC0003FE0007FC0003FE000FF80003FE001FF00003FE007FE00003FFFFFF800003
FFFFFE000003FFFFFE000003FE01FF000003FE00FF800003FE007FC00003FE007FC00003FE003F
E00003FE003FE00003FE003FE00003FE003FE00003FE003FF00003FE003FF00003FE003FF00003
FE003FF00003FE003FF00703FE003FF80703FE003FFC0F03FE001FFE1FFFFFF80FFFFEFFFFF807
FFFCFFFFF800FFF030297DA834>82 D<00FF80E003FFF1E00FFFFFE01FC0FFE03F001FE03E0007
E07E0003E07C0003E0FC0001E0FC0001E0FC0000E0FE0000E0FF0000E0FF800000FFF80000FFFF
C0007FFFF8007FFFFE003FFFFF801FFFFFC00FFFFFC007FFFFE001FFFFF0003FFFF00003FFF800
001FF800000FF8000007F8E00003F8E00001F8E00001F8E00001F8F00001F8F00001F0F80003F0
FC0003E0FF0007E0FFE01FC0FFFFFF80F1FFFE00E03FF8001D297CA826>I<7FFFFFFFFFC07FFF
FFFFFFC07FFFFFFFFFC07F807FC03FC07C007FC007C078007FC003C078007FC003C070007FC001
C0F0007FC001E0F0007FC001E0E0007FC000E0E0007FC000E0E0007FC000E0E0007FC000E0E000
7FC000E000007FC0000000007FC0000000007FC0000000007FC0000000007FC0000000007FC000
0000007FC0000000007FC0000000007FC0000000007FC0000000007FC0000000007FC000000000
7FC0000000007FC0000000007FC0000000007FC0000000007FC0000000007FC0000000007FC000
0000007FC0000000007FC0000000007FC0000000FFFFFFE00000FFFFFFE00000FFFFFFE0002B28
7EA730>I<FFFFF87FFFF807FFF0FFFFF87FFFF807FFF0FFFFF87FFFF807FFF003FE0001FF0000
1C0003FE0001FF00001C0001FF0001FF8000380001FF0000FF8000380001FF8000FF8000780000
FF8000FFC000700000FF8000FFC000700000FFC000FFE000F000007FC001FFE000E000007FE001
FFE000E000003FE003FFF001C000003FE0039FF001C000003FF0039FF003C000001FF0070FF803
8000001FF0070FF8038000001FF80F0FFC078000000FF80E07FC070000000FFC0E07FC07000000
07FC1E07FE0E00000007FC1C03FE0E00000007FE1C03FE1E00000003FE3801FF1C00000003FE38
01FF1C00000001FF7801FFB800000001FF7000FFB800000001FFF000FFB800000000FFF000FFF0
00000000FFE0007FF000000000FFE0007FF0000000007FC0003FE0000000007FC0003FE0000000
003FC0003FC0000000003F80001FC0000000003F80001FC0000000001F80001F80000000001F00
000F80000000001F00000F80000000000E00000700000044297FA847>87
D<03FFC0000FFFF0001FFFFC003FC1FE003FC0FF003FC07F003FC03F803FC03F801F803F800000
3F8000003F80003FFF8003FFFF800FFE3F801FE03F803F803F807F003F80FF003F80FE003F80FE
003F80FE003F80FF007F807F00FF807FC3FFC03FFFDFFC0FFF0FFC03FC07FC1E1B7E9A21>97
D<FFE0000000FFE0000000FFE00000000FE00000000FE00000000FE00000000FE00000000FE000
00000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE1
FF00000FE7FFC0000FFFFFF0000FFF07F8000FF801FC000FF001FE000FE000FE000FE000FF000F
E0007F000FE0007F800FE0007F800FE0007F800FE0007F800FE0007F800FE0007F800FE0007F80
0FE0007F800FE0007F800FE0007F000FE000FF000FE000FE000FF001FE000FF803FC000FFE0FF8
000F9FFFF0000F07FFC0000E01FE0000212A7EA926>I<003FF80001FFFE0007FFFF000FF87F80
1FE07F803FC07F803F807F807F807F807F003F00FF000000FF000000FF000000FF000000FF0000
00FF000000FF000000FF000000FF0000007F8000007F8000003FC001C03FC003C01FF003800FFC
0F8007FFFF0001FFFC00003FF0001A1B7E9A1F>I<00003FF80000003FF80000003FF800000003
F800000003F800000003F800000003F800000003F800000003F800000003F800000003F8000000
03F800000003F800000003F800000003F800003FC3F80001FFFBF80007FFFFF8000FF83FF8001F
E00FF8003FC007F8003F8003F8007F8003F8007F0003F800FF0003F800FF0003F800FF0003F800
FF0003F800FF0003F800FF0003F800FF0003F800FF0003F800FF0003F8007F0003F8007F8003F8
003F8007F8003FC00FF8001FC01FF8000FF07FF80007FFFBFF8001FFF3FF80007FC3FF80212A7E
A926>I<003FE00001FFFC0007FFFE000FF07F001FC03F803FC01FC03F800FC07F800FC07F0007
E0FF0007E0FF0007E0FFFFFFE0FFFFFFE0FFFFFFE0FF000000FF000000FF000000FF0000007F80
00007F8000003F8000E03FC001E01FF003C00FFC0FC003FFFF8001FFFE00003FF0001B1B7E9A20
>I<0007FC00003FFE00007FFF0001FF7F8003FC7F8003F87F8007F87F8007F07F8007F03F0007
F0000007F0000007F0000007F0000007F0000007F00000FFFFC000FFFFC000FFFFC00007F00000
07F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F000
0007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0
00007FFF80007FFF80007FFF8000192A7EA915>I<00FF81F007FFF7FC0FFFFFFC1FC1FEFC3F80
FE7C3F007E787F007F007F007F007F007F007F007F007F007F007F007F003F007E003F80FE001F
C1FC000FFFF8001FFFF00038FF8000380000003C0000003C0000003E0000003FFFFC003FFFFF00
1FFFFFC00FFFFFE01FFFFFF03FFFFFF07E000FF8FE0003F8FC0001F8FC0001F8FC0001F8FE0003
F87E0003F07F0007F03FE03FE01FFFFFC007FFFF0000FFF8001E287E9A22>I<FFE0000000FFE0
000000FFE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000F
E00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE0FF00000FE3FFC000
0FE7FFE0000FEF87F0000FFE07F8000FF803F8000FF803F8000FF003F8000FF003F8000FE003F8
000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003
F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F800FFFE3FFF80FFFE
3FFF80FFFE3FFF80212A7DA926>I<0F801FC03FE03FF03FF03FF03FF03FE01FC00F8000000000
0000000000000000FFE0FFE0FFE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00F
E00FE00FE00FE00FE00FE00FE00FE00FE0FFFEFFFEFFFE0F2B7DAA14>I<FFE00000FFE00000FF
E000000FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE00000
0FE000000FE000000FE000000FE01FFC0FE01FFC0FE01FFC0FE007C00FE00F800FE01E000FE07C
000FE0F8000FE1F0000FE3E0000FE7C0000FEFE0000FFFF0000FFFF0000FFFF8000FF3FC000FE1
FE000FC0FE000FC0FF000FC07F800FC03F800FC03FC00FC01FE00FC00FF0FFFC3FFEFFFC3FFEFF
FC3FFE1F2A7EA924>107 D<FFE0FFE0FFE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00F
E00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE0
0FE00FE00FE00FE00FE00FE0FFFEFFFEFFFE0F2A7DA914>I<FFC07F800FF000FFC1FFE03FFC00
FFC7FFF0FFFE000FCF87F9F0FF000FDE03FBC07F000FFC01FF803F800FF801FF003F800FF001FE
003F800FF001FE003F800FE001FC003F800FE001FC003F800FE001FC003F800FE001FC003F800F
E001FC003F800FE001FC003F800FE001FC003F800FE001FC003F800FE001FC003F800FE001FC00
3F800FE001FC003F800FE001FC003F800FE001FC003F800FE001FC003F800FE001FC003F80FFFE
1FFFC3FFF8FFFE1FFFC3FFF8FFFE1FFFC3FFF8351B7D9A3C>I<FFC0FF0000FFC3FFC000FFC7FF
E0000FCF87F0000FDE07F8000FF803F8000FF803F8000FF003F8000FF003F8000FE003F8000FE0
03F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000F
E003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F800FFFE3FFF80FFFE3FFF80
FFFE3FFF80211B7D9A26>I<003FE00001FFFC0003FFFE000FF07F801FC01FC03F800FE03F800F
E07F0007F07F0007F07F0007F0FF0007F8FF0007F8FF0007F8FF0007F8FF0007F8FF0007F8FF00
07F8FF0007F87F0007F07F0007F03F800FE03F800FE01FC01FC00FF07F8007FFFF0001FFFC0000
3FE0001D1B7E9A22>I<FFE1FF0000FFE7FFC000FFFFFFF0000FFF0FF8000FF803FC000FF001FE
000FE001FE000FE000FF000FE000FF000FE0007F800FE0007F800FE0007F800FE0007F800FE000
7F800FE0007F800FE0007F800FE0007F800FE000FF800FE000FF000FE000FF000FE001FE000FF0
01FE000FF803FC000FFE0FF8000FFFFFF0000FE7FFC0000FE1FE00000FE00000000FE00000000F
E00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE0000000FFFE000000
FFFE000000FFFE00000021277E9A26>I<FFC7F0FFCFFCFFDFFE0FDCFF0FF8FF0FF8FF0FF0FF0F
F0FF0FF07E0FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000F
E0000FE0000FE0000FE000FFFF00FFFF00FFFF00181B7E9A1C>114 D<03FE701FFFF03FFFF07E
03F07C00F0F80070F80070FC0070FE0000FFE000FFFF007FFFC03FFFE01FFFF00FFFF801FFFC00
07FC0001FCE000FCE0007CF0007CF8007CFC00F8FF03F8FFFFF0FFFFC0E1FF00161B7E9A1B>I<
00700000700000700000700000F00000F00001F00001F00003F00007F0001FF000FFFFF0FFFFF0
FFFFF007F00007F00007F00007F00007F00007F00007F00007F00007F00007F00007F00007F000
07F00007F03807F03807F03807F03807F03807F03807F87803F8F001FFF000FFE0003F8015267F
A51B>I<FFE03FF800FFE03FF800FFE03FF8000FE003F8000FE003F8000FE003F8000FE003F800
0FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8
000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE007F8000FE007F8000FE00F
F80007F03FF80007FFFBFF8001FFF3FF80007FC3FF80211B7D9A26>I<FFFE03FF80FFFE03FF80
FFFE03FF8007F000700007F000700007F800F00003F800E00003FC01E00001FC01C00001FC01C0
0000FE03800000FE038000007F070000007F070000007F8F0000003F8E0000003FDE0000001FDC
0000001FDC0000000FF80000000FF80000000FF800000007F000000007F000000003E000000003
E000000001C00000211B7F9A24>I<FFFE7FFC0FFEFFFE7FFC0FFEFFFE7FFC0FFE0FE007E000E0
07F003F001C007F003F001C007F807F803C003F807F8038003F807F8038001FC0EFC070001FC0E
FC070001FE1EFC0F0000FE1C7E0E0000FE1C7E0E0000FF383F1E00007F383F1C00007F783F3C00
003FF01FB800003FF01FB800003FF01FF800001FE00FF000001FE00FF000000FC007E000000FC0
07E000000FC007E00000078003C00000078003C0002F1B7F9A32>I<FFFE03FF80FFFE03FF80FF
FE03FF8007F000700007F000700007F800F00003F800E00003FC01E00001FC01C00001FC01C000
00FE03800000FE038000007F070000007F070000007F8F0000003F8E0000003FDE0000001FDC00
00001FDC0000000FF80000000FF80000000FF800000007F000000007F000000003E000000003E0
00000001C000000001C000000003800000000380000038078000007C07000000FE0F000000FE0E
000000FE1C000000F67C0000007FF80000003FE00000000F8000000021277F9A24>121
D E /Fi 80 124 df<001FC3F000FFFFF803F1FE7C07C1FC7C0781F87C0F01F07C0F00F0000F00
F0000F00F0000F00F0000F00F0000F00F000FFFFFF80FFFFFF800F00F0000F00F0000F00F0000F
00F0000F00F0000F00F0000F00F0000F00F0000F00F0000F00F0000F00F0000F00F0000F00F000
0F00F0000F00F0000F00F000FFC3FF00FFC3FF001E20809F1B>11 D<001FC000FFE003F0F007C1
F00781F00F01F00F01F00F00000F00000F00000F00000F0000FFFFF0FFFFF00F00F00F00F00F00
F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00
F0FFC3FFFFC3FF1820809F19>I<001FF000FFF003F1F007C1F00781F00F01F00F00F00F00F00F
00F00F00F00F00F00F00F0FFFFF0FFFFF00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F
00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F0FFE7FFFFE7FF1820809F19>I<
001FC0FE0000FFF7FF0003F07F878007C0FE0F800780FC0F800F00F80F800F00F80F800F007800
000F007800000F007800000F007800000F00780000FFFFFFFF80FFFFFFFF800F007807800F0078
07800F007807800F007807800F007807800F007807800F007807800F007807800F007807800F00
7807800F007807800F007807800F007807800F007807800F007807800F00780780FFE3FF3FF8FF
E3FF3FF82520809F26>I<0F8000301FC000703DE000E078F801E0707E0FC0F07FFF80F033FB80
F0300700F0300600F0300E00F0301C00F0301800F07038007060700078E060003DE0E0001FC1C0
000F818000000381F0000303F8000707B8000E0F1C000C0E0C001C1E0E00381E0600301E060070
1E0600E01E0600C01E0601C01E0603801E0603001E0E07000E0C0E000F1C0C0007B81C0003F818
0001F01F257DA126>37 D<007C000001FE000001E6000003C70000038300000783000007830000
078300000787000007870000078E0000078C0000079C000007F81FFC03F01FFC03E007E003E003
8003E0038007E003000FF007001CF00E0038F80C00787C1C00F07C1800F03E3800F01F3000F01F
F000F00FE000F807C0187803E0187C07F0303E1EFC701FFC7FE007F00F801E227EA023>I<70F8
FCFC7C0C0C0C1C183870F060060E7C9F0D>I<00E001E003C0038007000F000E001E001C003C00
380038007800780070007000F000F000F000F000F000F000F000F000F000F000F000F000F000F0
007000700078007800380038003C001C001E000E000F000700038003C001E000E00B2E7DA112>
I<E000F000780038001C001E000E000F00070007800380038003C003C001C001C001E001E001E0
01E001E001E001E001E001E001E001E001E001E001E001C001C003C003C003800380078007000F
000E001E001C0038007800F000E0000B2E7DA112>I<0006000000060000000600000006000000
060000000600000006000000060000000600000006000000060000000600000006000000060000
00060000FFFFFFF0FFFFFFF0000600000006000000060000000600000006000000060000000600
0000060000000600000006000000060000000600000006000000060000000600001C207D9A23>
43 D<70F8FCFC7C0C0C0C1C183870F060060E7C840D>I<FFC0FFC0FFC00A037F8B0F>I<70F8F8
F87005057C840D>I<00030003000700060006000E000C000C001C001800180038003000300070
0060006000E000C000C001C00180018001800380030003000700060006000E000C000C001C0018
001800380030003000700060006000E000C000C000102D7DA117>I<03F0000FFC001E1E001C0E
00380700780780700380700380700380F003C0F003C0F003C0F003C0F003C0F003C0F003C0F003
C0F003C0F003C0F003C0F003C0F003C07003807003807003807807803807001C0E001E1E000FFC
0003F000121F7E9D17>I<00C001C00FC0FFC0F3C003C003C003C003C003C003C003C003C003C0
03C003C003C003C003C003C003C003C003C003C003C003C003C003C07FFF7FFF101E7D9D17>I<
07F0001FFC003C7E00701F00600F80F80780FC07C0FC07C0FC03C0FC03C03007C00007C00007C0
000F80000F80001F00003E00003C0000780000F00001E00003C0000780C00E00C01C00C03801C0
7FFF80FFFF80FFFF80FFFF80121E7E9D17>I<07F0001FFC003C3F00380F007C0F807C0F807E07
807C0F807C0F80000F80001F00001E00007E0003F80003F000003C00001F00000F80000F800007
C00007C07807C0FC07C0FC07C0FC07C0FC0F80F80F80701F003C3E001FFC0007F000121F7E9D17
>I<000E00000E00001E00003E00003E00007E00007E0000DE0001DE00019E00031E00071E0006
1E000C1E001C1E00181E00381E00301E00601E00E01E00FFFFF0FFFFF0001E00001E00001E0000
1E00001E00001E0001FFE001FFE0141E7F9D17>I<3807003FFF003FFE003FFC003FF000300000
30000030000030000030000030000033F00037FC003F1E003C0F00380F803807800007C00007C0
0007C00007C0F807C0F807C0F807C0F807C0F80F80600F80701F003C3E001FFC0007F000121F7E
9D17>I<00FE0003FF0007C7800F0F801E0F803C0F803C0F80780000780000700000F06000F3FC
00F7FE00FE0F00FC0780F80780F80380F003C0F003C0F003C0F003C0F003C07003C07003C07803
C07807803807803C0F001E1E000FFC0003F000121F7E9D17>I<6000007FFFC07FFFC07FFFC07F
FF80E00300C00700C00E00C01C0000180000380000700000700000E00000E00001E00001E00001
C00003C00003C00003C00003C00007C00007C00007C00007C00007C00007C00007C00007C00003
8000121F7D9D17>I<03F0000FFC001E1E00380F003807807003807003807003807803807C0780
7F07003FCE003FFC001FF8000FFC000FFE001FFF003C7F80781F80700FC0F007C0E003C0E001C0
E001C0E001C0F001807003807807003E1F001FFC0007F000121F7E9D17>I<03F0000FFC001E1E
003C0F00780700780780F00780F00380F00380F003C0F003C0F003C0F003C0F003C07007C07807
C0780FC03C1FC01FFBC00FF3C00183C00003800007800007807C07007C0F007C1E007C3C007878
003FF0000FC000121F7E9D17>I<70F8F8F8700000000000000000000070F8F8F87005147C930D>
I<70F8F8F8700000000000000000000070F8F8F87818181838303070E040051D7C930D>I<0003
800000038000000380000007C0000007C0000007C000000FE000000FE000000FE0000019F00000
19F0000019F0000030F8000030F8000030F8000060FC0000607C0000607C0000E07E0000C03E00
00C03E0001FFFF0001FFFF0001801F0003801F8003000F8003000F8007000FC0070007C00F8007
C0FFE07FFEFFE07FFE1F207F9F22>65 D<FFFFF000FFFFFC0007C01F0007C00F0007C00F8007C0
07C007C007C007C007C007C007C007C007C007C0078007C00F8007C01F0007C03E0007FFFC0007
FFFE0007C01F0007C0078007C007C007C003C007C003E007C003E007C003E007C003E007C003E0
07C003C007C007C007C00F8007C01F00FFFFFE00FFFFF8001B1F7F9E20>I<001FC0C000FFF0C0
01F83DC007E00FC00F8007C00F0007C01F0003C03E0001C03C0001C07C0001C07C0000C07C0000
C0F80000C0F8000000F8000000F8000000F8000000F8000000F8000000F8000000F80000007C00
00C07C0000C07C0000C03C0001C03E0001801F0001800F0003800F80070007E00E0001F83C0000
FFF800001FE0001A217D9F21>I<FFFFF000FFFFFE0007C01F0007C0078007C003C007C001E007
C001F007C000F007C000F807C0007807C0007807C0007C07C0007C07C0007C07C0007C07C0007C
07C0007C07C0007C07C0007C07C0007C07C0007807C0007807C000F807C000F007C000F007C001
E007C003C007C0078007C01F00FFFFFE00FFFFF0001E1F7F9E23>I<FFFFFF80FFFFFF8007C00F
8007C0038007C0018007C0018007C001C007C000C007C000C007C060C007C060C007C0600007C0
600007C0E00007FFE00007FFE00007C0E00007C0600007C0600007C0603007C0603007C0003007
C0006007C0006007C0006007C000E007C000E007C001E007C007C0FFFFFFC0FFFFFFC01C1F7F9E
1F>I<FFFFFF80FFFFFF8007C00F8007C0038007C0018007C0018007C001C007C000C007C000C0
07C060C007C060C007C0600007C0600007C0E00007FFE00007FFE00007C0E00007C0600007C060
0007C0600007C0600007C0000007C0000007C0000007C0000007C0000007C0000007C0000007C0
0000FFFF0000FFFF00001A1F7F9E1E>I<001FE060007FF86001F83CE003E00FE007C007E00F80
03E01F0001E03E0000E03E0000E07C0000E07C0000607C000060F8000060F8000000F8000000F8
000000F8000000F8000000F8000000F800FFFCF800FFFC7C0003E07C0003E07C0003E03E0003E0
3E0003E01F0003E00F8003E007C007E003E00FE001FC1EE0007FF860001FE0001E217D9F24>I<
FFFC7FFEFFFC7FFE07C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007
C007C007C007C007C007C007C007C007C007FFFFC007FFFFC007C007C007C007C007C007C007C0
07C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C0FF
FC7FFEFFFC7FFE1F1F7F9E22>I<FFFEFFFE07C007C007C007C007C007C007C007C007C007C007
C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C0FFFEFFFE0F1F
809E10>I<0FFFE00FFFE0003E00003E00003E00003E00003E00003E00003E00003E00003E0000
3E00003E00003E00003E00003E00003E00003E00003E00003E00003E00003E00003E00783E00FC
3E00FC3E00FC3E00FC7C00F87C0078F8003FF0000FC00013207F9E17>I<FFFE0FFEFFFE0FFE07
C003F007C003C007C0078007C00F0007C01E0007C03C0007C0780007C0700007C0E00007C1C000
07C3C00007C7C00007CFE00007DFE00007FBF00007F1F80007E1F80007C0FC0007C07C0007C07E
0007C03F0007C03F0007C01F8007C00F8007C00FC007C007E007C00FF0FFFE3FFEFFFE3FFE1F1F
7F9E23>I<FFFF00FFFF0007C00007C00007C00007C00007C00007C00007C00007C00007C00007
C00007C00007C00007C00007C00007C00007C00007C00007C00307C00307C00307C00307C00707
C00707C00607C00E07C01E07C07EFFFFFEFFFFFE181F7F9E1C>I<FFC0000FFEFFE0001FFE07E0
001FC007E0001FC006F00037C006F00037C006F00037C006780067C006780067C006780067C006
3C00C7C0063C00C7C0063C00C7C0061E0187C0061E0187C0060F0307C0060F0307C0060F0307C0
06078607C006078607C006078607C00603CC07C00603CC07C00603CC07C00601F807C00601F807
C00601F807C00600F007C00F00F007C0FFF0F0FFFEFFF060FFFE271F7F9E2A>I<FFE01FFEFFE0
1FFE07F001E007F800C007F800C006FC00C006FC00C0067E00C0063F00C0063F00C0061F80C006
0FC0C0060FC0C00607E0C00603E0C00603F0C00601F8C00601F8C00600FCC006007EC006007EC0
06003FC006001FC006001FC006000FC0060007C0060007C0060003C00F0003C0FFF001C0FFF000
C01F1F7F9E22>I<001F800000FFF00001E0780007C03E000F801F000F000F001E0007803C0003
C03C0003C07C0003E07C0003E0780001E0F80001F0F80001F0F80001F0F80001F0F80001F0F800
01F0F80001F0F80001F0F80001F0780001E07C0003E07C0003E03C0003C03E0007C01E0007800F
000F000F801F0007C03E0001F0F80000FFF000001F80001C217D9F23>I<FFFFF000FFFFFC0007
C03E0007C00F0007C00F8007C0078007C007C007C007C007C007C007C007C007C007C007C00780
07C00F8007C00F0007C03E0007FFFC0007FFF00007C0000007C0000007C0000007C0000007C000
0007C0000007C0000007C0000007C0000007C0000007C0000007C00000FFFE0000FFFE00001A1F
7F9E1F>I<001F800000FFF00001E0780007C03E000F801F000F000F001E0007803E0007C03C00
03C07C0003E07C0003E0780001E0F80001F0F80001F0F80001F0F80001F0F80001F0F80001F0F8
0001F0F80001F0F80001F0780001E07C0003E07C0003E03C0003C03E0F07C01E1F87800F38CF00
0FB05F0007F07E0001F8780000FFF010001FB010000030100000383000003C7000003FF000001F
E000001FE000001FC000000F801C297D9F23>I<FFFFC000FFFFF80007C07C0007C01E0007C01F
0007C00F0007C00F8007C00F8007C00F8007C00F8007C00F0007C01F0007C01E0007C07C0007FF
F80007FFF00007C0F80007C07C0007C07E0007C03E0007C03E0007C03E0007C03E0007C03E0007
C03E0007C03E0007C03E0607C03E0607C01F0EFFFE1F8EFFFE0FFC000003F81F207F9E21>I<07
E1801FF9803E3F80780F80780780F00380F00380F00180F00180F00180F80000FC0000FE00007F
E0007FFC003FFE001FFF000FFF8000FF80001FC00007C00007C00003C0C003C0C003C0C003C0E0
03C0E00380F00780F80F00FE1F00CFFE00C3F80012217D9F19>I<7FFFFFE07FFFFFE07C0F81E0
700F80E0600F8060600F8060E00F8070C00F8030C00F8030C00F8030C00F8030000F8000000F80
00000F8000000F8000000F8000000F8000000F8000000F8000000F8000000F8000000F8000000F
8000000F8000000F8000000F8000000F8000000F8000000F800007FFFF0007FFFF001C1F7E9E21
>I<FFFE1FFEFFFE1FFE07C001E007C000C007C000C007C000C007C000C007C000C007C000C007
C000C007C000C007C000C007C000C007C000C007C000C007C000C007C000C007C000C007C000C0
07C000C007C000C007C000C007C000C007C000C003C001C003E0018003E0038001F0070000F80F
00007C1E00003FF8000007F0001F207F9E22>I<FFF807FEFFF807FE0FC001F00FC000E007C000
C007C000C007E001C003E0018003E0018003F0038001F0030001F0030000F8060000F8060000F8
0600007C0C00007C0C00007C0C00003E1800003E1800003F1800001F3000001F3000001FF00000
0FE000000FE000000FE0000007C0000007C0000003800000038000000380001F207F9E22>I<FF
F8FFF83FF0FFF8FFF83FF01F800F800F800F800F8007000F800FC0030007C007C0060007C007C0
060007C007C0060003E00FE00C0003E00FE00C0003E00FE00C0003F019F01C0001F019F0180001
F019F0180001F830F8380000F830F8300000F830F8300000F870FC3000007C607C6000007C607C
6000007CE07E6000003EC03EC000003EC03EC000003EC03EC000001F801F8000001F801F800000
1F801F8000001F000F8000000F000F0000000F000F0000000E000700000006000600002C207F9E
2F>I<7FFC7FF87FFC7FF807F01F8003E00F0003F00E0001F80C0000F8180000FC3800007C3000
007E6000003FE000001FC000001FC000000F8000000FC0000007E0000007E000000FF000000DF0
000019F8000038FC0000307C0000607E0000E03E0000C03F0001C01F8001800F8003800FC00FC0
0FE0FFF07FFEFFF07FFE1F1F7F9E22>I<FFFC03FF80FFFC03FF8007E000F80003E000700003F0
00600001F000C00001F801C00000F801800000FC038000007E030000007E060000003F06000000
1F0C0000001F9C0000000F980000000FF800000007F000000007E000000003E000000003E00000
0003E000000003E000000003E000000003E000000003E000000003E000000003E000000003E000
000003E00000007FFF0000007FFF0000211F809E22>I<FEFEC0C0C0C0C0C0C0C0C0C0C0C0C0C0
C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0FEFE072D7CA10D>91
D<FEFE060606060606060606060606060606060606060606060606060606060606060606060606
0606060606FEFE072D7FA10D>93 D<1FF0007FFC007C7E007C1E007C1F00380F00000F00000F00
07FF001FFF003F0F007C0F00F80F00F00F30F00F30F01F30F81F307C7FF03FF7E01FC3C014147E
9317>97 D<0F0000FF0000FF00000F00000F00000F00000F00000F00000F00000F00000F00000F
00000F1F800FFFE00FE1F00F80F00F00780F00780F003C0F003C0F003C0F003C0F003C0F003C0F
003C0F003C0F00780F80780F80F00FE1E00E7FC00C3F801620809F19>I<03F80FFE1E3E3C3E78
3E781CF000F000F000F000F000F000F000F80078007C033E071F0E0FFC03F010147E9314>I<00
03C0003FC0003FC00003C00003C00003C00003C00003C00003C00003C00003C00003C007F3C00F
FFC01E1FC03C07C07803C07803C0F003C0F003C0F003C0F003C0F003C0F003C0F003C0F003C078
03C07807C03C0FC03E1FC01FFBFC07E3FC16207E9F19>I<03F0000FFC001E1E003C0F00780700
780780F00780F00380FFFF80FFFF80F00000F00000F00000F800007800007C01803E03801F8700
0FFE0003F80011147F9314>I<007E0001FF0003EF8007CF800F8F800F0F800F00000F00000F00
000F00000F00000F0000FFF000FFF0000F00000F00000F00000F00000F00000F00000F00000F00
000F00000F00000F00000F00000F00000F00000F00000F0000FFF000FFF0001120809F0E>I<00
01E007F7F01FFF703E3EF03C1E70780F00780F00780F00780F00780F003C1E003E3E003FFC0037
F0007000007000007800007FFE003FFF803FFFE03FFFE07803F0F000F0E00070E00070E00070F0
00F07801E03E07C01FFF8003FC00141F7F9417>I<0F0000FF0000FF00000F00000F00000F0000
0F00000F00000F00000F00000F00000F00000F1F800F7FE00FE1E00FC1F00F80F00F80F00F00F0
0F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F0FFF3FFFFF3FF
1820809F19>I<0E001F001F001F000E000000000000000000000000000F007F007F000F000F00
0F000F000F000F000F000F000F000F000F000F000F000F000F00FFE0FFE00B1F809E0D>I<0070
00F800F800F80070000000000000000000000000007807F807F800F80078007800780078007800
7800780078007800780078007800780078007800780078007800787078F878F8F0F9F07FE03F80
0D28839E0E>I<0F0000FF0000FF00000F00000F00000F00000F00000F00000F00000F00000F00
000F00000F0FF80F0FF80F07C00F07800F0F000F1E000F3C000F78000FFC000FFC000FFE000FBE
000F1F000F1F800F0F800F07C00F07C00F03E0FFE7FCFFE7FC1620809F18>I<0F00FF00FF000F
000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F00
0F000F000F000F000F000F000F00FFF0FFF00C20809F0D>I<0F1FC0FE00FF7FF3FF80FFF1F78F
800FC0FE07C00F807C03C00F807C03C00F007803C00F007803C00F007803C00F007803C00F0078
03C00F007803C00F007803C00F007803C00F007803C00F007803C00F007803C00F007803C0FFF3
FF9FFCFFF3FF9FFC2614809327>I<0F1F80FF7FE0FFE1E00FC1F00F80F00F80F00F00F00F00F0
0F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F0FFF3FFFFF3FF181480
9319>I<01F80007FE001E07803C03C03801C07000E07000E0F000F0F000F0F000F0F000F0F000
F0F000F07000E07801E03801C03C03C01E078007FE0001F80014147F9317>I<0F1F80FFFFE0FF
E1F00F80F00F00F80F00780F007C0F003C0F003C0F003C0F003C0F003C0F003C0F007C0F00780F
80F80F80F00FE3E00F7FC00F3F800F00000F00000F00000F00000F00000F00000F0000FFF000FF
F000161D809319>I<07F0C00FF9C01F1DC03C0FC07C07C07803C0F803C0F003C0F003C0F003C0
F003C0F003C0F003C0F803C07803C07C07C03C0FC03E1FC01FFBC007E3C00003C00003C00003C0
0003C00003C00003C00003C0003FFC003FFC161D7E9318>I<0F7CFFFFFFDF0F9F0F9F0F0E0F00
0F000F000F000F000F000F000F000F000F000F000F00FFF0FFF01014809312>I<1FB07FF070F0
E070E030E030F000FF007FC07FF03FF007F800F8C078C038E038F078F8F0FFE0CFC00D147E9312
>I<06000600060006000E000E001E003E00FFF8FFF81E001E001E001E001E001E001E001E001E
001E001E181E181E181E181E181F300FF007E00D1C7F9B12>I<0F00F0FF0FF0FF0FF00F00F00F
00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F01F00F03F00F
87F007FEFF01FCFF1814809319>I<FFC7F8FFC7F81F03E00F01C00F01800F0180078300078300
07830003C60003C60003EE0001EC0001EC0001FC0000F80000F80000700000700000700015147F
9318>I<FF9FF3FCFF9FF3FC1E07C0F01E03C0E00F03C0C00F07C0C00F07E0C00787E180078CE1
80078CF18003CCF30003D8730003D87B0003F87F0001F87E0001F03E0001F03E0000F03C0000E0
1C0000E01C001E147F9321>I<7FE7FC7FE7FC0F83E007838003C30001E60001EE0000FC000078
00007800003C00007E0000FE0001CF000187800387800703C01F83E0FFCFFEFFCFFE1714809318
>I<FFC7F8FFC7F81F03E00F01C00F01800F018007830007830007830003C60003C60003EE0001
EC0001EC0001FC0000F80000F80000700000700000700000600000600000600070C000F8C000C1
8000E380007F00003C0000151D7F9318>I<3FFF3FFF381F303E707C60FC60F861F003F003E007
C00FC30F831F033F073E067C06F81EFFFEFFFE10147F9314>I<FFFFFCFFFFFC1602808C17>I
E /Fj 44 123 df<70F8FCFC7C0C0C0C1C18183870E0E0060F7C840E>44
D<FFE0FFE0FFE00B037F8B10>I<01F00007FC000E0E001C07003803803803807803C07001C070
01C07001C0F001E0F001E0F001E0F001E0F001E0F001E0F001E0F001E0F001E0F001E0F001E0F0
01E0F001E0F001E07001C07001C07001C07803C03803803803801C07000E0E0007FC0001F00013
227EA018>48 D<00C001C007C0FFC0FBC003C003C003C003C003C003C003C003C003C003C003C0
03C003C003C003C003C003C003C003C003C003C003C003C003C003C003C0FFFFFFFF10217CA018
>I<07F8000FFE003C3F00700F807007C0E007C0F803E0FC03E0FC03E0FC01E0FC01E03003E000
03E00003E00007C00007C0000F80000F00001E00003C0000780000F00001E00001C00003806007
00600E00601C00E03800C07FFFC0FFFFC0FFFFC0FFFFC013217EA018>I<03F8000FFE001E1F00
380F807807C07C07C07E07C07E07C07C07C03807C00007C0000780000F80001F00003E0003FC00
03F800001E00000F000007800007C00003E00003E03003E0FC03E0FC03E0FC03E0FC03E0F807C0
6007C0780F803E1F001FFE0003F80013227EA018>I<000700000700000F00001F00001F00003F
00003F00006F0000EF0000CF00018F00018F00030F00070F00060F000C0F001C0F00180F00380F
00300F00600F00E00F00FFFFF8FFFFF8000F00000F00000F00000F00000F00000F00000F0001FF
F801FFF815217FA018>I<1801801E07801FFF801FFF001FFC001FF00018000018000018000018
000018000018000019F8001FFE001F1F001E0F801C07801807C00003C00003E00003E00003E000
03E0F803E0F803E0F803E0F803E0F803C0E007C0700780780F003E3F001FFC0007F00013227EA0
18>I<03F8000FFC001F1E003C07003807807803807003C0F003C0F001C0F001C0F001E0F001E0
F001E0F001E0F001E0F003E07803E07803E03C07E03E0FE01FFDE007F9E00081E00001C00003C0
0003C07C03807C07807C07007C0F00701E00387C001FF8000FE00013227EA018>57
D<000180000003C0000003C0000003C0000007E0000007E0000007E000000FF000000DF000000D
F000001DF8000018F8000018F8000038FC0000307C0000307C0000607E0000603E0000603E0000
C03F0000C01F0000C01F0001801F8001FFFF8001FFFF80030007C0030007C0030007C0060003E0
060003E0060003E00E0001F01F0003F0FFC01FFFFFC01FFF20237EA225>65
D<000FF030007FFC3000FC1E7003F0077007C003F00F8001F01F0001F01F0000F03E0000F03C00
00707C0000707C0000707C000030F8000030F8000030F8000000F8000000F8000000F8000000F8
000000F8000000F8000000F80000307C0000307C0000307C0000303E0000703E0000601F0000E0
1F0000C00F8001C007C0038003F0070000FC1E00007FFC00000FF0001C247DA223>67
D<FFFFF000FFFFFE0007C01F0007C007C007C003C007C001E007C000F007C000F807C0007807C0
007C07C0003C07C0003C07C0003C07C0003E07C0003E07C0003E07C0003E07C0003E07C0003E07
C0003E07C0003E07C0003E07C0003C07C0003C07C0007C07C0007807C0007807C000F007C001E0
07C003E007C007C007C01F00FFFFFE00FFFFF8001F227EA125>I<000FF018003FFC1800FC0F38
03F003B807C001F80F8000F80F0000F81F0000783E0000783E0000387C0000387C0000387C0000
18F8000018F8000018F8000000F8000000F8000000F8000000F8000000F8000000F8003FFFF800
3FFF7C0000F87C0000F87C0000F83E0000F83E0000F81F0000F80F8000F80F8000F807E001F803
F003F800FE0F38003FFE18000FF80020247DA226>71 D<FFFE7FFFFFFE7FFF07C003E007C003E0
07C003E007C003E007C003E007C003E007C003E007C003E007C003E007C003E007C003E007C003
E007C003E007FFFFE007FFFFE007C003E007C003E007C003E007C003E007C003E007C003E007C0
03E007C003E007C003E007C003E007C003E007C003E007C003E007C003E007C003E0FFFE7FFFFF
FE7FFF20227EA125>I<03FFF803FFF8000F80000F80000F80000F80000F80000F80000F80000F
80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F
80000F80000F80300F80FC0F80FC0F80FC0F80FC1F80F81F00703F007C7E003FF8000FE0001523
7FA119>74 D<FFFE07FF00FFFE07FF0007C003F80007C001E00007C001C00007C003800007C007
000007C00E000007C01C000007C038000007C070000007C0E0000007C1C0000007C3C0000007C7
E0000007CFE0000007CFF0000007DDF8000007F9F8000007F0FC000007E07C000007C07E000007
C03F000007C03F000007C01F800007C00F800007C00FC00007C007E00007C007E00007C003F000
07C003F80007C003FC00FFFE0FFF80FFFE0FFF8021227EA126>I<FFFF0000FFFF000007C00000
07C0000007C0000007C0000007C0000007C0000007C0000007C0000007C0000007C0000007C000
0007C0000007C0000007C0000007C0000007C0000007C0000007C0000007C0000007C0018007C0
018007C0018007C0018007C0038007C0038007C0030007C0070007C0070007C00F0007C03F00FF
FFFF00FFFFFF0019227EA11E>I<FFE00007FFFFF0000FFF07F0000FE007F0000FE006F8001BE0
06F8001BE006F8001BE0067C0033E0067C0033E0067C0033E0063E0063E0063E0063E0063E0063
E0061F00C3E0061F00C3E0061F00C3E0060F8183E0060F8183E0060F8183E00607C303E00607C3
03E00607C303E00603E603E00603E603E00603E603E00601FC03E00601FC03E00601FC03E00600
F803E00600F803E00600F803E01F807003E0FFF0707FFFFFF0707FFF28227EA12D>I<FFE00FFF
FFE00FFF07F001F807F0006007F8006006FC006006FC0060067E0060063E0060063F0060061F80
60061F8060060FC0600607C0600607E0600603F0600603F0600601F8600600F8600600FC600600
7E6006007E6006003F6006001FE006001FE006000FE006000FE0060007E0060003E0060003E006
0001E01F8001E0FFF000E0FFF0006020227EA125>I<03F0600FFE601E1FE03C07E07803E07801
E0F000E0F000E0F00060F00060F80060F80000FC00007E00007FC0007FFC003FFF001FFF800FFF
C001FFE0001FE00007E00003F00001F00001F0C000F0C000F0C000F0E000F0E000F0F001E0F801
E0FC03C0FF0780C7FF00C1FC0014247DA21B>83 D<FFFE0FFFFFFE0FFF07C001F807C0006007C0
006007C0006007C0006007C0006007C0006007C0006007C0006007C0006007C0006007C0006007
C0006007C0006007C0006007C0006007C0006007C0006007C0006007C0006007C0006007C00060
07C0006007C0006007C000E003E000C003E000C001E0018001F0038000F80700007E1E00001FFC
000007F00020237EA125>85 D<FFF83FFE07FEFFF83FFE07FE1FC007F001F80F8003E000E00F80
03E000E007C003F000C007C003F000C007C003F000C003E007F8018003E006F8018003E006F801
8003F006F8038001F00C7C030001F00C7C030001F00C7C030000F8183E060000F8183E060000F8
183E0600007C383F0C00007C301F0C00007C301F0C00007E301F1C00003E600F9800003E600F98
00003E600F9800001FC007F000001FC007F000001FC007F000000FC007E000000F8003E000000F
8003E000000F8003E00000070001C00000070001C00000070001C0002F237FA132>87
D<1FF0007FFC007C3E007C1F007C0F00380F00000F00001F0007FF001FFF003F0F007C0F00F80F
00F00F00F00F18F00F18F01F18F81F187C7FB83FF7F01FC3C015157E9418>97
D<0F0000FF0000FF00001F00000F00000F00000F00000F00000F00000F00000F00000F00000F00
000F00000F1F800FFFE00FE1F00F80780F003C0F003C0F001C0F001E0F001E0F001E0F001E0F00
1E0F001E0F001E0F003C0F003C0F807C0F80F80FE1F00E7FE00C3F8017237FA21B>I<03FE000F
FF801F0F803E0F803C0F80780700780000F00000F00000F00000F00000F00000F00000F0000078
00007800C03C01C03E01801F87800FFF0003FC0012157E9416>I<0001E0001FE0001FE00003E0
0001E00001E00001E00001E00001E00001E00001E00001E00001E00001E003F9E00FFFE01F0FE0
3E03E07C01E07801E07801E0F001E0F001E0F001E0F001E0F001E0F001E0F001E07001E07801E0
7803E03C07E01F0FF00FFDFE03F1FE17237EA21B>I<01FC0007FF001F0F803E03C03C01C07801
E07801E0FFFFE0FFFFE0F00000F00000F00000F00000F000007800007800603C00E03E01C00F83
C007FF0001FC0013157F9416>I<003F0000FF0001FF8003EF8003CF80078F8007800007800007
8000078000078000078000078000078000FFF800FFF80007800007800007800007800007800007
80000780000780000780000780000780000780000780000780000780000780000780007FFC007F
FC00112380A20F>I<0F0000FF0000FF00001F00000F00000F00000F00000F00000F00000F0000
0F00000F00000F00000F00000F1F800F7FE00FE1E00FC1F00F80F00F80F00F00F00F00F00F00F0
0F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F0FFF3FFFFF3FF18237F
A21B>104 D<0E001F001F001F000E00000000000000000000000000000000000F00FF00FF001F
000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F00FFE0FFE00B2280A1
0D>I<0F0000FF0000FF00001F00000F00000F00000F00000F00000F00000F00000F00000F0000
0F00000F00000F0FFC0F0FFC0F07E00F07C00F07000F0E000F1C000F38000F7C000FFC000FFE00
0FBF000F1F000F0F800F0FC00F07C00F03E00F03E00F03F0FFE7FEFFE7FE17237FA21A>107
D<0F00FF00FF001F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F00
0F000F000F000F000F000F000F000F000F000F000F000F000F000F00FFF0FFF00C2380A20D>I<
0F1FC0FE00FF7FF3FF80FFF1F78F801FC0FE07C00F807C03C00F807C03C00F007803C00F007803
C00F007803C00F007803C00F007803C00F007803C00F007803C00F007803C00F007803C00F0078
03C00F007803C00F007803C00F007803C0FFF3FF9FFCFFF3FF9FFC26157F9429>I<0F1F80FF7F
E0FFE1E01FC1F00F80F00F80F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00
F00F00F00F00F00F00F00F00F0FFF3FFFFF3FF18157F941B>I<01FC0007FF000F07801C01C038
00E07800F0700070F00078F00078F00078F00078F00078F00078F000787000707800F03800E01C
01C00F078007FF0001FC0015157F9418>I<0F1F80FFFFE0FFE1F00F80F80F007C0F003C0F003C
0F001E0F001E0F001E0F001E0F001E0F001E0F003E0F003C0F003C0F807C0F80F80FE1F00F7FE0
0F3F800F00000F00000F00000F00000F00000F00000F00000F0000FFF000FFF000171F7F941B>
I<0F7CFFFFFFDF1F9F0F9F0F0E0F000F000F000F000F000F000F000F000F000F000F000F000F00
FFF8FFF810157F9413>114 D<1FD83FF87878F038E018E018F000FC00FFC07FF03FF80FF800FC
C03CC01CE01CE01CF03CF878FFF0CFE00E157E9413>I<03000300030003000700070007000F00
1F003F00FFF8FFF80F000F000F000F000F000F000F000F000F000F000F0C0F0C0F0C0F0C0F0C0F
1C079807F801F00E1F7F9E13>I<0F00F0FF0FF0FF0FF01F01F00F00F00F00F00F00F00F00F00F
00F00F00F00F00F00F00F00F00F00F00F00F00F00F01F00F01F00F03F00787F807FEFF01FCFF18
157F941B>I<FFE3FEFFE3FE1F00F80F00700F00E00780C00780C007C0C003C18003C18003E380
01E30001E30000F60000F60000FE00007C00007C00007C0000380000380017157F941A>I<FF8F
F9FFFF8FF9FF1F03E07C0F01C0380F01E0300F01E0300783E0600783F0600783F06003C670C003
C678C003C678C001EC398001EC3D8001EC3D8000F81F0000F81F0000F81F0000700E0000700E00
00700E0020157F9423>I<FFE3FEFFE3FE1F00F80F00700F00E00780C00780C007C0C003C18003
C18003E38001E30001E30000F60000F60000FE00007C00007C00007C0000380000380000300000
3000007000006000F86000F8C000F9C000FB80007F00003E0000171F7F941A>121
D<3FFFC03FFFC03C0FC0380F80301F00703E00607E00607C0060F80001F00003F00003E0C007C0
C00F80C01F80C01F01C03E01807C0380FC0780FFFF80FFFF8012157F9416>I
E /Fk 21 118 df<00000300000000000780000000000780000000000780000000000FC0000000
000FC0000000000FC0000000001BE0000000001BE0000000001BE00000000031F00000000031F0
0000000031F00000000060F80000000060F80000000060F800000000C07C00000000C07C000000
01C07E00000001803E00000001803E00000003803F00000003001F00000003001F00000007001F
80000006000F80000006000F8000000C000FC000000C0007C000000C0007C00000180003E00000
1FFFFFE000001FFFFFE00000300001F00000300001F00000300001F00000600000F80000600000
F80000600000F80000C000007C0000C000007C0001C000007E00018000003E00018000003E0003
8000003F00038000001F00078000001F801FC000003F80FFF80003FFFCFFF80003FFFC2E327EB1
32>65 D<FFFFFFE00000FFFFFFFC000007E0007F000003E0000F800003E00007C00003E00001E0
0003E00000F00003E00000780003E000007C0003E000003E0003E000003E0003E000001F0003E0
00001F0003E000000F8003E000000F8003E000000FC003E000000FC003E0000007C003E0000007
C003E0000007E003E0000007E003E0000007E003E0000007E003E0000007E003E0000007E003E0
000007E003E0000007E003E0000007E003E0000007E003E0000007E003E0000007C003E0000007
C003E0000007C003E000000FC003E000000F8003E000000F8003E000000F8003E000001F0003E0
00001F0003E000003E0003E000007C0003E00000780003E00000F80003E00001F00003E00007E0
0003E0000F800007E0007F0000FFFFFFFC0000FFFFFFE000002B317CB033>68
D<FFFF807FFFC0FFFF807FFFC007F00003F80003E00001F00003E00001F00003E00001F00003E0
0001F00003E00001F00003E00001F00003E00001F00003E00001F00003E00001F00003E00001F0
0003E00001F00003E00001F00003E00001F00003E00001F00003E00001F00003E00001F00003E0
0001F00003E00001F00003E00001F00003E00001F00003FFFFFFF00003FFFFFFF00003E00001F0
0003E00001F00003E00001F00003E00001F00003E00001F00003E00001F00003E00001F00003E0
0001F00003E00001F00003E00001F00003E00001F00003E00001F00003E00001F00003E00001F0
0003E00001F00003E00001F00003E00001F00003E00001F00003E00001F00003E00001F00003E0
0001F00007F00003F800FFFF807FFFC0FFFF807FFFC02A317CB032>72 D<FFF00000007FF8FFF8
000000FFF807F8000000FF0003F8000000FE00037C000001BE00037C000001BE00037C000001BE
00033E0000033E00033E0000033E00033E0000033E00031F0000063E00031F0000063E00031F00
00063E00030F80000C3E00030F80000C3E00030F80000C3E000307C000183E000307C000183E00
0307C000183E000303E000303E000303E000303E000303E000303E000301F000603E000301F000
603E000301F000C03E000300F800C03E000300F800C03E0003007C01803E0003007C01803E0003
007C01803E0003003E03003E0003003E03003E0003003E03003E0003001F06003E0003001F0600
3E0003001F06003E0003000F8C003E0003000F8C003E0003000F8C003E00030007D8003E000300
07D8003E00030007D8003E00030003F0003E00030003F0003E00030003F0003E00078001E0003E
000FC001E0007F00FFFC01E00FFFF8FFFC00C00FFFF835317CB03D>77 D<007F806003FFF06007
C0F8E00F003CE01E000FE03C0007E03C0003E0780003E0780001E0F00001E0F00000E0F00000E0
F00000E0F0000060F8000060F8000060F80000007C0000007E0000007F0000003FC000001FFC00
001FFFC0000FFFF80003FFFE0000FFFF00001FFF800001FFC000001FE0000007E0000003F00000
01F0000001F8000000F8000000F8C0000078C0000078C0000078C0000078E0000078E0000078E0
000070F00000F0F00000F0F80001E0FC0001E0FF0003C0E7800F80E3F01F00C0FFFC00C01FF000
1D337CB125>83 D<7FFFFFFFFFE07FFFFFFFFFE07F000F800FE07C000F8003E078000F8000E070
000F8000E060000F80006060000F800060E0000F800070E0000F800070C0000F800030C0000F80
0030C0000F800030C0000F800030C0000F800030C0000F80003000000F80000000000F80000000
000F80000000000F80000000000F80000000000F80000000000F80000000000F80000000000F80
000000000F80000000000F80000000000F80000000000F80000000000F80000000000F80000000
000F80000000000F80000000000F80000000000F80000000000F80000000000F80000000000F80
000000000F80000000000F80000000000F80000000000F80000000000F80000000000F80000000
000F80000000000F80000000001FC00000000FFFFF8000000FFFFF80002C317EB030>I<03FF00
001FFFC0003E03F0003F00F8003F007C003F003C003F003E001E001E0000001E0000001E000000
1E0000001E000003FE00007FFE0003FF1E0007F01E001FC01E003F001E007E001E007C001E00FC
001E00F8001E0CF8001E0CF8001E0CF8003E0CFC007E0C7C007E0C7E01FF1C3F87CFB81FFF07F0
03FC03C01E1F7D9E21>97 D<003FE001FFFC03E03E07C07E0F007E1F007E3E007E3C003C7C0000
7C0000780000F80000F80000F80000F80000F80000F80000F80000F80000F800007C00007C0000
7C00003E00033E00071F00060F800E07C01C03F07801FFF0003F80181F7D9E1D>99
D<000001E000003FE000003FE0000003E0000001E0000001E0000001E0000001E0000001E00000
01E0000001E0000001E0000001E0000001E0000001E0000001E0000001E0000001E0000001E000
3F81E001FFF1E003F079E007C01FE00F800FE01F0007E03E0003E03C0001E07C0001E07C0001E0
780001E0F80001E0F80001E0F80001E0F80001E0F80001E0F80001E0F80001E0F80001E0F80001
E0780001E07C0001E07C0001E03C0003E03E0003E01E0007E01F000FE00FC03DE007E0F9F001FF
E1FF007F81FF20327DB125>I<003F800001FFF00003E1F80007807C000F003E001E001E003E00
1F003C000F007C000F807C000F8078000F80F8000780FFFFFF80FFFFFF80F8000000F8000000F8
000000F8000000F8000000F80000007C0000007C0000007C0000003E0001803E0003801F000300
0F80070007E00E0003F83C0000FFF800003FC000191F7E9E1D>I<0003F0001FFC003E3E00787E
00F07E01E07E01E07E03E03C03C00003C00003C00003C00003C00003C00003C00003C00003C000
03C00003C000FFFFC0FFFFC003C00003C00003C00003C00003C00003C00003C00003C00003C000
03C00003C00003C00003C00003C00003C00003C00003C00003C00003C00003C00003C00003C000
03C00003C00003C00003C00007E0007FFF007FFF0017327FB114>I<0780000000FF80000000FF
800000000F80000000078000000007800000000780000000078000000007800000000780000000
078000000007800000000780000000078000000007800000000780000000078000000007800000
0007800000000781FE00000787FF8000079E0FC00007B803E00007F001E00007E001F00007E000
F00007C000F00007C000F000078000F000078000F000078000F000078000F000078000F0000780
00F000078000F000078000F000078000F000078000F000078000F000078000F000078000F00007
8000F000078000F000078000F000078000F000078000F000078000F0000FC001F800FFFC1FFF80
FFFC1FFF8021327EB125>104 D<0F001F801F801FC01F801F800F000000000000000000000000
0000000000000000000780FF80FF800F8007800780078007800780078007800780078007800780
07800780078007800780078007800780078007800780078007800FC0FFF8FFF80D307EAF12>I<
0780FF80FF800F8007800780078007800780078007800780078007800780078007800780078007
800780078007800780078007800780078007800780078007800780078007800780078007800780
078007800780078007800780078007800FC0FFFCFFFC0E327EB112>108
D<0781FE0000FF87FF8000FF9E0FC0000FB803E00007F001E00007E001F00007E000F00007C000
F00007C000F000078000F000078000F000078000F000078000F000078000F000078000F0000780
00F000078000F000078000F000078000F000078000F000078000F000078000F000078000F00007
8000F000078000F000078000F000078000F000078000F0000FC001F800FFFC1FFF80FFFC1FFF80
211F7E9E25>110 D<001FC00000FFF80001E03C0007800F000F0007801E0003C01E0003C03C00
01E03C0001E0780000F0780000F0780000F0F80000F8F80000F8F80000F8F80000F8F80000F8F8
0000F8F80000F8F80000F8780000F07C0001F03C0001E03C0001E01E0003C01E0003C00F000780
07C01F0001F07C0000FFF800001FC0001D1F7E9E21>I<0781FE00FF87FF80FF9F0FE00FB803F0
07F001F807E000F807C0007C0780007C0780003E0780003E0780003E0780001F0780001F078000
1F0780001F0780001F0780001F0780001F0780001F0780003F0780003E0780003E0780007E07C0
007C07C000FC07E000F807F001F007B803E0079E0FC0078FFF800781FC00078000000780000007
80000007800000078000000780000007800000078000000780000007800000078000000FC00000
FFFC0000FFFC0000202D7E9E25>I<0787F0FF8FF8FFBC7C0FB87C07F07C07E07C07E00007C000
07C00007C000078000078000078000078000078000078000078000078000078000078000078000
0780000780000780000780000780000780000780000FC000FFFE00FFFE00161F7E9E19>114
D<03FE300FFFF03E07F07801F07000F0E00070E00070E00030E00030F00030F800007F00007FF0
003FFF000FFFC003FFE0003FF00003F80000F8C0007CC0003CE0001CE0001CE0001CF0001CF800
38F80038FC00F0EF03F0C7FFC0C1FF00161F7E9E1A>I<00C00000C00000C00000C00000C00001
C00001C00001C00003C00003C00007C0000FC0001FC000FFFFE0FFFFE003C00003C00003C00003
C00003C00003C00003C00003C00003C00003C00003C00003C00003C00003C00003C00003C00003
C03003C03003C03003C03003C03003C03003C03003C07001E06001E0E000F9C000FFC0003F0014
2C7FAB19>I<078000F000FF801FF000FF801FF0000F8001F000078000F000078000F000078000
F000078000F000078000F000078000F000078000F000078000F000078000F000078000F0000780
00F000078000F000078000F000078000F000078000F000078000F000078000F000078000F00007
8001F000078001F000078001F000078003F00003C007F00003C00EF00001F03CF80000FFF8FF80
003FC0FF80211F7E9E25>I E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin

%%EndSetup
%%Page: 1 1
1 0 bop 458 236 a Fk(The)21 b(Stanford)g(D)n(ASH)g(Multipro)r(cessor)157
388 y Fj(Daniel)d(Lenoski,)f(James)f(Laudon,)h(Kourosh)h(Gharac)o(horlo)q(o,)
g(W)l(olf-Dietric)o(h)g(W)l(eb)q(er)291 452 y(Ano)q(op)f(Gupta,)g(John)g
(Hennessy)l(,)e(Mark)h(Horo)o(witz)g(and)h(Monica)g(Lam)646
516 y(Computer)f(Systems)g(Lab)q(oratory)648 580 y(Stanford)h(Univ)o(ersit)o
(y)l(,)f(CA)g(94305)772 703 y(No)o(v)o(em)o(b)q(er)e(25,)j(1992)101
892 y Fi(D)o(ASH)c(\(Directory)f(Arc)o(hitecture)h(for)g(SHared-memory\))e
(is)i(a)g(shared-memory)e(m)o(ultipro)q(cessor)g(cur-)30 954
y(ren)o(tly)h(b)q(eing)h(dev)o(elop)q(ed)g(in)f(the)h(Computer)e(Systems)g
(Lab)q(oratory)h(at)g(Stanford)g(Univ)o(ersit)o(y)l(.)17 b(The)c(funda-)30
1016 y(men)o(tal)d(premise)i(b)q(ehind)h(the)g(arc)o(hitecture)e(is)h(that)g
(it)g(is)g(p)q(ossible)g(to)f(build)i(a)f(scalable)g(high-p)q(erformance)30
1078 y(mac)o(hine)h(with)h(a)g(single)g(address)g(space)h(and)f(coheren)o(t)h
(cac)o(hes.)20 b(The)14 b(arc)o(hitecture)g(is)g(scalable)g(in)g(that)f(it)30
1140 y(can)k(pro)o(vide)f(linear)f(or)h(near)h(linear)f(p)q(erformance)f(gro)
o(wth)h(from)e(a)j(few)f(pro)q(cessors)g(to)g(a)g(few)h(thousand)30
1203 y(pro)q(cessors.)i(This)14 b(is)g(ac)o(hiev)o(ed)h(b)o(y)f(distributing)
f(the)h(memory)e(among)h(the)h(pro)q(cessing)h(no)q(des)g(and)f(in)o(ter-)30
1265 y(connecting)j(these)h(no)q(des)g(using)f(a)g(net)o(w)o(ork)g(with)f
(scalable)h(bandwidth.)26 b(By)18 b(allo)o(wing)d(shared)j(data)e(to)30
1327 y(b)q(e)f(cac)o(hed,)g(the)g(arc)o(hitecture)f(signi\014can)o(tly)f
(reduces)i(the)g(latency)f(of)g(memory)e(accesses)j(yielding)f(higher)30
1389 y(pro)q(cessor)i(utilization)e(and)j(higher)f(o)o(v)o(erall)e(p)q
(erformance.)22 b(A)16 b(distributed)g(directory-based)g(proto)q(col)f(is)30
1451 y(used)h(to)e(pro)o(vide)h(cac)o(he)h(coherence)g(without)e
(compromising)e(scalabilit)o(y)l(.)101 1533 y(The)19 b(D)o(ASH)f(protot)o(yp)
q(e)h(system)e(is)h(the)h(\014rst)g(op)q(erational)e(mac)o(hine)h(to)g
(include)i(a)e(scalable)g(cac)o(he-)30 1595 y(coherence)k(mec)o(hanism.)35
b(The)22 b(protot)o(yp)q(e)e(incorp)q(orates)g(up)i(to)f(64)f(high)h(p)q
(erformance)f(RISC)i(micro-)30 1657 y(pro)q(cessors)d(to)g(yield)g(p)q
(erformance)f(up)i(to)f(1.6)f(GIPS)i(and)f(600)f(scalar)h(MFLOPS.)g(The)g
(design)h(of)f(the)30 1719 y(protot)o(yp)q(e)12 b(has)h(pro)o(vided)f(deep)q
(er)i(insigh)o(t)e(in)o(to)f(the)i(arc)o(hitectural)e(and)i(implemen)o(tatio)
o(n)d(c)o(hallenges)i(that)30 1781 y(arise)17 b(in)h(a)g(large)f(scale)h(mac)
o(hine)e(with)i(a)f(single)h(address)g(space.)28 b(The)19 b(protot)o(yp)q(e)e
(will)g(also)g(serv)o(e)g(as)h(a)30 1843 y(platform)13 b(for)h(studying)h
(real)g(applications)e(and)j(soft)o(w)o(are)d(on)i(a)g(large)f(parallel)g
(system.)101 1925 y(This)21 b(article)h(b)q(egins)g(b)o(y)g(describing)g(the)
h(o)o(v)o(erall)d(goals)h(for)h(D)o(ASH,)g(the)g(ma)s(jor)e(features)i(of)g
(the)30 1987 y(arc)o(hitecture,)f(and)f(the)g(metho)q(ds)g(for)f(ac)o
(hieving)h(scalabilit)o(y)l(.)33 b(Next,)21 b(the)g(directory-based)f
(coherence)30 2049 y(proto)q(col)f(is)h(describ)q(ed)i(in)e(detail.)35
b(W)l(e)20 b(then)h(pro)o(vide)f(an)h(o)o(v)o(erview)e(of)h(the)h(protot)o
(yp)q(e)e(mac)o(hine)h(and)30 2111 y(the)f(corresp)q(onding)g(soft)o(w)o(are)
e(supp)q(ort.)30 b(In)20 b(addition,)e(some)g(preliminary)e(p)q(erformance)i
(n)o(um)o(b)q(ers)g(are)30 2173 y(presen)o(ted.)31 b(The)19
b(article)f(concludes)h(with)f(a)h(discussion)f(of)h(related)f(w)o(ork)g(and)
h(the)g(curren)o(t)f(hardw)o(are)30 2235 y(and)d(soft)o(w)o(are)f(status.)30
2404 y Fh(1)69 b(D)n(ASH)23 b(System)d(Ov)n(erview)h(and)j(Rationale)30
2531 y Fi(The)17 b(o)o(v)o(erall)f(goal)f(of)i(the)g(D)o(ASH)g(pro)s(ject)g
(is)f(to)h(in)o(v)o(estigate)e(highly)h(parallel)g(arc)o(hitectures.)25
b(F)l(or)17 b(these)30 2593 y(arc)o(hitectures)c(to)f(ac)o(hiev)o(e)h
(widespread)h(usage)f(it)f(is)h(imp)q(ortan)o(t)e(that)i(they)g(e\016cien)o
(tly)g(run)g(a)g(wide)h(v)m(ariet)o(y)30 2655 y(of)e(applications)g(without)f
(excessiv)o(e)i(programmi)o(ng)d(di\016cult)o(y)l(.)19 b(T)l(o)12
b(ac)o(hiev)o(e)g(b)q(oth)h(high)g(p)q(erformance)f(and)30
2717 y(wide)f(applicabilit)o(y)l(,)f(w)o(e)h(b)q(eliev)o(e)g(a)g(parallel)e
(arc)o(hitecture)i(m)o(ust)e(pro)o(vide)i(scalabilit)o(y)e(to)i(supp)q(ort)g
(h)o(undreds)30 2779 y(to)j(thousands)g(of)f(pro)q(cessors,)h(high-p)q
(erformance)g(individual)f(pro)q(cessors,)h(and)g(a)g(single)f(shared)i
(address)964 2904 y(1)p eop
%%Page: 2 2
2 1 bop 30 45 a Fi(space.)101 127 y(The)16 b(shrinking)g(gap)g(b)q(et)o(w)o
(een)h(the)f(computing)f(p)q(o)o(w)o(er)h(of)g(micropro)q(cessors)e(and)i
(the)h(largest)e(sup)q(er-)30 189 y(computers,)f(and)h(the)g(increasing)g
(price/p)q(erformance)f(adv)m(an)o(tage)h(of)f(micropro)q(cessors)f(clearly)i
(p)q(oin)o(t)f(to)30 251 y(using)k(them)f(as)h(the)h(compute)e(engines)i(in)f
(a)g(m)o(ultipro)q(cessor.)27 b(The)18 b(c)o(hallenge)g(lies)g(in)g(building)
g(a)g(ma-)30 313 y(c)o(hine)h(that)f(can)h(scale)g(up)g(its)f(p)q(erformance)
g(and)h(cost)f(prop)q(ortionally)f(while)i(main)o(taining)d(the)j(initial)30
375 y(price/p)q(erformance)9 b(adv)m(an)o(tage)h(of)g(the)h(individual)e(pro)
q(cessors.)18 b(Our)11 b(in)o(terest)e(in)h(scalabilit)o(y)f(is)g(to)h(pro)o
(vide)30 437 y(a)g(system)f(that)h(pro)o(vides)g(near)g(linear)g(p)q
(erformance)g(gro)o(wth)f(and)h(relativ)o(ely)f(constan)o(t)h(price/p)q
(erformance)30 499 y(from)18 b(a)h(small)e(n)o(um)o(b)q(er)h(of)h(pro)q
(cessors)g(in)o(to)g(the)g(range)g(of)g(h)o(undreds)h(or)f(a)g(few)g
(thousand)g(pro)q(cessors.)30 561 y(Scalabilit)o(y)12 b(allo)o(ws)g(a)h
(parallel)g(arc)o(hitecture)g(to)g(lev)o(erage)g(commo)q(dit)o(y)d(micropro)q
(cessors)i(and)i(small-scale)30 624 y(m)o(ultipro)q(cessors)e(to)i(build)g
(larger-scale)g(mac)o(hines.)k(These)d(larger)e(mac)o(hines)h(o\013er)f
(substan)o(tially)g(higher)30 686 y(p)q(erformance,)f(and)h(can)g(pro)o(vide)
f(the)h(imp)q(etus)f(for)h(programm)o(ers)d(to)i(p)q(ort)h(their)f(sequen)o
(tial)g(applications)30 748 y(to)j(parallel)e(arc)o(hitectures)i(instead)g
(of)f(w)o(aiting)g(for)g(the)i(next)f(higher)g(p)q(erformance)f(unipro)q
(cessor.)101 829 y(High)i(p)q(erformance)g(pro)q(cessors)g(are)g(imp)q(ortan)
o(t)e(to)i(ac)o(hiev)o(e)g(b)q(oth)h(high)f(total)f(system)h(p)q(erformance)
30 892 y(and)j(general)g(applicabilit)o(y)l(.)30 b(Using)18
b(the)i(fastest)e(micropro)q(cessors)f(reduces)j(the)f(impact)f(of)g(limited)
f(or)30 954 y(unev)o(en)f(parallelism)d(inheren)o(t)j(within)e(some)h
(applications,)f(and)h(allo)o(ws)f(a)h(wider)h(set)f(of)g(applications)f(to)
30 1016 y(exhibit)h(acceptable)g(p)q(erformance)f(with)h(less)g(e\013ort)f
(from)f(the)j(programm)o(er.)101 1097 y(A)j(single)f(address)i(space)f
(greatly)f(aids)h(in)g(programm)o(abili)o(t)o(y)d(of)j(a)g(parallel)e(mac)o
(hine)h(b)o(y)h(reducing)30 1160 y(the)i(problems)e(of)i(data)f(partitioning)
f(and)h(dynamic)g(load)g(distribution,)h(t)o(w)o(o)e(of)i(the)f(toughest)h
(prob-)30 1222 y(lems)13 b(in)i(programming)c(parallel)j(mac)o(hines.)k(The)d
(shared)g(address)g(space)h(also)d(pro)o(vides)i(b)q(etter)g(supp)q(ort)30
1284 y(for)i(automatical)o(ly)d(parallelizing)h(compilers,)h(standard)h(op)q
(erating)f(systems,)g(m)o(ultiprogram)o(m)o(i)o(ng,)f(and)30
1346 y(incremen)o(tal)k(tuning)i(of)g(parallel)e(applications.)37
b(The)21 b(ab)q(o)o(v)o(e)g(features)f(mak)o(e)g(a)h(single-address-space)30
1408 y(mac)o(hine)14 b(m)o(uc)o(h)g(easier)h(to)f(use)i(relativ)o(e)e(to)g(a)
h(message)f(passing)g(mac)o(hine.)101 1490 y(Cac)o(hing)20
b(of)g(memory)l(,)f(including)i(shared)f(writable)g(data,)h(allo)o(ws)e(m)o
(ultipro)q(cessors)f(with)i(a)g(single)30 1552 y(address)g(space)g(to)f(ac)o
(hiev)o(e)g(high)h(p)q(erformance)f(through)g(reduced)i(memory)c(latency)l(.)
34 b(Unfortunately)l(,)30 1614 y(cac)o(hing)11 b(of)g(shared)g(data)g(in)o
(tro)q(duces)g(the)g(problem)f(of)h(cac)o(he)g(coherence)h(\(see)f(Figure)g
(1\).)18 b(While)10 b(hardw)o(are)30 1676 y(supp)q(ort)19 b(for)g(cac)o(he)g
(coherence)i(has)e(its)f(costs,)h(it)g(also)f(pro)o(vides)h(man)o(y)e(b)q
(ene\014ts.)33 b(Without)18 b(hardw)o(are)30 1738 y(supp)q(ort,)d(the)g(resp)
q(onsibilit)o(y)f(for)h(coherence)h(m)o(ust)e(b)q(e)i(placed)f(on)h(the)f
(user)g(or)g(compiler.)k(Exp)q(osing)c(the)30 1800 y(issue)g(of)g(coherence)i
(to)d(the)i(user)f(w)o(ould)g(lead)g(to)g(a)g(complex)f(programming)e(mo)q
(del,)i(where)h(users)h(migh)o(t)30 1862 y(w)o(ell)i(a)o(v)o(oid)g(cac)o
(hing)h(to)f(ease)h(the)g(programming)d(burden.)32 b(Handling)19
b(the)g(coherence)h(problem)e(in)h(the)30 1924 y(compiler)11
b(is)i(attractiv)o(e,)e(but)i(cannot)g(curren)o(tly)g(b)q(e)h(done)f(in)g(a)g
(w)o(a)o(y)f(that)h(is)f(comp)q(etitiv)o(e)f(with)i(hardw)o(are.)30
1986 y(With)h(hardw)o(are-supp)q(orted)h(cac)o(he)g(coherence,)h(the)f
(compiler)e(can)i(aggressiv)o(ely)f(optimize)f(programs)f(to)30
2049 y(reduce)k(latency)f(without)f(ha)o(ving)h(to)f(rely)h(purely)g(on)g(a)g
(conserv)m(ativ)o(e)g(static)f(dep)q(endence)k(analysis.)101
2130 y(The)d(ma)s(jor)e(problem)h(with)g(existing)g(cac)o(he-coheren)o(t)i
(shared)f(address)h(mac)o(hines)e(is)g(that)h(they)g(ha)o(v)o(e)30
2192 y(not)g(demonstrated)f(the)h(abilit)o(y)f(to)g(e\013ectiv)o(ely)h(scale)
g(b)q(ey)o(ond)g(a)g(few)h(high-p)q(erformance)e(pro)q(cessors.)20
b(T)l(o)30 2254 y(date,)i(only)f(message)e(passing)i(mac)o(hines)e(ha)o(v)o
(e)i(sho)o(wn)g(this)f(abilit)o(y)l(.)36 b(W)l(e)21 b(b)q(eliev)o(e)h(that)e
(the)h(use)g(of)g(a)30 2316 y(directory-based)14 b(coherence)h(mec)o(hanism)d
(will)i(p)q(ermit)f(single-address-space)h(mac)o(hines)f(to)h(scale)g(as)g(w)
o(ell)30 2379 y(as)h(message)f(passing)g(mac)o(hines)g(while)h(pro)o(viding)f
(a)h(more)f(\015exible)h(and)g(general)g(programmi)o(ng)e(mo)q(del.)30
2526 y Fg(1.1)56 b(D)n(ASH)19 b(Organization)30 2637 y Fi(Most)g(existing)h
(m)o(ultipro)q(cessors)e(with)h(cac)o(he)i(coherence)g(rely)f(on)g(sno)q
(oping)h(to)e(main)o(tain)f(coherence.)30 2699 y(Unfortunately)l(,)13
b(sno)q(oping)h(sc)o(hemes)g(distribute)f(the)h(information)d(ab)q(out)j
(whic)o(h)g(pro)q(cessors)g(are)g(cac)o(hing)30 2761 y(whic)o(h)k(data)f
(items)g(among)f(the)i(cac)o(hes.)28 b(Th)o(us,)19 b(straigh)o(tforw)o(ar)o
(d)d(sno)q(oping)h(sc)o(hemes)h(require)f(that)h(all)964 2904
y(2)p eop
%%Page: 3 3
3 2 bop -53 4 a
 32457747 42152922 1907671 4670504 48612720 64795033 startTexFig
 -53 4 a
%%BeginDocument: empty.ps
%%EndDocument
 -53 4 a
%%BeginDocument: cache_coh.ps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: FreeHand
%%Title: cache_coh.sidebar
%%CreationDate: 4/25/91 5:12 PM
%%BoundingBox: 29 71 739 985
%%DocumentProcSets: FreeHand_header 2 0
%%DocumentSuppliedProcSets: FreeHand_header 2 0
%%ColorUsage: Color
%%CMYKProcessColor: 0 0 0 0.1  (10% gray)
%%+ 0 0 0 0.2  (20% gray)
%%+ 0 0 0 0.4  (40% gray)
%%+ 0 0 0 0.6  (60% gray)
%%+ 0 0 0 0.8  (80% gray)
%%DocumentFonts: Symbol
%%+Times-Roman
%%+Times-Italic
%%+Times-Bold
%%+Courier
%%DocumentNeededFonts: Symbol
%%+Times-Roman
%%+Times-Italic
%%+Times-Bold
%%+Courier
%%EndComments
%%BeginProcSet: FreeHand_header 2 0
/FreeHandDict 200 dict def
FreeHandDict begin
/currentpacking where{pop true setpacking}if
/bdf{bind def}bind def
/bdef{bind def}bdf
/xdf{exch def}bdf
/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf
/min{2 copy gt{exch}if pop}bdf
/max{2 copy lt{exch}if pop}bdf
/dr{transform .25 sub round .25 add
exch .25 sub round .25 add exch itransform}bdf
/curveto{dr curveto}bdf
/lineto{dr lineto}bdf
/moveto{dr moveto}bdf
/graystep 1 256 div def
/bottom -0 def
/delta -0 def
/frac -0 def
/left -0 def
/numsteps -0 def
/numsteps1 -0 def
/radius -0 def
/right -0 def
/top -0 def
/x -0 def
/y -0 def
/df currentflat def
/tempstr 1 string def
/clipflatness 3 def
/inverted?
0 currenttransfer exec .5 ge def
/concatprocs{
/proc2 exch cvlit def/proc1 exch cvlit def
/newproc proc1 length proc2 length add array def
newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval
newproc cvx}bdf
/storerect{/top xdf/right xdf/bottom xdf/left xdf}bdf
/rectpath{newpath left bottom moveto left top lineto
right top lineto right bottom lineto closepath}bdf
/sf{dup 0 eq{pop df dup 3 mul}{dup} ifelse /clipflatness xdf setflat}bdf
version cvr 38.0 le
{/setrgbcolor{
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
setrgbcolor}bdf}if
/gettint{0 get}bdf
/puttint{0 exch put}bdf
/vms{/vmsv save def}bdf
/vmr{vmsv restore}bdf
/vmrs{vmr vms}bdf
/CD{/NF exch def
{exch dup/FID ne{exch NF 3 1 roll put}
{pop pop}ifelse}forall NF}bdf
/MN{1 index length/Len exch def
dup length Len add string dup
Len 4 -1 roll putinterval dup 0 4 -1 roll putinterval}bdf
/RC{256 string cvs(|______)anchorsearch
{1 index MN cvn/NewN exch def cvn
findfont dup maxlength dict CD dup/FontName NewN put dup
/Encoding MacVec put NewN exch definefont pop}{pop}ifelse}bdf
/RF{dup FontDirectory exch known{pop}{RC}ifelse}bdf
/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known
{exch}if pop findfont}bdf
userdict begin /BDFontDict 20 dict def end
BDFontDict begin
/bu{}def
/bn{}def
/setTxMode{pop}def
/gm{moveto}def
/show{pop}def
/gr{pop}def
/fnt{pop pop pop}def
/fs{pop}def
/fz{pop}def
/lin{pop pop}def
end
/MacVec 256 array def
MacVec 0 /Helvetica findfont
/Encoding get 0 128 getinterval putinterval
MacVec 127 /DEL put MacVec 16#27 /quotesingle put MacVec 16#60 /grave put
/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI
/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/US
MacVec 0 32 getinterval astore pop
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/register/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/nbspace/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase
/perthousand/Acircumflex/Ecircumflex/Aacute
/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex
/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacVec 128 128 getinterval astore pop
/fps{currentflat exch dup 0 le{pop 1}if
{dup setflat 3 index stopped
{1.3 mul dup 3 index gt{pop setflat pop pop stop}if}{exit}ifelse
}loop pop setflat pop pop
}bdf
/fp{100 currentflat fps}bdf
/rfp{clipflatness currentflat fps}bdf
/fcp{100 clipflatness fps}bdf
/fclip{{clip}fcp}bdf
/feoclip{{eoclip}fcp}bdf
end %. FreeHandDict
%%EndProcSet
%%BeginSetup
FreeHandDict begin
/ccmyk{dup 5 -1 roll sub 0 max exch}ndf
/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf
/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf
/findcmykcustomcolor{5 /packedarray where{pop packedarray}{array astore readonly}ifelse}ndf
/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf
/setseparationgray{1 exch sub dup dup dup setcmykcolor}ndf
/setoverprint{pop}ndf
/currentoverprint false ndf
/colorimage{pop pop
[5 -1 roll/exec cvx 6 -1 roll/exec cvx 7 -1 roll/exec cvx 8 -1 roll/exec cvx
/exch cvx/pop cvx/exch cvx/pop cvx/exch cvx/pop cvx/invbuf cvx]cvx image}
%. version 47.1 of Postscript defines colorimage incorrectly (rgb model only)
version cvr 47.1 le{userdict begin bdf end}{ndf}ifelse
/customcolorimage{pop image}ndf
/separationimage{image}ndf
/newcmykcustomcolor{6 /packedarray where{pop packedarray}{array astore readonly}ifelse}ndf
/inkoverprint false ndf
/setinkoverprint{pop}ndf
/overprintprocess{pop}ndf
/setspotcolor
{spots exch get 0 5 getinterval exch setcustomcolor}ndf
/currentcolortransfer{currenttransfer dup dup dup}ndf
/setcolortransfer{systemdict begin settransfer end pop pop pop}ndf
/setimagecmyk{dup length 4 eq
{aload pop}
{aload pop spots exch get 0 4 getinterval aload pop 4
{4 index mul 4 1 roll}repeat 5 -1 roll pop} ifelse
systemdict /colorimage known{version cvr 47.1 gt}{false}ifelse
not{pop 1 currentgray sub}if
/ik xdf /iy xdf /im xdf /ic xdf
}ndf
/setcolor{dup length 4 eq
{aload overprintprocess setcmykcolor}
{aload 1 get spots exch get 5 get setinkoverprint setspotcolor}
ifelse}ndf
/bc2[0 0]def
/bc4[0 0 0 0]def
/c1[0 0 0 0]def
/c2[0 0 0 0]def
/absmax{2 copy abs exch abs gt{exch}if pop}bdf
/calcstep
{c1 length 4 eq
{
0 1 3
{c1 1 index get
c2 3 -1 roll get
sub
}for
absmax absmax absmax
}
{
bc2 c1 1 get 1 exch put
c1 gettint c2 gettint
sub abs
}ifelse
graystep div abs round dup 0 eq{pop 1}if
dup /numsteps xdf 1 sub dup 0 eq{pop 1}if /numsteps1 xdf
}bdf
/cblend{
c1 length 4 eq
{
0 1 3
{bc4 exch
c1 1 index get
c2 2 index get
1 index sub
frac mul add put
}for bc4
}{
bc2
c1 gettint
c2 gettint
1 index sub
frac mul add
puttint bc2
}ifelse
setcolor
}bdf
/logtaper{/frac frac 9 mul 1 add log def}bdf
/imbits 1 def
/iminv false def
/invbuf{0 1 2 index length 1 sub{dup 2 index exch get 255 exch sub 2 index 3 1 roll put}for}bdf
/cyanrp{currentfile cyanbuf readhexstring pop iminv{invbuf}if}def
/magentarp{cyanbuf magentabuf copy}bdf
/yellowrp{cyanbuf yellowbuf copy}bdf
/blackrp{cyanbuf blackbuf copy}bdf
/fixtransfer{
dup{ic mul ic sub 1 add}concatprocs exch
dup{im mul im sub 1 add}concatprocs exch
dup{iy mul iy sub 1 add}concatprocs exch
{ik mul ik sub 1 add}concatprocs
currentcolortransfer
5 -1 roll exch concatprocs 7 1 roll
4 -1 roll exch concatprocs 6 1 roll
3 -1 roll exch concatprocs 5 1 roll
concatprocs 4 1 roll
setcolortransfer
}bdf
/textopf false def
/curtextmtx{}def
/otw .25 def
/msf{dup/curtextmtx xdf makefont setfont}bdf
/makesetfont/msf load def
/curtextheight{.707104 .707104 curtextmtx dtransform
dup mul exch dup mul add sqrt}bdf
/ta{1 index
{tempstr 0 2 index put tempstr 2 index
gsave exec grestore
tempstr stringwidth rmoveto
5 index eq{6 index 6 index rmoveto}if
3 index 3 index rmoveto
}forall 7{pop}repeat}bdf
/sts{setcolor textopf setoverprint/ts{awidthshow}def exec}bdf
/stol{setlinewidth setcolor textopf setoverprint newpath
/ts{{false charpath stroke}ta}def exec}bdf
/currentpacking where{pop false setpacking}if
%%EndSetup
/spots[1 0 0 0 (Process Cyan) false newcmykcustomcolor
0 1 0 0 (Process Magenta) false newcmykcustomcolor
0 0 1 0 (Process Yellow) false newcmykcustomcolor
0 0 0 1 (Process Black) false newcmykcustomcolor
]def
vms
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [14 0 0 14 0 0] makesetfont
420 917.970093 moveto
3.560638 0 32 0.055206 0 (Cache coherence problems can arise in shared ) ts
420 903.970093 moveto
0.831177 0 32 0.010254 0 (memory multiprocessors when multiple copies of ) ts
420 889.970093 moveto
4.202011 0 32 0.084885 0 (a data item are held in processor caches \(a\).  ) ts
420 875.970093 moveto
3.014236 0 32 0.062302 0 (Upon a write these copies must be updated or ) ts
420 861.970093 moveto
3.022827 0 32 0.043808 0 (invalidated \(b\).  Most systems use invalidation ) ts
420 847.970093 moveto
3.293228 0 32 0.055679 0 (since this allows the writing processor to gain ) ts
420 833.970093 moveto
2.100128 0 32 0.035507 0 (exclusive access to the cache line and complete ) ts
420 819.970093 moveto
8.103088 0 32 0.13176 0 (further writes into the cache line without ) ts
420 805.970093 moveto
6.14563 0 32 0.091049 0 (generating external traf) ts
564.807007 805.970093 moveto
6.14563 0 32 0.091049 0 (fic \(c\).  ) ts
628.198364 805.970093 moveto
6.14563 0 32 0.091049 0 (This further ) ts
420 791.970093 moveto
0.408096 0 32 0.005661 0 (complicates coherence since this ) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Italic
/f2 /|______Times-Italic dup RF findfont def
{
f2 [14 0 0 14 0 0] makesetfont
608.392456 791.970093 moveto
0.408096 0 32 0.005661 0 (dirty) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [14 0 0 14 0 0] makesetfont
634.858765 791.970093 moveto
0.408096 0 32 0.005661 0 ( cache must ) ts
420 777.970093 moveto
8.248383 0 32 0.12059 0 (respond instead of memory on subsequent ) ts
420 763.970093 moveto
0 0 32 0 0 (accesses by other processors \(d\).  ) ts
420 749.970093 moveto
0 0 32 0 0 () ts
420 735.970093 moveto
7.082062 0 32 0.073196 0 (Small-scale multiprocessors frequently use a ) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Italic
/f2 /|______Times-Italic dup RF findfont def
{
f2 [14 0 0 14 0 0] makesetfont
458.704163 735.970093 moveto
420 721.970093 moveto
0.761856 0 32 0.010803 0 (snoopy) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [14 0 0 14 0 0] makesetfont
459.723511 721.970093 moveto
0.761856 0 32 0.010803 0 ( cache coherence [1] protocol which relies ) ts
420 707.970093 moveto
2.991333 0 32 0.054108 0 (on all caches monitoring the common bus that ) ts
420 693.970093 moveto
7.632431 0 32 0.130478 0 (connects the processors to memory) ts
650.627014 693.970093 moveto
7.632431 0 32 0.130478 0 (.  ) ts
676.533813 693.970093 moveto
7.632431 0 32 0.130478 0 (This ) ts
420 679.970093 moveto
9.348419 0 32 0.103867 0 (monitoring allows caches to independently ) ts
420 665.970093 moveto
0.849457 0 32 0.013763 0 (determine when to invalidate cache lines \(b\), and ) ts
420 651.970093 moveto
1.296371 0 32 0.021912 0 (when to intervene because they contain the most ) ts
420 637.970093 moveto
1.395035 0 32 0.026382 0 (up-to-date copy of a given location \(d\).  Snoopy ) ts
420 623.970093 moveto
5.318268 0 32 0.118179 0 (schemes do not scale to a lar) ts
615.239624 623.970093 moveto
5.318268 0 32 0.118179 0 (ge number of ) ts
420 609.970093 moveto
0.518845 0 32 0.007507 0 (processors because the common bus or individual ) ts
420 595.970093 moveto
0.75827 0 32 0.010529 0 (processor caches eventaully saturate as they must ) ts
420 581.970093 moveto
8.25885 0 32 0.120743 0 (process every memory request from every ) ts
420 567.970093 moveto
0 0 32 0 0 (processor) ts
472.865723 567.970093 moveto
0 0 32 0 0 (.) ts
420 553.970093 moveto
0 0 32 0 0 () ts
420 539.970093 moveto
1.462708 0 32 0.020737 0 (The directory relieves the processor caches from ) ts
420 525.970093 moveto
0.193787 0 32 0.003265 0 (snooping on memory requests by keeping track of ) ts
420 511.970093 moveto
0.519485 0 32 0.010254 0 (which caches hold each memory block.  ) ts
651.054382 511.970093 moveto
0.519485 0 32 0.010254 0 (A) ts
660.402527 511.970093 moveto
0.519485 0 32 0.010254 0 ( simple ) ts
420 497.970093 moveto
1.572937 0 32 0.021835 0 (directory structure first proposed by Censier and ) ts
420 483.970093 moveto
1.619202 0 32 0.029984 0 (Feutrier [2] has one directory entry per block of ) ts
} 
[0 0 0 1]
sts
{
f1 [14 0 0 14 0 0] makesetfont
420 469.970093 moveto
0.550629 0 32 0.009109 0 (memory \(e\). Each entry contains one presence bit ) ts
420 455.970093 moveto
4.416962 0 32 0.08725 0 (per processor cache.  In addition, a state bit ) ts
420 441.970093 moveto
0.499649 0 32 0.008087 0 (indicates whether the block is uncached or shared ) ts
420 427.970093 moveto
0.085739 0 32 0.001541 0 (in multiple caches, or held exclusive by one cache ) ts
420 413.970093 moveto
1.125519 0 32 0.022064 0 (\(i.e. dirty\).  Using the state and presence bits the ) ts
420 399.970093 moveto
6.596573 0 32 0.135025 0 (memory can tell which caches need to be ) ts
420 385.970093 moveto
7.226898 0 32 0.114716 0 (invalidated when a location is written \(b\).  ) ts
420 371.970093 moveto
12.157715 0 32 0.13855 0 (Likewise the directory indicates whether ) ts
420 357.970093 moveto
4.319794 0 32 0.07814 0 (memory's copy of the block is up-to-date, or ) ts
420 343.970093 moveto
1.399033 0 32 0.033066 0 (which cache holds the most recent copy \(d\).   If ) ts
420 329.970093 moveto
4.021042 0 32 0.060928 0 (the memory and directory are partitioned into ) ts
420 315.970093 moveto
10.838501 0 32 0.158463 0 (independent units, and connected to the ) ts
420 301.970093 moveto
0 0 32 0 0 (processors by a scalable interconnect, the memory ) ts
420 287.970093 moveto
1.603287 0 32 0.020233 0 (system can provide scalable memory bandwidth.) ts
420 273.970093 moveto
0 0 32 0 0 () ts
f1 [12 0 0 12 0 0] makesetfont
420 273.970093 moveto
420 261.488647 moveto
4.29274 0 32 0.087601 0 ([1]  J. ) ts
463.573181 261.488647 moveto
4.29274 0 32 0.087601 0 (Archibald and J.-L. Baer) ts
596.837036 261.488647 moveto
4.29274 0 32 0.087601 0 (.  Cache coherence ) ts
420 249.488663 moveto
2.43718 0 32 0.02507 0 (protocols: Evaluation using a multiprocessor simulation ) ts
420 237.488663 moveto
0.624008 0 32 0.009323 0 (model.  ) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Italic
/f2 /|______Times-Italic dup RF findfont def
{
f2 [12 0 0 12 0 0] makesetfont
460.316742 237.488663 moveto
0.624008 0 32 0.009323 0 (ACM T) ts
495.326233 237.488663 moveto
0.624008 0 32 0.009323 0 (rans. on Computer Systems) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [12 0 0 12 0 0] makesetfont
628.742859 237.488663 moveto
0.624008 0 32 0.009323 0 (, 4\(4\):273-298, ) ts
420 225.488663 moveto
0 0 32 0 0 (1986.) ts
f1 [14 0 0 14 0 0] makesetfont
447 225.488663 moveto
0 0 32 0 0 () ts
f1 [12 0 0 12 0 0] makesetfont
420 225.488663 moveto
420 213.488663 moveto
0 0 32 0 0 () ts
420 201.488663 moveto
3.370575 0 32 0.08078 0 ([2]  L. Censier and P) ts
537.183044 201.488663 moveto
3.370575 0 32 0.08078 0 (. Feautrier) ts
590.086731 201.488663 moveto
3.370575 0 32 0.08078 0 (.  ) ts
605.411011 201.488663 moveto
3.370575 0 32 0.08078 0 (A) ts
613.495728 201.488663 moveto
3.370575 0 32 0.08078 0 ( new solution to ) ts
420 189.488663 moveto
1.058685 0 32 0.015533 0 (coherence problems in multicache systems.  ) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Italic
/f2 /|______Times-Italic dup RF findfont def
{
f2 [12 0 0 12 0 0] makesetfont
641.268066 189.488663 moveto
1.058685 0 32 0.015533 0 (IEEE T) ts
677.4151 189.488663 moveto
1.058685 0 32 0.015533 0 (rans. ) ts
420 177.488663 moveto
4.345718 0 32 0.040237 0 (on Computers) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [12 0 0 12 0 0] makesetfont
492.489685 177.488663 moveto
4.345718 0 32 0.040237 0 (, C-27\(12\):1) ts
556.193237 177.488663 moveto
4.345718 0 32 0.040237 0 (1) ts
561.791138 177.488663 moveto
4.345718 0 32 0.040237 0 (12-1) ts
583.502869 177.488663 moveto
4.345718 0 32 0.040237 0 (1) ts
589.100708 177.488663 moveto
4.345718 0 32 0.040237 0 (18, Decemnber 1978.) ts
f1 [14 0 0 14 0 0] makesetfont
701.851562 177.488663 moveto
4.345718 0 32 0.040237 0 () ts
} 
[0 0 0 1]
sts
vmrs
0 sf
newpath
30 984 moveto
738 984 lineto
738 72 lineto
30 72 lineto
closepath
gsave
0.2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
gsave [1 0 0 1 12 18] concat
vms
0 sf
newpath
324 684 moveto
324 666 lineto
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
gsave [1 0 0 1 -414 378] concat
vms
0 sf
newpath
709 370.9 moveto
775 370.9 lineto
775 304.9 lineto
709 304.9 lineto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [18 0 0 18 0 0] makesetfont
711 352.932983 moveto
0 0 32 0 0 (Memory) ts
} 
[0 0 0 1]
sts
vmrs
vmr
grestore
0 sf
newpath
132 684 moveto
132 654 lineto
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 0.6]setcolor  {stroke}fp 
grestore
0 sf
newpath
96 726 moveto
144 726 lineto
144 684 lineto
96 684 lineto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
162 750 moveto
162 763.2 172.8 774 186 774 curveto
199.2 774 210 763.2 210 750 curveto
210 736.8 199.2 726 186 726 curveto
172.8 726 162 736.8 162 750 curveto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
120 684 moveto
120 666 lineto
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
186 684 moveto
186 666 lineto
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
252 684 moveto
252 666 lineto
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
96 750 moveto
96 763.2 106.8 774 120 774 curveto
133.2 774 144 763.2 144 750 curveto
144 736.8 133.2 726 120 726 curveto
106.8 726 96 736.8 96 750 curveto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
162 726 moveto
210 726 lineto
210 684 lineto
162 684 lineto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
228 750 moveto
228 763.2 238.8 774 252 774 curveto
265.2 774 276 763.2 276 750 curveto
276 736.8 265.2 726 252 726 curveto
238.8 726 228 736.8 228 750 curveto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
228 726 moveto
276 726 lineto
276 684 lineto
228 684 lineto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
84 666 moveto
366 666 lineto
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [24 0 0 24 0 0] makesetfont
108 743.977356 moveto
0 0 32 0 0 (P1) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [24 0 0 24 0 0] makesetfont
174 743.977356 moveto
0 0 32 0 0 (P2) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [24 0 0 24 0 0] makesetfont
240 743.977356 moveto
0 0 32 0 0 (P3) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [14 0 0 14 0 0] makesetfont
168 689.970093 moveto
0 0 32 0 0 (\(A) ts
181.996582 689.970093 moveto
0 0 32 0 0 ( = 1\)) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [14 0 0 14 0 0] makesetfont
234 689.970093 moveto
0 0 32 0 0 (\(A) ts
247.996582 689.970093 moveto
0 0 32 0 0 ( = 1\)) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [14 0 0 14 0 0] makesetfont
306 689.970093 moveto
0 0 32 0 0 (\(A) ts
319.996582 689.970093 moveto
0 0 32 0 0 ( = 1\)) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Bold
/f3 /|______Times-Bold dup RF findfont def
{
f3 [18 0 0 18 0 0] makesetfont
42 774.03302 moveto
0 0 32 0 0 (\(b\)) ts
} 
[0 0 0 1]
sts
vmrs
vmrs
%%IncludeFont: Courier
/f4 /|______Courier dup RF findfont def
{
f4 [14 0 0 14 0 0] makesetfont
84 779.963562 moveto
0 0 32 0 0 (STORE #2,A) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [14 0 0 14 0 0] makesetfont
102 689.970093 moveto
0 0 32 0 0 (\(A) ts
115.996582 689.970093 moveto
0 0 32 0 0 ( = 2\)) ts
} 
[0 0 0 1]
sts
vmrs
0 sf
newpath
132 654 moveto
306 654 lineto
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 0.6]setcolor  {stroke}fp 
grestore
0 sf
newpath
240 654 moveto
240 678 lineto
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 0.6]setcolor  {stroke}fp 
grestore
0 sf
newpath
174 654 moveto
174 678 lineto
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 0.6]setcolor  {stroke}fp 
grestore
gsave [-1 0 0 1 450 30] concat
vms
0 sf
newpath
210 648 moveto
204 642 lineto
210 642 lineto
216 642 lineto
210 648 lineto
closepath
gsave
[0 0 0 0.6]setcolor  {fill}fp 
grestore
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 0.6]setcolor  {stroke}fp 
grestore
vmr
grestore
gsave [-1 0 0 1 384 30] concat
vms
0 sf
newpath
210 648 moveto
204 642 lineto
210 642 lineto
216 642 lineto
210 648 lineto
closepath
gsave
[0 0 0 0.6]setcolor  {fill}fp 
grestore
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 0.6]setcolor  {stroke}fp 
grestore
vmr
grestore
gsave [1 0 0 1 -42 186] concat
vms
0 sf
newpath
216 498 moveto
240 516 lineto
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 0.6]setcolor  {stroke}fp 
grestore
0 sf
newpath
216 516 moveto
240 498 lineto
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 0.6]setcolor  {stroke}fp 
grestore
vmr
grestore
gsave [1 0 0 1 24 186] concat
vms
0 sf
newpath
216 498 moveto
240 516 lineto
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 0.6]setcolor  {stroke}fp 
grestore
0 sf
newpath
216 516 moveto
240 498 lineto
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 0.6]setcolor  {stroke}fp 
grestore
vmr
grestore
gsave [1 0 0 1 102 186] concat
vms
0 sf
newpath
216 498 moveto
240 516 lineto
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 0.6]setcolor  {stroke}fp 
grestore
0 sf
newpath
216 516 moveto
240 498 lineto
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 0.6]setcolor  {stroke}fp 
grestore
vmr
grestore
%%IncludeFont: Times-Bold
/f3 /|______Times-Bold dup RF findfont def
{
f3 [14 0 0 14 0 0] makesetfont
102 707.970093 moveto
0 0 32 0 0 (Cache) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Bold
/f3 /|______Times-Bold dup RF findfont def
{
f3 [14 0 0 14 0 0] makesetfont
168 707.970093 moveto
0 0 32 0 0 (Cache) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Bold
/f3 /|______Times-Bold dup RF findfont def
{
f3 [14 0 0 14 0 0] makesetfont
234 707.970093 moveto
0 0 32 0 0 (Cache) ts
} 
[0 0 0 1]
sts
vmrs
0 sf
newpath
306 654 moveto
306 678 lineto
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 0.6]setcolor  {stroke}fp 
grestore
gsave [-1 0 0 1 516 30] concat
vms
0 sf
newpath
210 648 moveto
204 642 lineto
210 642 lineto
216 642 lineto
210 648 lineto
closepath
gsave
[0 0 0 0.6]setcolor  {fill}fp 
grestore
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 0.6]setcolor  {stroke}fp 
grestore
vmr
grestore
vmr
grestore
gsave [1 0 0 1 12 0] concat
vms
0 sf
newpath
84 840 moveto
366 840 lineto
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
312 858 moveto
312 828 lineto
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 0.6]setcolor  {stroke}fp 
grestore
0 sf
newpath
324 858 moveto
324 840 lineto
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
gsave [1 0 0 1 -414 552] concat
vms
0 sf
newpath
709 370.9 moveto
775 370.9 lineto
775 304.9 lineto
709 304.9 lineto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [18 0 0 18 0 0] makesetfont
711 352.932983 moveto
0 0 32 0 0 (Memory) ts
} 
[0 0 0 1]
sts
vmrs
vmr
grestore
0 sf
newpath
96 900 moveto
144 900 lineto
144 858 lineto
96 858 lineto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
162 924 moveto
162 937.2 172.8 948 186 948 curveto
199.2 948 210 937.2 210 924 curveto
210 910.8 199.2 900 186 900 curveto
172.8 900 162 910.8 162 924 curveto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
120 858 moveto
120 840 lineto
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
186 858 moveto
186 840 lineto
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
252 858 moveto
252 840 lineto
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
96 924 moveto
96 937.2 106.8 948 120 948 curveto
133.2 948 144 937.2 144 924 curveto
144 910.8 133.2 900 120 900 curveto
106.8 900 96 910.8 96 924 curveto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
162 900 moveto
210 900 lineto
210 858 lineto
162 858 lineto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
228 924 moveto
228 937.2 238.8 948 252 948 curveto
265.2 948 276 937.2 276 924 curveto
276 910.8 265.2 900 252 900 curveto
238.8 900 228 910.8 228 924 curveto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
228 900 moveto
276 900 lineto
276 858 lineto
228 858 lineto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [24 0 0 24 0 0] makesetfont
108 917.977356 moveto
0 0 32 0 0 (P1) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [24 0 0 24 0 0] makesetfont
174 917.977356 moveto
0 0 32 0 0 (P2) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [24 0 0 24 0 0] makesetfont
240 917.977356 moveto
0 0 32 0 0 (P3) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Courier
/f4 /|______Courier dup RF findfont def
{
f4 [14 0 0 14 0 0] makesetfont
162 953.963562 moveto
0 0 32 0 0 (LOAD A) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Courier
/f4 /|______Courier dup RF findfont def
{
f4 [14 0 0 14 0 0] makesetfont
234 953.963562 moveto
0 0 32 0 0 (LOAD A) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [14 0 0 14 0 0] makesetfont
168 863.970093 moveto
0 0 32 0 0 (\(A) ts
181.996582 863.970093 moveto
0 0 32 0 0 ( = 1\)) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [14 0 0 14 0 0] makesetfont
234 863.970093 moveto
0 0 32 0 0 (\(A) ts
247.996582 863.970093 moveto
0 0 32 0 0 ( = 1\)) ts
} 
[0 0 0 1]
sts
vmrs
vmrs
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [14 0 0 14 0 0] makesetfont
306 863.970093 moveto
0 0 32 0 0 (\(A) ts
319.996582 863.970093 moveto
0 0 32 0 0 ( = 1\)) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Bold
/f3 /|______Times-Bold dup RF findfont def
{
f3 [18 0 0 18 0 0] makesetfont
42 948.03302 moveto
0 0 32 0 0 (\(a\)) ts
} 
[0 0 0 1]
sts
vmrs
0 sf
newpath
312 828 moveto
168 828 lineto
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 0.6]setcolor  {stroke}fp 
grestore
0 sf
newpath
168 828 moveto
168 852 lineto
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 0.6]setcolor  {stroke}fp 
grestore
0 sf
newpath
234 828 moveto
234 852 lineto
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 0.6]setcolor  {stroke}fp 
grestore
gsave [1 0 0 1 -42 204] concat
vms
0 sf
newpath
210 648 moveto
204 642 lineto
210 642 lineto
216 642 lineto
210 648 lineto
closepath
gsave
[0 0 0 0.6]setcolor  {fill}fp 
grestore
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 0.6]setcolor  {stroke}fp 
grestore
vmr
grestore
gsave [1 0 0 1 24 204] concat
vms
0 sf
newpath
210 648 moveto
204 642 lineto
210 642 lineto
216 642 lineto
210 648 lineto
closepath
gsave
[0 0 0 0.6]setcolor  {fill}fp 
grestore
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 0.6]setcolor  {stroke}fp 
grestore
vmr
grestore
%%IncludeFont: Times-Bold
/f3 /|______Times-Bold dup RF findfont def
{
f3 [14 0 0 14 0 0] makesetfont
102 881.970093 moveto
0 0 32 0 0 (Cache) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Bold
/f3 /|______Times-Bold dup RF findfont def
{
f3 [14 0 0 14 0 0] makesetfont
168 881.970093 moveto
0 0 32 0 0 (Cache) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Bold
/f3 /|______Times-Bold dup RF findfont def
{
f3 [14 0 0 14 0 0] makesetfont
234 881.970093 moveto
0 0 32 0 0 (Cache) ts
} 
[0 0 0 1]
sts
vmrs
vmr
grestore
%%IncludeFont: Times-Bold
/f3 /|______Times-Bold dup RF findfont def
{
f3 [18 0 0 18 0 0] makesetfont
55 298.932983 moveto
0 0 32 0 0 (\(e\)) ts
} 
[0 0 0 1]
sts
vmrs
gsave [1 0 0 1 0 6] concat
vms
0 sf
newpath
337 388.9 moveto
337 370.9 lineto
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
gsave [1 0 0 1 -402 84] concat
vms
0 sf
newpath
709 370.9 moveto
775 370.9 lineto
775 304.9 lineto
709 304.9 lineto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [18 0 0 18 0 0] makesetfont
711 352.932983 moveto
0 0 32 0 0 (Memory) ts
} 
[0 0 0 1]
sts
vmrs
vmr
grestore
0 sf
newpath
175 454.9 moveto
175 468.1 185.8 478.9 199 478.9 curveto
212.2 478.9 223 468.1 223 454.9 curveto
223 441.7 212.2 430.9 199 430.9 curveto
185.8 430.9 175 441.7 175 454.9 curveto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
133 388.9 moveto
133 370.9 lineto
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
199 388.9 moveto
199 370.9 lineto
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
265 388.9 moveto
265 370.9 lineto
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
109 454.9 moveto
109 468.1 119.8 478.9 133 478.9 curveto
146.2 478.9 157 468.1 157 454.9 curveto
157 441.7 146.2 430.9 133 430.9 curveto
119.8 430.9 109 441.7 109 454.9 curveto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
175 430.9 moveto
223 430.9 lineto
223 388.9 lineto
175 388.9 lineto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
241 454.9 moveto
241 468.1 251.8 478.9 265 478.9 curveto
278.2 478.9 289 468.1 289 454.9 curveto
289 441.7 278.2 430.9 265 430.9 curveto
251.8 430.9 241 441.7 241 454.9 curveto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
241 430.9 moveto
289 430.9 lineto
289 388.9 lineto
241 388.9 lineto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
97 370.9 moveto
379 370.9 lineto
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [24 0 0 24 0 0] makesetfont
121 448.877319 moveto
0 0 32 0 0 (P1) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [24 0 0 24 0 0] makesetfont
187 448.877319 moveto
0 0 32 0 0 (P2) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [24 0 0 24 0 0] makesetfont
253 448.877319 moveto
0 0 32 0 0 (P3) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Bold
/f3 /|______Times-Bold dup RF findfont def
{
f3 [18 0 0 18 0 0] makesetfont
55 478.932983 moveto
0 0 32 0 0 (\(d\)) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Courier
/f4 /|______Courier dup RF findfont def
{
f4 [14 0 0 14 0 0] makesetfont
239.599991 486.863586 moveto
0 0 32 0 0 (LOAD A) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [14 0 0 14 0 0] makesetfont
247 394.870117 moveto
0 0 32 0 0 (\(A) ts
260.996582 394.870117 moveto
0 0 32 0 0 ( = 3\)) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [14 0 0 14 0 0] makesetfont
319.700012 394.870117 moveto
0 0 32 0 0 (\(A) ts
333.696594 394.870117 moveto
0 0 32 0 0 ( = 3\)) ts
} 
[0 0 0 1]
sts
vmrs
0 sf
newpath
144 390 moveto
144 360 lineto
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 0.6]setcolor  {stroke}fp 
grestore
0 sf
newpath
144 360 moveto
324 360 lineto
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 0.6]setcolor  {stroke}fp 
grestore
vmrs
0 sf
newpath
252 360 moveto
252 384 lineto
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 0.6]setcolor  {stroke}fp 
grestore
0 sf
newpath
324 360 moveto
324 384 lineto
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 0.6]setcolor  {stroke}fp 
grestore
gsave [-1 0 0 1 462 -264] concat
vms
0 sf
newpath
210 648 moveto
204 642 lineto
210 642 lineto
216 642 lineto
210 648 lineto
closepath
gsave
[0 0 0 0.6]setcolor  {fill}fp 
grestore
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 0.6]setcolor  {stroke}fp 
grestore
vmr
grestore
gsave [-1 0 0 1 534 -264] concat
vms
0 sf
newpath
210 648 moveto
204 642 lineto
210 642 lineto
216 642 lineto
210 648 lineto
closepath
gsave
[0 0 0 0.6]setcolor  {fill}fp 
grestore
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 0.6]setcolor  {stroke}fp 
grestore
vmr
grestore
0 sf
newpath
109 430.9 moveto
157 430.9 lineto
157 388.9 lineto
109 388.9 lineto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [14 0 0 14 0 0] makesetfont
115 394.870117 moveto
0 0 32 0 0 (\(A) ts
128.996582 394.870117 moveto
0 0 32 0 0 ( = 3\)) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Bold
/f3 /|______Times-Bold dup RF findfont def
{
f3 [14 0 0 14 0 0] makesetfont
114.399994 414.370117 moveto
0 0 32 0 0 (Cache) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Bold
/f3 /|______Times-Bold dup RF findfont def
{
f3 [14 0 0 14 0 0] makesetfont
180.399994 414.370117 moveto
0 0 32 0 0 (Cache) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Bold
/f3 /|______Times-Bold dup RF findfont def
{
f3 [14 0 0 14 0 0] makesetfont
246.399994 414.370117 moveto
0 0 32 0 0 (Cache) ts
} 
[0 0 0 1]
sts
vmrs
vmr
grestore
gsave [1 0 0 1 0 0] concat
vms
0 sf
newpath
132 546 moveto
132 528 lineto
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
108 588 moveto
156 588 lineto
156 546 lineto
108 546 lineto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [14 0 0 14 0 0] makesetfont
114 551.970093 moveto
0 0 32 0 0 (\(A) ts
127.996582 551.970093 moveto
0 0 32 0 0 ( = 3\)) ts
} 
[0 0 0 1]
sts
vmrs
0 sf
newpath
174 612 moveto
174 625.2 184.8 636 198 636 curveto
211.2 636 222 625.2 222 612 curveto
222 598.8 211.2 588 198 588 curveto
184.8 588 174 598.8 174 612 curveto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
336 546 moveto
336 528 lineto
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
198 546 moveto
198 528 lineto
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
264 546 moveto
264 528 lineto
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
108 612 moveto
108 625.2 118.8 636 132 636 curveto
145.2 636 156 625.2 156 612 curveto
156 598.8 145.2 588 132 588 curveto
118.8 588 108 598.8 108 612 curveto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
174 588 moveto
222 588 lineto
222 546 lineto
174 546 lineto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
240 612 moveto
240 625.2 250.8 636 264 636 curveto
277.2 636 288 625.2 288 612 curveto
288 598.8 277.2 588 264 588 curveto
250.8 588 240 598.8 240 612 curveto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
240 588 moveto
288 588 lineto
288 546 lineto
240 546 lineto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
96 528 moveto
378 528 lineto
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [24 0 0 24 0 0] makesetfont
120 605.977356 moveto
0 0 32 0 0 (P1) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [24 0 0 24 0 0] makesetfont
186 605.977356 moveto
0 0 32 0 0 (P2) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [24 0 0 24 0 0] makesetfont
252 605.977356 moveto
0 0 32 0 0 (P3) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Bold
/f3 /|______Times-Bold dup RF findfont def
{
f3 [18 0 0 18 0 0] makesetfont
54 642.03302 moveto
0 0 32 0 0 (\(c\)) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Courier
/f4 /|______Courier dup RF findfont def
{
f4 [14 0 0 14 0 0] makesetfont
96 643.863586 moveto
0 0 32 0 0 (STORE #3,A) ts
} 
[0 0 0 1]
sts
vmrs
gsave [1 0 0 1 -402 240] concat
vms
0 sf
newpath
709 370.9 moveto
775 370.9 lineto
775 304.9 lineto
709 304.9 lineto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [18 0 0 18 0 0] makesetfont
711 352.932983 moveto
0 0 32 0 0 (Memory) ts
} 
[0 0 0 1]
sts
vmrs
vmr
grestore
%%IncludeFont: Times-Bold
/f3 /|______Times-Bold dup RF findfont def
{
f3 [14 0 0 14 0 0] makesetfont
114.399994 570.370117 moveto
0 0 32 0 0 (Cache) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Bold
/f3 /|______Times-Bold dup RF findfont def
{
f3 [14 0 0 14 0 0] makesetfont
180.399994 570.370117 moveto
0 0 32 0 0 (Cache) ts
} 
[0 0 0 1]
sts
vmrs
vmrs
%%IncludeFont: Times-Bold
/f3 /|______Times-Bold dup RF findfont def
{
f3 [14 0 0 14 0 0] makesetfont
246.399994 570.370117 moveto
0 0 32 0 0 (Cache) ts
} 
[0 0 0 1]
sts
vmrs
vmr
grestore
gsave [1 0 0 1 0 0] concat
vms
0 sf
newpath
235.2 116.6 moveto
311.7 116.6 lineto
311.7 182.6 lineto
235.2 182.6 lineto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
300.7 128.1 moveto
306.7 128.1 lineto
306.7 122.1 lineto
300.7 122.1 lineto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
0.5 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
246.7 128.1 moveto
252.7 128.1 lineto
252.7 122.1 lineto
246.7 122.1 lineto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
0.5 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
258.7 128.1 moveto
264.7 128.1 lineto
264.7 122.1 lineto
258.7 122.1 lineto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
0.5 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
270.7 128.1 moveto
276.7 128.1 lineto
276.7 122.1 lineto
270.7 122.1 lineto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
0.5 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
282.7 128.1 moveto
288.7 128.1 lineto
288.7 122.1 lineto
282.7 122.1 lineto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
0.5 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
294.7 128.1 moveto
300.7 128.1 lineto
300.7 122.1 lineto
294.7 122.1 lineto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
0.5 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
186.7 181.4 moveto
186.7 199.4 lineto
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
157.7 116.5 moveto
223.7 116.5 lineto
223.7 182.5 lineto
157.7 182.5 lineto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
113.7 278.6 moveto
161.7 278.6 lineto
161.7 236.6 lineto
113.7 236.6 lineto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
179.7 302.6 moveto
179.7 315.8 190.5 326.6 203.7 326.6 curveto
216.9 326.6 227.7 315.8 227.7 302.6 curveto
227.7 289.4 216.9 278.6 203.7 278.6 curveto
190.5 278.6 179.7 289.4 179.7 302.6 curveto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
137.7 236.6 moveto
137.7 218.6 lineto
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
203.7 236.6 moveto
203.7 218.6 lineto
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
287.7 236.6 moveto
287.7 218.6 lineto
gsave
2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
113.7 302.6 moveto
113.7 315.8 124.5 326.6 137.7 326.6 curveto
150.9 326.6 161.7 315.8 161.7 302.6 curveto
161.7 289.4 150.9 278.6 137.7 278.6 curveto
124.5 278.6 113.7 289.4 113.7 302.6 curveto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
179.7 278.6 moveto
227.7 278.6 lineto
227.7 236.6 lineto
179.7 236.6 lineto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
263.7 302.6 moveto
263.7 315.8 274.5 326.6 287.7 326.6 curveto
300.9 326.6 311.7 315.8 311.7 302.6 curveto
311.7 289.4 300.9 278.6 287.7 278.6 curveto
274.5 278.6 263.7 289.4 263.7 302.6 curveto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
263.7 278.6 moveto
311.7 278.6 lineto
311.7 236.6 lineto
263.7 236.6 lineto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [24 0 0 24 0 0] makesetfont
125.699997 296.577332 moveto
0 0 32 0 0 (P1) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [24 0 0 24 0 0] makesetfont
191.699997 296.577332 moveto
0 0 32 0 0 (P2) ts
} 
[0 0 0 1]
sts
vmrs
vmrs
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [24 0 0 24 0 0] makesetfont
275.099976 296.577332 moveto
0 0 32 0 0 (Pn) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Bold
/f3 /|______Times-Bold dup RF findfont def
{
f3 [14 0 0 14 0 0] makesetfont
119.699997 260.570129 moveto
0 0 32 0 0 (Cache) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Bold
/f3 /|______Times-Bold dup RF findfont def
{
f3 [14 0 0 14 0 0] makesetfont
185.699997 260.570129 moveto
0 0 32 0 0 (Cache) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Bold
/f3 /|______Times-Bold dup RF findfont def
{
f3 [14 0 0 14 0 0] makesetfont
269.700012 260.570129 moveto
0 0 32 0 0 (Cache) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [18 0 0 18 0 0] makesetfont
171.704636 157.533005 moveto
0 0 32 0 0 (Main) ts
159.709763 139.533005 moveto
0 0 32 0 0 (Memory) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [18 0 0 18 0 0] makesetfont
238.199997 152.533005 moveto
0 0 32 0 0 (Directory) ts
} 
[0 0 0 1]
sts
vmrs
0 sf
newpath
235.2 128.1 moveto
241.2 128.1 lineto
241.2 122.1 lineto
235.2 122.1 lineto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
259.8 125.1 moveto
259.8 126.1 260.7 127 261.7 127 curveto
262.7 127 263.6 126.1 263.6 125.1 curveto
263.6 124.1 262.7 123.2 261.7 123.2 curveto
260.7 123.2 259.8 124.1 259.8 125.1 curveto
closepath
gsave
[0 0 0 1]setcolor  {fill}fp 
grestore
gsave
0.5 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
271.8 125.1 moveto
271.8 126.1 272.7 127 273.7 127 curveto
274.7 127 275.6 126.1 275.6 125.1 curveto
275.6 124.1 274.7 123.2 273.7 123.2 curveto
272.7 123.2 271.8 124.1 271.8 125.1 curveto
closepath
gsave
[0 0 0 1]setcolor  {fill}fp 
grestore
gsave
0.5 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
277.8 125.1 moveto
277.8 126.1 278.7 127 279.7 127 curveto
280.7 127 281.6 126.1 281.6 125.1 curveto
281.6 124.1 280.7 123.2 279.7 123.2 curveto
278.7 123.2 277.8 124.1 277.8 125.1 curveto
closepath
gsave
[0 0 0 1]setcolor  {fill}fp 
grestore
gsave
0.5 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
114.7 218.6 moveto
312.7 218.6 lineto
312.7 194.6 lineto
114.7 194.6 lineto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [14 0 0 14 0 0] makesetfont
143.591064 202.970108 moveto
0 0 32 0 0 (Interconnection Network) ts
} 
[0 0 0 1]
sts
vmrs
0 sf
newpath
236.2 100.1 moveto
237.7 125.6 lineto
gsave
0.5 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
243.2 125.6 moveto
288 102 lineto
gsave
0.5 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [12 0 0 12 0 0] makesetfont
216.120407 89.488663 moveto
0 0 32 0 0 (State bit) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [12 0 0 12 0 0] makesetfont
264.114624 89.488663 moveto
0 0 32 0 0 (Presence bits) ts
} 
[0 0 0 1]
sts
vmrs
0 sf
newpath
309.2 125.1 moveto
300 102 lineto
gsave
0.5 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
235.2 128.4 moveto
311.7 128.4 lineto
311.7 122.1 lineto
235.2 122.1 lineto
closepath
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
235.2 125.6 moveto
223.7 125.6 lineto
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
%%IncludeFont: Times-Bold
/f3 /|______Times-Bold dup RF findfont def
{
f3 [24 0 0 24 0 0] makesetfont
233.699997 295.277344 moveto
0 0 32 0 0 (\311) ts
} 
[0 0 0 1]
sts
vmrs
vmrs
0 sf
newpath
157.2 130.6 moveto
223.7 130.6 lineto
223.7 120.6 lineto
157.2 120.6 lineto
closepath
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
189.7 104.6 moveto
189.7 123.1 lineto
gsave
0.5 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [12 0 0 12 0 0] makesetfont
179.575287 89.488663 moveto
0 0 32 0 0 (Data) ts
} 
[0 0 0 1]
sts
vmrs
vmr
grestore
vmr
end  % FreeHandDict
%%EndDocument: _
%%EndDocument

 endTexFig
 698 2806 a Fi(Figure)14 b(1:)20 b(Cac)o(he)15 b(Coherence)964
2904 y(3)p eop
%%Page: 4 4
4 3 bop 30 45 a Fi(cac)o(hes)16 b(see)f(ev)o(ery)h(memory)c(request)k(from)d
(ev)o(ery)j(pro)q(cessor.)k(This)15 b(inheren)o(tly)g(limits)e(the)i
(scalabilit)o(y)e(of)30 107 y(these)18 b(mac)o(hines)e(b)q(ecause)j(the)f
(common)d(bus)j(and)g(the)g(individual)f(pro)q(cessor)g(cac)o(hes)h(ev)o(en)o
(tually)f(satu-)30 169 y(rate.)i(With)14 b(to)q(da)o(y's)f(high)i(p)q
(erformance)e(RISC)j(pro)q(cessors)e(this)g(saturation)f(can)i(o)q(ccur)f
(with)g(just)h(a)f(few)30 231 y(pro)q(cessors.)101 313 y(Directory)e
(structures)i(a)o(v)o(oid)f(the)i(scalabilit)o(y)c(problems)i(of)h(sno)q(op)o
(y)g(sc)o(hemes)f(b)o(y)i(remo)o(ving)d(the)i(need)30 375 y(to)f(broadcast)h
(ev)o(ery)g(memory)d(request)j(to)g(all)f(pro)q(cessor)h(cac)o(hes.)20
b(The)14 b(directory)f(main)o(tains)f(p)q(oin)o(ters)h(to)30
437 y(the)i(pro)q(cessor)g(cac)o(hes)h(holding)e(a)h(cop)o(y)g(of)g(eac)o(h)g
(memory)e(blo)q(c)o(k.)20 b(Only)15 b(the)h(cac)o(hes)f(with)g(copies)g(can)g
(b)q(e)30 499 y(a\013ected)f(b)o(y)f(an)h(access)g(to)f(the)h(memory)e(blo)q
(c)o(k,)h(and)h(only)g(those)f(cac)o(hes)h(need)h(b)q(e)g(noti\014ed)f(of)f
(the)h(access.)30 561 y(Th)o(us,)j(the)g(pro)q(cessor)g(cac)o(hes)g(and)g(in)
o(terconnect)g(will)e(not)i(saturate)f(due)h(to)g(coherence)h(requests.)25
b(F)l(ur-)30 624 y(thermore,)11 b(directory-based)h(coherence)i(is)e(not)g
(dep)q(enden)o(t)i(up)q(on)f(an)o(y)f(sp)q(eci\014c)h(in)o(terconnection)f
(net)o(w)o(ork)30 686 y(lik)o(e)k(the)g(bus)h(used)g(b)o(y)f(most)f(sno)q
(oping)h(sc)o(hemes.)23 b(The)17 b(same)e(scalable,)h(lo)o(w-latency)f(net)o
(w)o(orks)g(suc)o(h)i(as)30 748 y(Omega)e(net)o(w)o(orks)h(or)g(k-nary)g
(n-cub)q(es)i(used)f(b)o(y)g(non-cac)o(he-coheren)o(t)g(and)g(message)e
(passing)h(mac)o(hines)30 810 y(can)f(b)q(e)h(emplo)o(y)o(ed.)101
892 y(The)k(concept)h(of)e(directory-based)h(cac)o(he)h(coherence)g(is)f(not)
g(new.)35 b(It)20 b(w)o(as)f(\014rst)h(prop)q(osed)h(in)f(the)30
954 y(late)13 b(1970's.)18 b(Ho)o(w)o(ev)o(er,)13 b(the)h(original)e
(directory)i(structures)f(w)o(ere)h(not)g(scalable)f(b)q(ecause)i(the)f(cen)o
(tralized)30 1016 y(directory)j(used)i(b)o(y)f(them)f(quic)o(kly)h(b)q(ecame)
f(a)h(b)q(ottlenec)o(k.)28 b(The)19 b(D)o(ASH)f(arc)o(hitecture)f(o)o(v)o
(ercomes)f(this)30 1078 y(limitati)o(on)c(b)o(y)i(partitioning)e(and)i
(distributing)f(the)h(directory)g(and)g(main)f(memory)l(,)e(and)k(b)o(y)f
(using)g(a)f(new)30 1140 y(coherence)h(proto)q(col)d(that)h(can)h(suitably)e
(exploit)h(distributed)g(directories.)18 b(In)13 b(addition,)f(D)o(ASH)g(pro)
o(vides)30 1202 y(sev)o(eral)i(other)h(mec)o(hanisms)e(to)i(reduce)h(and)f
(hide)g(the)h(latency)f(of)f(memory)f(op)q(erations.)101 1284
y(The)18 b(high-lev)o(el)f(organization)f(of)i(D)o(ASH)g(is)f(sho)o(wn)h(in)g
(Figure)f(2.)28 b(The)18 b(arc)o(hitecture)f(consists)g(of)h(a)30
1346 y(n)o(um)o(b)q(er)10 b(of)h(pro)q(cessing)f(no)q(des)i(connected)g
(through)e(directory)g(con)o(trollers)f(to)h(a)h(lo)o(w-latency)e(in)o
(terconnec-)30 1408 y(tion)14 b(net)o(w)o(ork.)19 b(Eac)o(h)c(pro)q(cessing)g
(no)q(de,)g(or)f Ff(cluster)p Fi(,)h(consists)f(of)g(a)h(small)e(n)o(um)o(b)q
(er)h(of)h(high-p)q(erformance)30 1470 y(pro)q(cessors)i(and)g(a)g(p)q
(ortion)f(of)h(the)g(shared)g(memory)e(connected)j(together)e(b)o(y)h(a)g
(bus.)26 b(Multipro)q(cessing)30 1532 y(within)11 b(the)h(cluster)g(can)g(b)q
(e)h(view)o(ed)f(as)g(increasing)f(the)h(p)q(o)o(w)o(er)g(of)g(eac)o(h)g(pro)
q(cessing)g(no)q(de,)h(or)e(reducing)i(the)30 1594 y(cost)h(of)h(the)g
(directory)f(and)h(net)o(w)o(ork)f(in)o(terface)g(b)o(y)g(amortizing)e(it)j
(o)o(v)o(er)f(a)g(larger)g(n)o(um)o(b)q(er)g(of)g(pro)q(cessors.)101
1676 y(Distributing)e(memory)g(with)i(the)h(pro)q(cessors)f(is)g(essen)o
(tial)g(b)q(ecause)h(it)f(allo)o(ws)f(the)i(system)e(to)h(exploit)30
1738 y(lo)q(calit)o(y)l(.)21 b(All)16 b(priv)m(ate)g(data)f(and)i(co)q(de)g
(references,)g(along)e(with)g(some)g(of)h(the)g(shared)h(references)g(can)f
(b)q(e)30 1800 y(made)h(lo)q(cal)g(to)g(the)h(cluster.)28 b(These)19
b(references)f(a)o(v)o(oid)f(the)h(longer)f(latency)h(of)f(remote)g
(references)i(and)30 1862 y(reduce)g(the)e(bandwidth)h(demands)f(on)h(the)g
(global)e(in)o(terconnect.)27 b(Except)18 b(for)f(the)h(directory)e(memory)l
(,)30 1924 y(the)g(resulting)f(system)g(arc)o(hitecture)g(is)h(similar)d(to)j
(man)o(y)e(scalable)i(message)e(passing)i(mac)o(hines.)21 b(While)30
1986 y(not)15 b(optimized)e(to)i(do)g(so,)g(D)o(ASH)g(could)g(em)o(ulate)e
(suc)o(h)j(mac)o(hines)e(with)g(reasonable)h(e\016ciency)l(.)30
2157 y Fh(2)69 b(Scalabilit)n(y)20 b(of)k(the)e(D)n(ASH)h(Approac)n(h)30
2283 y Fi(The)16 b(previous)g(section)f(outlines)g(wh)o(y)h(w)o(e)f(b)q
(eliev)o(e)h(a)g(single-address-space)f(mac)o(hine)g(with)g(cac)o(he)h
(coher-)30 2345 y(ence)k(holds)f(the)g(most)e(promise)g(to)i(deliv)o(er)f
(scalable)g(p)q(erformance)g(to)h(a)f(wide)h(range)g(of)g(applications.)30
2408 y(This)e(section)g(addresses)h(the)f(more)f(detailed)h(issues)g(in)h
(scaling)e(suc)o(h)i(a)f(directory-based)g(system.)25 b(The)30
2470 y(three)19 b(primary)e(issues)h(are)h(assuring)f(that)g(the)h(system)e
(pro)o(vides)i(scalable)f(memory)e(bandwidth,)j(that)30 2532
y(the)14 b(system)e(costs)h(scale)g(reasonably)l(,)g(and)g(that)g(mec)o
(hanisms)e(are)i(pro)o(vided)h(to)f(deal)g(with)g(large)f(memory)30
2594 y(latencies.)101 2676 y(Scalabilit)o(y)f(in)j(a)f(m)o(ultipro)q(cessor)f
(requires)h(that)g(the)h(total)e(memory)g(bandwidth)h(scale)h(linearly)e
(with)30 2738 y(the)k(n)o(um)o(b)q(er)f(of)h(pro)q(cessors.)22
b(D)o(ASH)16 b(pro)o(vides)f(scalable)g(bandwidth)h(to)g(data)f(ob)s(jects)g
(residing)h(in)g(lo)q(cal)964 2904 y(4)p eop
%%Page: 5 5
5 4 bop 557 4 a
 13185807 15156103 7433338 20260782 21050163 35851059 startTexFig
 557 4 a
%%BeginDocument: empty.ps
%%EndDocument
 557 4 a
%%BeginDocument: dash_arch.ps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: FreeHand
%%Title: generic.dash.v.free
%%CreationDate: 1/16/91 1:26 PM
%%BoundingBox: 113 308 320 545
%%DocumentProcSets: FreeHand_header 2 0
%%DocumentSuppliedProcSets: FreeHand_header 2 0
%%ColorUsage: Color
%%CMYKProcessColor: 0 0 0 0.1  (10% gray)
%%+ 0 0 0 0.2  (20% gray)
%%+ 0 0 0 0.4  (40% gray)
%%+ 0 0 0 0.6  (60% gray)
%%+ 0 0 0 0.8  (80% gray)
%%DocumentFonts: Symbol
%%+Times-Roman
%%+Times-Bold
%%DocumentNeededFonts: Symbol
%%+Times-Roman
%%+Times-Bold
%%EndComments
%%BeginProcSet: FreeHand_header 2 0
/FreeHandDict 200 dict def
FreeHandDict begin
/currentpacking where{pop true setpacking}if
/bdf{bind def}bind def
/bdef{bind def}bdf
/xdf{exch def}bdf
/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf
/min{2 copy gt{exch}if pop}bdf
/max{2 copy lt{exch}if pop}bdf
/dr{transform .25 sub round .25 add
exch .25 sub round .25 add exch itransform}bdf
/curveto{dr curveto}bdf
/lineto{dr lineto}bdf
/moveto{dr moveto}bdf
/graystep 1 256 div def
/bottom -0 def
/delta -0 def
/frac -0 def
/left -0 def
/numsteps -0 def
/numsteps1 -0 def
/radius -0 def
/right -0 def
/top -0 def
/x -0 def
/y -0 def
/df currentflat def
/tempstr 1 string def
/clipflatness 3 def
/inverted?
0 currenttransfer exec .5 ge def
/concatprocs{
/proc2 exch cvlit def/proc1 exch cvlit def
/newproc proc1 length proc2 length add array def
newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval
newproc cvx}bdf
/storerect{/top xdf/right xdf/bottom xdf/left xdf}bdf
/rectpath{newpath left bottom moveto left top lineto
right top lineto right bottom lineto closepath}bdf
/sf{dup 0 eq{pop df dup 3 mul}{dup} ifelse /clipflatness xdf setflat}bdf
version cvr 38.0 le
{/setrgbcolor{
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
setrgbcolor}bdf}if
/gettint{0 get}bdf
/puttint{0 exch put}bdf
/vms{/vmsv save def}bdf
/vmr{vmsv restore}bdf
/vmrs{vmr vms}bdf
/CD{/NF exch def
{exch dup/FID ne{exch NF 3 1 roll put}
{pop pop}ifelse}forall NF}bdf
/MN{1 index length/Len exch def
dup length Len add string dup
Len 4 -1 roll putinterval dup 0 4 -1 roll putinterval}bdf
/RC{256 string cvs(|______)anchorsearch
{1 index MN cvn/NewN exch def cvn
findfont dup maxlength dict CD dup/FontName NewN put dup
/Encoding MacVec put NewN exch definefont pop}{pop}ifelse}bdf
/RF{dup FontDirectory exch known{pop}{RC}ifelse}bdf
/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known
{exch}if pop findfont}bdf
userdict begin /BDFontDict 20 dict def end
BDFontDict begin
/bu{}def
/bn{}def
/setTxMode{pop}def
/gm{moveto}def
/show{pop}def
/gr{pop}def
/fnt{pop pop pop}def
/fs{pop}def
/fz{pop}def
/lin{pop pop}def
end
/MacVec 256 array def
MacVec 0 /Helvetica findfont
/Encoding get 0 128 getinterval putinterval
MacVec 127 /DEL put MacVec 16#27 /quotesingle put MacVec 16#60 /grave put
/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI
/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/US
MacVec 0 32 getinterval astore pop
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/register/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/nbspace/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase
/perthousand/Acircumflex/Ecircumflex/Aacute
/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex
/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacVec 128 128 getinterval astore pop
/fps{currentflat exch dup 0 le{pop 1}if
{dup setflat 3 index stopped
{1.3 mul dup 3 index gt{pop setflat pop pop stop}if}{exit}ifelse
}loop pop setflat pop pop
}bdf
/fp{100 currentflat fps}bdf
/rfp{clipflatness currentflat fps}bdf
/fcp{100 clipflatness fps}bdf
/fclip{{clip}fcp}bdf
/feoclip{{eoclip}fcp}bdf
end %. FreeHandDict
%%EndProcSet
%%BeginSetup
FreeHandDict begin
/ccmyk{dup 5 -1 roll sub 0 max exch}ndf
/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf
/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf
/findcmykcustomcolor{5 /packedarray where{pop packedarray}{array astore readonly}ifelse}ndf
/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf
/setseparationgray{1 exch sub dup dup dup setcmykcolor}ndf
/setoverprint{pop}ndf
/currentoverprint false ndf
/colorimage{pop pop
[5 -1 roll/exec cvx 6 -1 roll/exec cvx 7 -1 roll/exec cvx 8 -1 roll/exec cvx
/exch cvx/pop cvx/exch cvx/pop cvx/exch cvx/pop cvx/invbuf cvx]cvx image}
%. version 47.1 of Postscript defines colorimage incorrectly (rgb model only)
version cvr 47.1 le{userdict begin bdf end}{ndf}ifelse
/customcolorimage{pop image}ndf
/separationimage{image}ndf
/newcmykcustomcolor{6 /packedarray where{pop packedarray}{array astore readonly}ifelse}ndf
/inkoverprint false ndf
/setinkoverprint{pop}ndf
/overprintprocess{pop}ndf
/setspotcolor
{spots exch get 0 5 getinterval exch setcustomcolor}ndf
/currentcolortransfer{currenttransfer dup dup dup}ndf
/setcolortransfer{systemdict begin settransfer end pop pop pop}ndf
/setimagecmyk{dup length 4 eq
{aload pop}
{aload pop spots exch get 0 4 getinterval aload pop 4
{4 index mul 4 1 roll}repeat 5 -1 roll pop} ifelse
systemdict /colorimage known{version cvr 47.1 gt}{false}ifelse
not{pop 1 currentgray sub}if
/ik xdf /iy xdf /im xdf /ic xdf
}ndf
/setcolor{dup length 4 eq
{aload overprintprocess setcmykcolor}
{aload 1 get spots exch get 5 get setinkoverprint setspotcolor}
ifelse}ndf
/bc2[0 0]def
/bc4[0 0 0 0]def
/c1[0 0 0 0]def
/c2[0 0 0 0]def
/absmax{2 copy abs exch abs gt{exch}if pop}bdf
/calcstep
{c1 length 4 eq
{
0 1 3
{c1 1 index get
c2 3 -1 roll get
sub
}for
absmax absmax absmax
}
{
bc2 c1 1 get 1 exch put
c1 gettint c2 gettint
sub abs
}ifelse
graystep div abs round dup 0 eq{pop 1}if
dup /numsteps xdf 1 sub dup 0 eq{pop 1}if /numsteps1 xdf
}bdf
/cblend{
c1 length 4 eq
{
0 1 3
{bc4 exch
c1 1 index get
c2 2 index get
1 index sub
frac mul add put
}for bc4
}{
bc2
c1 gettint
c2 gettint
1 index sub
frac mul add
puttint bc2
}ifelse
setcolor
}bdf
/logtaper{/frac frac 9 mul 1 add log def}bdf
/imbits 1 def
/iminv false def
/invbuf{0 1 2 index length 1 sub{dup 2 index exch get 255 exch sub 2 index 3 1 roll put}for}bdf
/cyanrp{currentfile cyanbuf readhexstring pop iminv{invbuf}if}def
/magentarp{cyanbuf magentabuf copy}bdf
/yellowrp{cyanbuf yellowbuf copy}bdf
/blackrp{cyanbuf blackbuf copy}bdf
/fixtransfer{
dup{ic mul ic sub 1 add}concatprocs exch
dup{im mul im sub 1 add}concatprocs exch
dup{iy mul iy sub 1 add}concatprocs exch
{ik mul ik sub 1 add}concatprocs
currentcolortransfer
5 -1 roll exch concatprocs 7 1 roll
4 -1 roll exch concatprocs 6 1 roll
3 -1 roll exch concatprocs 5 1 roll
concatprocs 4 1 roll
setcolortransfer
}bdf
/textopf false def
/curtextmtx{}def
/otw .25 def
/msf{dup/curtextmtx xdf makefont setfont}bdf
/makesetfont/msf load def
/curtextheight{.707104 .707104 curtextmtx dtransform
dup mul exch dup mul add sqrt}bdf
/ta{1 index
{tempstr 0 2 index put tempstr 2 index
gsave exec grestore
tempstr stringwidth rmoveto
5 index eq{6 index 6 index rmoveto}if
3 index 3 index rmoveto
}forall 7{pop}repeat}bdf
/sts{setcolor textopf setoverprint/ts{awidthshow}def exec}bdf
/stol{setlinewidth setcolor textopf setoverprint newpath
/ts{{false charpath stroke}ta}def exec}bdf
/currentpacking where{pop false setpacking}if
%%EndSetup
/spots[1 0 0 0 (Process Cyan) false newcmykcustomcolor
0 1 0 0 (Process Magenta) false newcmykcustomcolor
0 0 1 0 (Process Yellow) false newcmykcustomcolor
0 0 0 1 (Process Black) false newcmykcustomcolor
]def
vms
0 sf
newpath
113 407.3 moveto
279 407.3 lineto
279 308.8 lineto
113 308.8 lineto
closepath
gsave
[0 0 0 0.1]setcolor  {fill}fp 
grestore
0 sf
newpath
235.5 358.3 moveto
275 358.3 lineto
275 333.8 lineto
235.5 333.8 lineto
closepath
gsave
[0 0 0 0.4]setcolor  {fill}fp 
grestore
0 sf
newpath
150 336.3 moveto
195.5 336.3 lineto
195.5 313.8 lineto
150 313.8 lineto
closepath
gsave
[0 0 0 0.4]setcolor  {fill}fp 
grestore
0 sf
newpath
123 394.3 moveto
162 394.3 lineto
162 359.3 lineto
123 359.3 lineto
closepath
gsave
[0 0 0 0.4]setcolor  {fill}fp 
grestore
0 sf
newpath
118.5 399.8 moveto
157.5 399.8 lineto
157.5 362.8 lineto
118.5 362.8 lineto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
145.5 340.8 moveto
190 340.8 lineto
190 318.3 lineto
145.5 318.3 lineto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
136.5 362.3 moveto
136.5 349.8 lineto
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [9 0 0 9 0 0] makesetfont
120.399994 389.666504 moveto
0 0 32 0 0 (Processor) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [9 0 0 9 0 0] makesetfont
124.5 371.766479 moveto
0 0 32 0 0 (Cache) ts
} 
[0 0 0 1]
sts
vmrs
0 sf
newpath
118.5 380.8 moveto
157.5 380.8 lineto
gsave
0.5 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [8 0 0 8 0 0] makesetfont
166 374.625793 moveto
0 0 32 0 0 (\245\245\245) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [9 0 0 9 0 0] makesetfont
151.699997 328.166504 moveto
0 0 32 0 0 (Memory) ts
} 
[0 0 0 1]
sts
vmrs
0 sf
newpath
168 349.8 moveto
168 340.8 lineto
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [7 0 0 7 0 0] makesetfont
149.399994 351.185059 moveto
0 0 32 0 0 (Snooping Bus) ts
} 
[0 0 0 1]
sts
vmrs
0 sf
newpath
184 394.8 moveto
223 394.8 lineto
223 359.8 lineto
184 359.8 lineto
closepath
gsave
[0 0 0 0.4]setcolor  {fill}fp 
grestore
0 sf
newpath
179.5 400.3 moveto
218.5 400.3 lineto
218.5 363.3 lineto
179.5 363.3 lineto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
197.5 362.8 moveto
197.5 350.3 lineto
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [9 0 0 9 0 0] makesetfont
181.399994 390.166504 moveto
0 0 32 0 0 (Processor) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [9 0 0 9 0 0] makesetfont
185.5 372.266479 moveto
0 0 32 0 0 (Cache) ts
} 
[0 0 0 1]
sts
vmrs
0 sf
newpath
179.5 381.3 moveto
218.5 381.3 lineto
gsave
0.5 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
vmrs
0 sf
newpath
302 527 moveto
320 527 lineto
320 320 lineto
302 320 lineto
closepath
gsave
[0 0 0 0.4]setcolor  {fill}fp 
grestore
0 sf
newpath
298 533 moveto
316 533 lineto
316 325 lineto
298 325 lineto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
%%IncludeFont: Times-Bold
/f2 /|______Times-Bold dup RF findfont def
{
f2 [0 18 -18 0 0 0] makesetfont
193.46698 413.603943 moveto
0 0 32 0 0 (\245 \245 \245) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [9 0 0 9 0 0] makesetfont
305.152557 514.866516 moveto
0 0 32 0 0 (I) ts
304.399994 507.866516 moveto
0 0 32 0 0 (n) ts
305.39975 500.866516 moveto
0 0 32 0 0 (t) ts
304.652679 493.866516 moveto
0 0 32 0 0 (e) ts
305.152557 486.866516 moveto
0 0 32 0 0 (r) ts
304.652679 479.866516 moveto
0 0 32 0 0 (c) ts
304.399994 472.866516 moveto
0 0 32 0 0 (o) ts
304.399994 465.866516 moveto
0 0 32 0 0 (n) ts
304.399994 458.866516 moveto
0 0 32 0 0 (n) ts
304.652679 451.866516 moveto
0 0 32 0 0 (e) ts
304.652679 444.866516 moveto
0 0 32 0 0 (c) ts
305.39975 437.866516 moveto
0 0 32 0 0 (t) ts
305.39975 430.866516 moveto
0 0 32 0 0 (i) ts
304.399994 423.866516 moveto
0 0 32 0 0 (o) ts
304.399994 416.866516 moveto
0 0 32 0 0 (n) ts
306.649994 409.866516 moveto
0 0 32 0 0 () ts
306.649994 402.866516 moveto
0 0 32 0 0 () ts
303.401337 395.866516 moveto
0 0 32 0 0 (N) ts
304.652679 388.866516 moveto
0 0 32 0 0 (e) ts
305.39975 381.866516 moveto
0 0 32 0 0 (t) ts
303.401337 374.866516 moveto
0 0 32 0 0 (w) ts
304.399994 367.866516 moveto
0 0 32 0 0 (o) ts
305.152557 360.866516 moveto
0 0 32 0 0 (r) ts
304.399994 353.866516 moveto
0 0 32 0 0 (k) ts
} 
[0 0 0 1]
sts
{
f1 [9 0 0 9 0 0] makesetfont
} 
[0 0 0 1]
sts
vmrs
0 sf
newpath
113 545 moveto
279 545 lineto
279 446.5 lineto
113 446.5 lineto
closepath
gsave
[0 0 0 0.1]setcolor  {fill}fp 
grestore
0 sf
newpath
235.5 496 moveto
275 496 lineto
275 471.5 lineto
235.5 471.5 lineto
closepath
gsave
[0 0 0 0.4]setcolor  {fill}fp 
grestore
0 sf
newpath
150 474 moveto
195.5 474 lineto
195.5 451.5 lineto
150 451.5 lineto
closepath
gsave
[0 0 0 0.4]setcolor  {fill}fp 
grestore
0 sf
newpath
123 532 moveto
162 532 lineto
162 497 lineto
123 497 lineto
closepath
gsave
[0 0 0 0.4]setcolor  {fill}fp 
grestore
0 sf
newpath
118.5 537.5 moveto
157.5 537.5 lineto
157.5 500.5 lineto
118.5 500.5 lineto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
145.5 478.5 moveto
190 478.5 lineto
190 456 lineto
145.5 456 lineto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
136.5 500 moveto
136.5 487.5 lineto
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [9 0 0 9 0 0] makesetfont
120.399994 527.366516 moveto
0 0 32 0 0 (Processor) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [9 0 0 9 0 0] makesetfont
124.5 509.466492 moveto
0 0 32 0 0 (Cache) ts
} 
[0 0 0 1]
sts
vmrs
0 sf
newpath
118.5 518.5 moveto
157.5 518.5 lineto
gsave
0.5 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [8 0 0 8 0 0] makesetfont
166 512.325806 moveto
0 0 32 0 0 (\245\245\245) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [9 0 0 9 0 0] makesetfont
151.699997 465.866516 moveto
0 0 32 0 0 (Memory) ts
} 
[0 0 0 1]
sts
vmrs
0 sf
newpath
168 487.5 moveto
168 478.5 lineto
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [7 0 0 7 0 0] makesetfont
149.399994 488.885071 moveto
0 0 32 0 0 (Snooping Bus) ts
} 
[0 0 0 1]
sts
vmrs
0 sf
newpath
184 532.5 moveto
223 532.5 lineto
223 497.5 lineto
184 497.5 lineto
closepath
gsave
[0 0 0 0.4]setcolor  {fill}fp 
grestore
0 sf
newpath
179.5 538 moveto
218.5 538 lineto
218.5 501 lineto
179.5 501 lineto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
vmrs
0 sf
newpath
197.5 500.5 moveto
197.5 488 lineto
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [9 0 0 9 0 0] makesetfont
181.399994 527.866516 moveto
0 0 32 0 0 (Processor) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [9 0 0 9 0 0] makesetfont
185.5 509.966492 moveto
0 0 32 0 0 (Cache) ts
} 
[0 0 0 1]
sts
vmrs
0 sf
newpath
179.5 519 moveto
218.5 519 lineto
gsave
0.5 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
136.5 349.5 moveto
297 349.5 lineto
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
136.5 487.5 moveto
297 487.5 lineto
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
231 362.8 moveto
269.5 362.8 lineto
269.5 339.3 lineto
231 339.3 lineto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [9 0 0 9 0 0] makesetfont
233.31134 347.666504 moveto
0 0 32 0 0 (Directory) ts
} 
[0 0 0 1]
sts
vmrs
0 sf
newpath
231 500.5 moveto
269.5 500.5 lineto
269.5 477 lineto
231 477 lineto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [9 0 0 9 0 0] makesetfont
233.31134 485.366516 moveto
0 0 32 0 0 (Directory) ts
} 
[0 0 0 1]
sts
vmrs
vmr
end  % FreeHandDict
%%EndDocument: _
%%EndDocument

 endTexFig
 150 1091 a Fi(Figure)12 b(2:)18 b(The)13 b(D)o(ASH)f(arc)o(hitecture)g
(consists)g(of)g(a)g(set)h(of)f(clusters)g(connected)i(b)o(y)e(a)g(general)
150 1153 y(in)o(terconnection)19 b(net)o(w)o(ork.)34 b(Directory)19
b(memory)f(con)o(tains)h(p)q(oin)o(ters)h(for)f(to)h(the)g(clusters)150
1215 y(curren)o(tly)15 b(cac)o(hing)f(eac)o(h)i(memory)c(line.)30
1398 y(memory)i(b)o(y)i(distributing)e(the)j(ph)o(ysical)e(memory)f(among)g
(the)i(clusters.)22 b(F)l(or)16 b(data)f(accesses)i(that)e(m)o(ust)30
1460 y(b)q(e)e(serviced)f(remotely)l(,)f(D)o(ASH)h(uses)g(a)g(scalable)f(in)o
(terconnection)g(net)o(w)o(ork.)18 b(Supp)q(ort)13 b(of)e(coheren)o(t)i(cac)o
(hes)30 1522 y(could)f(p)q(oten)o(tially)e(compromise)f(the)j(scalabilit)o(y)
e(of)h(the)h(net)o(w)o(ork)f(b)o(y)h(requiring)f(frequen)o(t)g(broadcast)h
(mes-)30 1584 y(sages.)19 b(The)d(use)f(of)g(directories,)e(ho)o(w)o(ev)o
(er,)h(remo)o(v)o(es)f(the)i(need)h(for)f(suc)o(h)g(broadcasts)f(and)i(the)f
(coherence)30 1646 y(tra\016c)g(consists)f(only)h(of)g(p)q(oin)o(t-to-p)q
(oin)o(t)f(messages)g(to)h(clusters)g(that)g(are)g(cac)o(hing)g(that)g(lo)q
(cation.)k(Since)30 1709 y(these)f(clusters)f(m)o(ust)f(ha)o(v)o(e)h
(originally)f(fetc)o(hed)i(the)f(data,)g(the)h(coherence)h(tra\016c)e(will)f
(b)q(e)i(within)f(some)30 1771 y(small)h(constan)o(t)h(factor)g(of)h(the)g
(original)e(data)h(tra\016c.)34 b(In)21 b(fact,)f(since)g(eac)o(h)g(cac)o
(hed)h(blo)q(c)o(k)f(is)f(usually)30 1833 y(referenced)h(sev)o(eral)e(times)f
(b)q(efore)i(b)q(eing)g(in)o(v)m(alidated,)g(cac)o(hing)f(results)g(in)h(a)f
(signi\014can)o(t)g(reduction)h(in)30 1895 y(o)o(v)o(erall)13
b(global)h(tra\016c.)101 1976 y(The)e(ab)q(o)o(v)o(e)f(discussion)g(of)g
(scalabilit)o(y)f(assumes)g(that)h(the)h(accesses)g(are)g(uniformly)d
(distributed)i(across)30 2039 y(the)20 b(mac)o(hine.)33 b(Unfortunately)l(,)
20 b(the)g(uniform)e(access)i(assumption)e(do)q(es)j(not)e(alw)o(a)o(ys)f
(hold)i(for)f(highly)30 2101 y(con)o(tended)c(sync)o(hronization)e(ob)s
(jects)h(and)h(for)e(hea)o(vily)h(shared)g(data)g(ob)s(jects.)19
b(The)14 b(resulting)g Ff(hot)i(sp)n(ots)p Fi(,)30 2163 y(concen)o(trated)e
(accesses)g(to)f(data)g(from)f(the)h(memory)e(of)j(a)f(single)g(cluster)g(o)o
(v)o(er)g(a)h(short)f(duration)g(of)g(time,)30 2225 y(can)g(signi\014can)o
(tly)e(reduce)i(the)g(memory)c(and)k(net)o(w)o(ork)e(throughput.)19
b(The)13 b(reduction)f(o)q(ccurs)h(b)q(ecause)h(the)30 2287
y(distribution)g(of)h(resources)g(is)f(not)h(exploited)g(as)g(it)f(is)h
(under)h(uniform)d(access)j(patterns.)j(T)l(o)c(address)g(hot)30
2349 y(sp)q(ots,)f(D)o(ASH)f(relies)g(on)h(a)g(com)o(bination)d(of)j(hardw)o
(are)f(and)h(soft)o(w)o(are)e(tec)o(hniques.)20 b(F)l(or)13
b(example,)g(D)o(ASH)30 2411 y(pro)o(vides)h(sp)q(ecial)g(extensions)f(to)h
(the)g(directory-based)g(proto)q(col)f(to)h(handle)g(sync)o(hronization)f
(references)30 2473 y(\(e.g.,)i(queue-based)j(lo)q(c)o(ks\),)e(as)g(will)g(b)
q(e)h(discussed)g(in)g(Section)f(3.4.)23 b(F)l(urthermore,)15
b(since)i(D)o(ASH)g(allo)o(ws)30 2535 y(cac)o(hing)12 b(of)h(shared)g
(writable)e(data,)h(it)g(a)o(v)o(oids)g(man)o(y)f(of)h(the)h(data)f(hot)h(sp)
q(ots)f(that)g(o)q(ccur)h(in)g(other)f(parallel)30 2598 y(mac)o(hines)h(that)
h(do)g(not)g(p)q(ermit)f(suc)o(h)i(cac)o(hing.)k(F)l(or)14
b(hot)g(sp)q(ots)g(that)g(can)g(not)g(b)q(e)h(mitigated)d(b)o(y)i(cac)o
(hing,)30 2660 y(some)g(ma)o(y)g(b)q(e)i(handled)g(b)o(y)g(coherence)h(proto)
q(col)d(extensions)h(discussed)i(in)e(Section)g(3.3.2,)f(while)h(others)30
2722 y(m)o(ust)h(b)q(e)j(handled)g(b)o(y)f(restructuring)f(at)g(the)i(soft)o
(w)o(are)d(lev)o(el.)28 b(F)l(or)17 b(example,)g(when)i(using)f(a)f(primitiv)
o(e)964 2904 y(5)p eop
%%Page: 6 6
6 5 bop 30 45 a Fi(suc)o(h)14 b(as)g(a)g(barrier,)f(it)g(is)g(p)q(ossible)h
(to)f(a)o(v)o(oid)g(hot)h(sp)q(ots)f(b)o(y)h(gathering)f(and)h(releasing)f
(pro)q(cessors)h(through)30 107 y(a)h(tree)g(of)g(memory)d(lo)q(cations.)101
189 y(Regarding)18 b(system)f(costs,)h(a)g(ma)s(jor)e(scalabilit)o(y)h
(concern)i(unique)g(to)f(D)o(ASH-lik)o(e)f(mac)o(hines)h(is)g(the)30
251 y(amoun)o(t)11 b(of)h(directory)g(memory)f(required.)19
b(If)13 b(the)g(ph)o(ysical)f(memory)e(in)j(the)f(mac)o(hine)g(gro)o(ws)g
(prop)q(ortion-)30 313 y(ately)j(with)g(the)h(n)o(um)o(b)q(er)g(of)f(pro)q
(cessing)h(no)q(des,)g(then)g(using)g(a)f(bit-v)o(ector)g(to)h(k)o(eep)g
(trac)o(k)f(of)g(all)g(clusters)30 375 y(cac)o(hing)k(a)g(memory)e(blo)q(c)o
(k)i(do)q(es)h(not)f(scale)g(w)o(ell.)31 b(The)20 b(total)d(amoun)o(t)h(of)h
(directory)g(memory)d(needed)30 437 y(is)h Fe(P)113 421 y Fd(2)145
437 y Fc(\002)12 b Fe(M)r(=L)17 b Fi(megabits,)f(where)i Fe(P)24
b Fi(is)16 b(the)i(n)o(um)o(b)q(er)f(of)g(clusters,)g Fe(M)22
b Fi(is)17 b(the)h(megabits)d(of)i(memory)e(p)q(er)30 499 y(cluster,)i(and)h
Fe(L)f Fi(is)g(the)h(cac)o(he-line)g(size)f(in)g(bits.)27 b(Th)o(us,)17
b(the)h(fraction)e(of)h(memory)e(dev)o(oted)j(to)f(k)o(eeping)30
561 y(directory)d(information)d(gro)o(ws)j(as)g Fe(P)t(=L)p
Fi(.)19 b(Dep)q(ending)c(on)g(the)f(size)h(of)f(the)g(mac)o(hine,)f(this)h
(gro)o(wth)f(ma)o(y)g(or)30 624 y(ma)o(y)h(not)h(b)q(e)h(tolerable.)k(F)l(or)
15 b(example,)f(consider)h(a)h(mac)o(hine)e(that)h(con)o(tains)f(up)i(to)f
(32)g(clusters)g(of)h(eigh)o(t)30 686 y(pro)q(cessor)i(eac)o(h,)h(and)f(has)g
(a)g(cac)o(he)h(\(memory\))c(line)j(size)g(of)g(32)f(b)o(ytes.)29
b(F)l(or)18 b(this)g(mac)o(hine)f(that)g(scales)30 748 y(from)c(8)h(to)h(256)
e(pro)q(cessors,)i(the)f(o)o(v)o(erhead)h(for)f(directory)g(memory)e(is)i
(only)h(12.5\045)e(of)h(ph)o(ysical)g(memory)l(,)30 810 y(whic)o(h)h(is)g
(comparable)e(with)i(the)g(o)o(v)o(erhead)g(of)g(supp)q(orting)g(an)g(error)f
(correcting)h(co)q(de)g(on)h(memory)l(.)101 892 y(F)l(or)e(larger)g(mac)o
(hines,)g(where)i(the)f(o)o(v)o(erhead)g(discussed)h(ab)q(o)o(v)o(e)f(can)h
(not)f(b)q(e)h(tolerated,)d(a)i(n)o(um)o(b)q(er)g(of)30 954
y(alternativ)o(es)g(exist.)22 b(Firstly)l(,)15 b(w)o(e)h(can)h(tak)o(e)f(adv)
m(an)o(tage)f(of)h(the)h(fact)f(that)f(at)h(an)o(y)g(giv)o(en)g(p)q(oin)o(t)g
(in)g(time)f(a)30 1016 y(memory)g(blo)q(c)o(k)i(is)f(usually)h(cac)o(hed)h(b)
o(y)f(a)g(v)o(ery)g(small)e(n)o(um)o(b)q(er)h(of)h(pro)q(cessors.)26
b(F)l(or)16 b(example,)h(Figure)f(3)30 1078 y(sho)o(ws)11 b(the)h(n)o(um)o(b)
q(er)g(of)f(in)o(v)m(alidations)f(generated)i(b)o(y)g(t)o(w)o(o)f
(applications)f(run)i(on)g(a)g(sim)o(ulated)e(32)h(pro)q(cessor)30
1140 y(mac)o(hine.)18 b(These)12 b(graphs)f(sho)o(w)g(that)g(most)f(writes)h
(cause)h(in)o(v)m(alidations)e(to)h(only)h(a)f(few)h(cac)o(hes.)19
b(\(W)l(e)11 b(ha)o(v)o(e)30 1202 y(obtained)17 b(similar)d(results)i(for)h
(a)g(large)f(n)o(um)o(b)q(er)g(of)h(other)f(applications.\))24
b(Consequen)o(tly)l(,)17 b(it)f(is)h(p)q(ossible)30 1264 y(to)d(replace)g
(the)g(complete)f(directory)h(bit-v)o(ector)f(b)o(y)h(a)g(small)e(n)o(um)o(b)
q(er)i(of)g(p)q(oin)o(ters,)f(and)i(to)e(use)i(a)f(limited)30
1326 y(broadcast)d(of)h(in)o(v)m(alidations)e(in)i(the)g(un)o(usual)g(case)g
(when)g(the)g(n)o(um)o(b)q(er)g(of)f(p)q(oin)o(ters)h(pro)o(vided)g(is)f(to)q
(o)g(small.)30 1388 y(Secondly)l(,)j(w)o(e)f(can)h(tak)o(e)f(adv)m(an)o(tage)
g(of)g(the)g(fact)g(that)g(the)h(total)e(main)g(memory)e(in)k(the)f(mac)o
(hine)g(is)g(m)o(uc)o(h)30 1450 y(larger)f(than)i(the)f(cac)o(he)h(in)f(the)h
(mac)o(hine.)k(As)c(a)f(result,)g(most)e(main)h(memory)f(blo)q(c)o(ks)i(will)
f(not)i(b)q(e)g(presen)o(t)30 1513 y(in)k(an)o(y)f(pro)q(cessor's)g(cac)o
(he,)h(and)g(th)o(us)f(there)h(is)f(no)h(need)h(to)e(pro)o(vide)g(a)g
(dedicated)h(directory)f(en)o(try)g(for)30 1575 y(ev)o(ery)g(memory)d(blo)q
(c)o(k.)24 b(Studies)17 b([6,)f(10)o(])h(ha)o(v)o(e)f(sho)o(wn)h(that)f(a)g
(small)f(directory)h(cac)o(he)h(p)q(erforms)e(almost)30 1637
y(as)k(w)o(ell)f(as)g(a)h(full)f(directory)l(.)31 b(These)19
b(t)o(w)o(o)f(tec)o(hniques)h(can)g(b)q(e)h(com)o(bined)e(to)h(supp)q(ort)g
(mac)o(hines)e(with)30 1699 y(thousands)e(of)g(pro)q(cessors)g(without)f
(undue)i(o)o(v)o(erhead)f(from)f(directory)g(memory)l(.)101
1781 y(The)e(issue)g(of)g(memory)d(access)k(latency)f(also)f(b)q(ecomes)g
(more)g(prominen)o(t)g(as)h(an)g(arc)o(hitecture)f(is)h(scaled)30
1843 y(to)k(a)h(larger)f(n)o(um)o(b)q(er)g(of)h(no)q(des.)26
b(There)17 b(are)g(t)o(w)o(o)e(complemen)o(tary)f(approac)o(hes)j(for)g
(managing)d(latency:)30 1905 y(metho)q(ds)j(that)g(reduce)i(latency)l(,)e
(and)h(mec)o(hanisms)e(that)h(help)h(tolerate)e(latency)l(.)28
b(D)o(ASH)17 b(uses)h(b)q(oth)g(of)30 1967 y(these)g(approac)o(hes,)f(though)
h(our)f(main)f(fo)q(cus)i(has)f(b)q(een)i(to)e(reduce)h(the)g(latency)f(as)h
(m)o(uc)o(h)e(as)h(p)q(ossible.)30 2029 y(Although)d(latency)g(tolerating)e
(tec)o(hniques)j(are)f(imp)q(ortan)o(t,)e(these)i(tec)o(hniques)h(often)f
(require)g(additional)30 2091 y(application)g(parallelism)e(to)j(b)q(e)g
(e\013ectiv)o(e.)101 2173 y(Hardw)o(are)23 b(coheren)o(t)h(cac)o(hes)g(pro)o
(vide)g(the)g(primary)e(latency)i(reduction)g(mec)o(hanism)d(in)j(D)o(ASH.)30
2235 y(Cac)o(hing)19 b(shared)h(data)f(signi\014can)o(tly)f(reduces)j(the)e
(a)o(v)o(erage)g(latency)g(for)g(remote)f(accesses)i(b)q(ecause)h(of)30
2297 y(the)15 b(spatial)f(and)h(temp)q(oral)e(lo)q(calit)o(y)g(of)i(memory)d
(accesses.)20 b(F)l(or)15 b(references)g(not)g(satis\014ed)g(b)o(y)g(the)g
(cac)o(he,)30 2359 y(the)e(coherence)g(proto)q(col)f(attempts)f(to)h(minimi)o
(ze)e(latency)j(as)f(sho)o(wn)g(in)h(the)f(next)h(section.)19
b(F)l(urthermore,)30 2421 y(as)c(previously)f(men)o(tioned,)g(allo)q(cating)f
(data)h(to)h(memory)d(close)j(to)f(the)i(pro)q(cessors)e(that)h(use)g(it)g
(can)g(also)30 2483 y(b)q(e)f(used)f(to)f(reduce)i(latency)l(.)19
b(While)12 b(a)o(v)o(erage)g(memory)e(latency)j(is)f(reduced,)j(references)e
(that)f(corresp)q(ond)30 2545 y(to)18 b(in)o(ter-pro)q(cessor)f(comm)o
(unication)e(can)k(not)f(a)o(v)o(oid)f(the)h(inheren)o(t)h(latencies)f(of)f
(a)h(large)g(mac)o(hine.)28 b(In)30 2607 y(D)o(ASH,)17 b(the)h(latency)g(for)
f(these)h(accesses)h(is)e(addressed)h(b)o(y)g(a)g(v)m(ariet)o(y)f(of)g
(latency)h(hiding)g(mec)o(hanisms.)30 2670 y(These)h(mec)o(hanisms)e(range)h
(from)g(supp)q(ort)h(of)f(a)h(relaxed)g(memory)d(consistency)j(mo)q(del)f(to)
g(supp)q(ort)h(of)30 2732 y(non-blo)q(c)o(king)c(prefetc)o(h)g(op)q
(erations.)k(These)d(op)q(erations)e(are)h(detailed)g(in)g(Sections)g(3.2)f
(and)h(3.3.1.)964 2904 y(6)p eop
%%Page: 7 7
7 6 bop 67 4 a
 14208860 12930062 657817 -526254 33154007 29338664 startTexFig
 67 4 a
%%BeginDocument: splot.ps
%!

/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def
/SS9 { setscreen } def
/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def


%%%%%%%%%%%%%%%%%%%%%%%  CURVE SMOOTHING  %%%%%%%%%%%%%%%%%%%%%%

% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def

%%EndDocument
 67 4 a
%%BeginDocument: mp3d.ps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 10 -8 504 446
%%Pages: 1
%%DocumentFonts: Helvetica Helvetica-Oblique Helvetica-Bold Helvetica-BoldOblique Times-Roman Times-Italics Times-Bold Times-BoldItalics
%%EndComments
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

%%%%
%%%% setscreen is not EPSF compliant, but if you want to cheat
%%%% you can switch which of the following two definitions of
%%%% SS9 is commented out.  It would be best to do this by having
%%%% a seperate version of the prolog file for the user to select.
%%%%
%%%% /SS9 { setscreen } def
/SS9 { pop pop pop } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def


%%%%%%%%%%%%%%%%%%%%%%%  CURVE SMOOTHING  %%%%%%%%%%%%%%%%%%%%%%

% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
%%EndProlog
%%Page ? 1
72.000000 72.000000 504.000000 72.000000 504.000000 432.000000 72.000000 432.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 504.000000 72.000000 504.000000 432.000000 72.000000 432.000000 newpath moveto lineto lineto lineto closepath clip
106.56 72 S9
[] 21.600000 SL
106.56 204.408 M9
0.500000 G9 D9 0.0 G9
141.12 72 S9
141.12 288.994 M9
0.500000 G9 D9 0.0 G9
175.68 72 S9
175.68 77.1466 M9
0.500000 G9 D9 0.0 G9
210.24 72 S9
210.24 74.3118 M9
0.500000 G9 D9 0.0 G9
244.8 72 S9
244.8 73.2273 M9
0.500000 G9 D9 0.0 G9
279.36 72 S9
279.36 72.5045 M9
0.500000 G9 D9 0.0 G9
313.92 72 S9
313.92 72.34 M9
0.500000 G9 D9 0.0 G9
348.48 72 S9
348.48 72.3593 M9
0.500000 G9 D9 0.0 G9
383.04 72 S9
383.04 72.3257 M9
0.500000 G9 D9 0.0 G9
417.6 72 S9
417.6 72.1427 M9
0.500000 G9 D9 0.0 G9
452.16 72 S9
452.16 72.0537 M9
0.500000 G9 D9 0.0 G9
486.72 72 S9
486.72 72.1864 M9
0.500000 G9 D9 0.0 G9
initclip 
18 /Helvetica SetTxt
14 /Helvetica-Bold SetTxt
18 /Helvetica SetTxt
14 /Helvetica-Bold SetTxt
(0) 0 106.56 55.2 TXC
18 /Helvetica SetTxt
14 /Helvetica-Bold SetTxt
(1) 0 141.12 55.2 TXC
18 /Helvetica SetTxt
14 /Helvetica-Bold SetTxt
(2) 0 175.68 55.2 TXC
18 /Helvetica SetTxt
14 /Helvetica-Bold SetTxt
(3) 0 210.24 55.2 TXC
18 /Helvetica SetTxt
14 /Helvetica-Bold SetTxt
(4) 0 244.8 55.2 TXC
18 /Helvetica SetTxt
14 /Helvetica-Bold SetTxt
(5) 0 279.36 55.2 TXC
18 /Helvetica SetTxt
14 /Helvetica-Bold SetTxt
(6) 0 313.92 55.2 TXC
18 /Helvetica SetTxt
14 /Helvetica-Bold SetTxt
(7) 0 348.48 55.2 TXC
18 /Helvetica SetTxt
14 /Helvetica-Bold SetTxt
(8) 0 383.04 55.2 TXC
18 /Helvetica SetTxt
14 /Helvetica-Bold SetTxt
(9) 0 417.6 55.2 TXC
18 /Helvetica SetTxt
14 /Helvetica-Bold SetTxt
(10) 0 452.16 55.2 TXC
18 /Helvetica SetTxt
14 /Helvetica-Bold SetTxt
18 /Helvetica SetTxt
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 65 66.6 TXR
18 /Helvetica SetTxt
(|) -90 72 108 TXC
14 /Helvetica-Bold SetTxt
(10) 0 65 102.6 TXR
18 /Helvetica SetTxt
(|) -90 72 144 TXC
14 /Helvetica-Bold SetTxt
(20) 0 65 138.6 TXR
18 /Helvetica SetTxt
(|) -90 72 180 TXC
14 /Helvetica-Bold SetTxt
(30) 0 65 174.6 TXR
18 /Helvetica SetTxt
(|) -90 72 216 TXC
14 /Helvetica-Bold SetTxt
(40) 0 65 210.6 TXR
18 /Helvetica SetTxt
(|) -90 72 252 TXC
14 /Helvetica-Bold SetTxt
(50) 0 65 246.6 TXR
18 /Helvetica SetTxt
(|) -90 72 288 TXC
14 /Helvetica-Bold SetTxt
(60) 0 65 282.6 TXR
18 /Helvetica SetTxt
(|) -90 72 324 TXC
14 /Helvetica-Bold SetTxt
(70) 0 65 318.6 TXR
18 /Helvetica SetTxt
(|) -90 72 360 TXC
14 /Helvetica-Bold SetTxt
(80) 0 65 354.6 TXR
18 /Helvetica SetTxt
(|) -90 72 396 TXC
14 /Helvetica-Bold SetTxt
(90) 0 65 390.6 TXR
18 /Helvetica SetTxt
(|) -90 72 432 TXC
14 /Helvetica-Bold SetTxt
(100) 0 65 426.6 TXR
18 /Helvetica SetTxt
() 0 288 -7.2 TXC
[] 2.600000 SL
2 setlinecap
72 72 504 72 
L9
0 setlinecap
72 72 72 432 
L9
( Invalidations) 0 504 32 TXR
( Percentage of all shared writes) 90 28.1 432 TXR
14 /Helvetica-Bold SetTxt
(37) 0 106.56 208.008 TXC
(60) 0 141.12 292.594 TXC
( 1) 0 175.68 80.7466 TXC
(.6) 0 210.24 77.9118 TXC
(.3) 0 244.8 76.8273 TXC
(.1) 0 279.36 76.1045 TXC
(.1) 0 313.92 75.94 TXC
(.1) 0 348.48 75.9593 TXC
(.1) 0 383.04 75.9257 TXC
(.0) 0 417.6 75.7427 TXC
(.0) 0 452.16 75.6537 TXC
(.1) 0 486.72 75.7864 TXC
(> 10) 0 486.72 55.08 TXC
18 /Helvetica SetTxt
(Avg invals per shared write:	0.71) 0 175.68 378 TXL
14 /Helvetica-Bold SetTxt
() 0 106.56 193.308 TXC
() 0 141.12 277.894 TXC
() 0 175.68 66.0466 TXC
() 0 210.24 63.2118 TXC
() 0 244.8 62.1273 TXC
() 0 279.36 61.4045 TXC
() 0 313.92 61.24 TXC
() 0 348.48 61.2593 TXC
() 0 383.04 61.2257 TXC
() 0 417.6 61.0427 TXC
() 0 452.16 60.9537 TXC
() 0 486.72 61.0864 TXC
() 0 486.72 40.38 TXC
18 /Helvetica SetTxt
() 0 175.68 359.1 TXL
72.000000 72.000000 504.000000 72.000000 504.000000 432.000000 72.000000 432.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 504.000000 72.000000 504.000000 432.000000 72.000000 432.000000 newpath moveto lineto lineto lineto closepath clip
10 SetSym
initclip 
showpage
%%Trailer
end
%%EndDocument

 endTexFig
 982 4 a
 14208860 12930062 657817 -526254 33154007 29338664 startTexFig
 982 4 a
%%BeginDocument: splot.ps
%!

/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def
/SS9 { setscreen } def
/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def


%%%%%%%%%%%%%%%%%%%%%%%  CURVE SMOOTHING  %%%%%%%%%%%%%%%%%%%%%%

% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def

%%EndDocument
 982 4 a
%%BeginDocument: pthor32.ps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 10 -8 504 446
%%Pages: 1
%%DocumentFonts: Helvetica Helvetica-Oblique Helvetica-Bold Helvetica-BoldOblique Times-Roman Times-Italics Times-Bold Times-BoldItalics
%%EndComments
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

%%%%
%%%% setscreen is not EPSF compliant, but if you want to cheat
%%%% you can switch which of the following two definitions of
%%%% SS9 is commented out.  It would be best to do this by having
%%%% a seperate version of the prolog file for the user to select.
%%%%
%%%% /SS9 { setscreen } def
/SS9 { pop pop pop } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def


%%%%%%%%%%%%%%%%%%%%%%%  CURVE SMOOTHING  %%%%%%%%%%%%%%%%%%%%%%

% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
%%EndProlog
%%Page ? 1
72.000000 72.000000 504.000000 72.000000 504.000000 432.000000 72.000000 432.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 504.000000 72.000000 504.000000 432.000000 72.000000 432.000000 newpath moveto lineto lineto lineto closepath clip
106.56 72 S9
[] 21.600000 SL
106.56 355.881 M9
0.500000 G9 D9 0.0 G9
141.12 72 S9
141.12 131.075 M9
0.500000 G9 D9 0.0 G9
175.68 72 S9
175.68 80.1633 M9
0.500000 G9 D9 0.0 G9
210.24 72 S9
210.24 76.2206 M9
0.500000 G9 D9 0.0 G9
244.8 72 S9
244.8 73.2104 M9
0.500000 G9 D9 0.0 G9
279.36 72 S9
279.36 72.6347 M9
0.500000 G9 D9 0.0 G9
313.92 72 S9
313.92 72.4268 M9
0.500000 G9 D9 0.0 G9
348.48 72 S9
348.48 72.3065 M9
0.500000 G9 D9 0.0 G9
383.04 72 S9
383.04 72.2479 M9
0.500000 G9 D9 0.0 G9
417.6 72 S9
417.6 72.1752 M9
0.500000 G9 D9 0.0 G9
452.16 72 S9
452.16 72.1323 M9
0.500000 G9 D9 0.0 G9
486.72 72 S9
486.72 73.5263 M9
0.500000 G9 D9 0.0 G9
initclip 
18 /Helvetica SetTxt
14 /Helvetica-Bold SetTxt
18 /Helvetica SetTxt
14 /Helvetica-Bold SetTxt
(0) 0 106.56 55.2 TXC
18 /Helvetica SetTxt
14 /Helvetica-Bold SetTxt
(1) 0 141.12 55.2 TXC
18 /Helvetica SetTxt
14 /Helvetica-Bold SetTxt
(2) 0 175.68 55.2 TXC
18 /Helvetica SetTxt
14 /Helvetica-Bold SetTxt
(3) 0 210.24 55.2 TXC
18 /Helvetica SetTxt
14 /Helvetica-Bold SetTxt
(4) 0 244.8 55.2 TXC
18 /Helvetica SetTxt
14 /Helvetica-Bold SetTxt
(5) 0 279.36 55.2 TXC
18 /Helvetica SetTxt
14 /Helvetica-Bold SetTxt
(6) 0 313.92 55.2 TXC
18 /Helvetica SetTxt
14 /Helvetica-Bold SetTxt
(7) 0 348.48 55.2 TXC
18 /Helvetica SetTxt
14 /Helvetica-Bold SetTxt
(8) 0 383.04 55.2 TXC
18 /Helvetica SetTxt
14 /Helvetica-Bold SetTxt
(9) 0 417.6 55.2 TXC
18 /Helvetica SetTxt
14 /Helvetica-Bold SetTxt
(10) 0 452.16 55.2 TXC
18 /Helvetica SetTxt
14 /Helvetica-Bold SetTxt
18 /Helvetica SetTxt
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 65 66.6 TXR
18 /Helvetica SetTxt
(|) -90 72 108 TXC
14 /Helvetica-Bold SetTxt
(10) 0 65 102.6 TXR
18 /Helvetica SetTxt
(|) -90 72 144 TXC
14 /Helvetica-Bold SetTxt
(20) 0 65 138.6 TXR
18 /Helvetica SetTxt
(|) -90 72 180 TXC
14 /Helvetica-Bold SetTxt
(30) 0 65 174.6 TXR
18 /Helvetica SetTxt
(|) -90 72 216 TXC
14 /Helvetica-Bold SetTxt
(40) 0 65 210.6 TXR
18 /Helvetica SetTxt
(|) -90 72 252 TXC
14 /Helvetica-Bold SetTxt
(50) 0 65 246.6 TXR
18 /Helvetica SetTxt
(|) -90 72 288 TXC
14 /Helvetica-Bold SetTxt
(60) 0 65 282.6 TXR
18 /Helvetica SetTxt
(|) -90 72 324 TXC
14 /Helvetica-Bold SetTxt
(70) 0 65 318.6 TXR
18 /Helvetica SetTxt
(|) -90 72 360 TXC
14 /Helvetica-Bold SetTxt
(80) 0 65 354.6 TXR
18 /Helvetica SetTxt
(|) -90 72 396 TXC
14 /Helvetica-Bold SetTxt
(90) 0 65 390.6 TXR
18 /Helvetica SetTxt
(|) -90 72 432 TXC
14 /Helvetica-Bold SetTxt
(100) 0 65 426.6 TXR
18 /Helvetica SetTxt
() 0 288 -7.2 TXC
[] 2.600000 SL
2 setlinecap
72 72 504 72 
L9
0 setlinecap
72 72 72 432 
L9
( Invalidations) 0 504 32 TXR
( Percentage of all shared writes) 90 28.1 432 TXR
14 /Helvetica-Bold SetTxt
(79) 0 106.56 359.481 TXC
(16) 0 141.12 134.675 TXC
( 2) 0 175.68 83.7633 TXC
( 1) 0 210.24 79.8206 TXC
(.3) 0 244.8 76.8104 TXC
(.2) 0 279.36 76.2347 TXC
(.1) 0 313.92 76.0268 TXC
(.1) 0 348.48 75.9065 TXC
(.1) 0 383.04 75.8479 TXC
(.0) 0 417.6 75.7752 TXC
(.0) 0 452.16 75.7323 TXC
(.4) 0 486.72 77.1263 TXC
(> 10) 0 486.72 55.08 TXC
18 /Helvetica SetTxt
(Avg invals per shared write:	0.39) 0 175.68 378 TXL
14 /Helvetica-Bold SetTxt
() 0 106.56 344.781 TXC
() 0 141.12 119.975 TXC
() 0 175.68 69.0633 TXC
() 0 210.24 65.1206 TXC
() 0 244.8 62.1104 TXC
() 0 279.36 61.5347 TXC
() 0 313.92 61.3268 TXC
() 0 348.48 61.2065 TXC
() 0 383.04 61.1479 TXC
() 0 417.6 61.0752 TXC
() 0 452.16 61.0323 TXC
() 0 486.72 62.4263 TXC
() 0 486.72 40.38 TXC
18 /Helvetica SetTxt
() 0 175.68 359.1 TXL
72.000000 72.000000 504.000000 72.000000 504.000000 432.000000 72.000000 432.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 504.000000 72.000000 504.000000 432.000000 72.000000 432.000000 newpath moveto lineto lineto lineto closepath clip
10 SetSym
initclip 
showpage
%%Trailer
end
%%EndDocument

 endTexFig
 30 926 a Fi(Figure)20 b(3:)31 b(Cac)o(he)21 b(in)o(v)m(alidation)f(patterns)
g(for)h(MP3D)f(and)h(PTHOR.)g(MP3D)f(uses)h(a)g(particle-based)30
988 y(sim)o(ulation)10 b(tec)o(hnique)j(to)g(determine)f(the)h(structure)g
(of)g(sho)q(c)o(k)g(w)o(a)o(v)o(es)f(caused)h(b)o(y)g(ob)s(jects)f(\015ying)h
(at)g(high-)30 1050 y(sp)q(eed)g(in)f(the)g(upp)q(er)h(atmosphere.)k(PTHOR)c
(is)e(a)h(parallel)f(logic)f(sim)o(ulator)f(based)k(on)e(the)i(Chandy-Misra)
30 1113 y(algorithm.)101 1246 y(W)l(e)18 b(also)f(exp)q(ect)j(soft)o(w)o(are)
c(to)i(pla)o(y)g(a)g(critical)e(role)i(in)g(ac)o(hieving)g(go)q(o)q(d)g(p)q
(erformance)g(on)g(a)g(highly)30 1308 y(parallel)f(mac)o(hine.)27
b(Ob)o(viously)l(,)19 b(applications)d(need)j(to)f(exhibit)g(go)q(o)q(d)g
(parallelism)d(to)j(exploit)f(the)h(ric)o(h)30 1370 y(computational)13
b(resources)i(of)g(a)h(large)e(mac)o(hine.)20 b(In)c(addition,)e
(applications,)g(compilers)g(and)i(op)q(erating)30 1432 y(systems)k(need)i
(to)f(exploit)g(cac)o(he)g(and)h(memory)d(lo)q(calit)o(y)h(together)g(with)h
(latency)g(hiding)g(tec)o(hniques)30 1494 y(to)d(ac)o(hiev)o(e)g(high)g(pro)q
(cessor)g(utilization.)28 b(Applications)17 b(still)g(b)q(ene\014t)i(from)e
(the)i(single)e(address)i(space,)30 1556 y(ho)o(w)o(ev)o(er,)f(b)q(ecause)h
(only)e(p)q(erformance)h(critical)e(co)q(de)j(needs)g(to)e(b)q(e)i(tuned)g
(to)e(the)h(system,)f(other)h(co)q(de)30 1618 y(can)d(assume)f(a)h(simple)f
(uniform)g(memory)e(mo)q(del.)30 1789 y Fh(3)69 b(The)23 b(D)n(ASH)f(Cac)n
(he)h(Coherence)e(Proto)r(col)30 1915 y Fi(Within)e(the)g(D)o(ASH)g(system)f
(organization,)g(there)i(is)f(still)f(a)h(great)f(deal)h(of)g(freedom)g(in)g
(selecting)g(the)30 1978 y(sp)q(eci\014c)13 b(cac)o(he)f(coherence)h(proto)q
(col.)18 b(This)12 b(section)f(b)q(egins)i(with)e(an)h(explanation)f(of)h
(the)g(basic)g(coherence)30 2040 y(proto)q(col)e(used)i(b)o(y)g(D)o(ASH)f
(for)g(normal)e(read)j(and)f(write)g(op)q(erations.)18 b(The)11
b(resulting)g(memory)e(consistency)30 2102 y(mo)q(del)21 b(visible)g(to)h
(the)g(programmer)d(and)j(compiler)e(is)i(then)g(outlined.)40
b(Finally)l(,)22 b(extensions)g(to)g(the)30 2164 y(proto)q(col)14
b(that)h(supp)q(ort)g(latency)g(hiding)g(and)g(e\016cien)o(t)g(sync)o
(hronization)f(are)h(detailed.)30 2311 y Fg(3.1)56 b(The)18
b(Memory)g(Hierarc)n(h)n(y)30 2422 y Fi(D)o(ASH)d(implemen)o(ts)e(an)i(in)o
(v)m(alidation-based)f(cac)o(he)h(coherence)i(proto)q(col.)i(A)c(memory)d(lo)
q(cation)j(ma)o(y)e(b)q(e)30 2484 y(in)i(one)h(of)f(three)h(states.)k(It)c
(ma)o(y)e(b)q(e)i Ff(unc)n(ache)n(d)p Fi(,)f(that)g(is)g(not)g(cac)o(hed)h(b)
o(y)g(an)o(y)f(cluster;)g Ff(shar)n(e)n(d)p Fi(,)g(that)g(is)g(in)30
2546 y(an)h(unmo)q(di\014ed)g(state)f(in)h(the)g(cac)o(hes)h(of)e(one)h(or)g
(more)f(clusters;)g(or)h Ff(dirty)p Fi(,)g(that)g(is)f(mo)q(di\014ed)h(in)g
(a)f(single)30 2608 y(cac)o(he)j(of)g(some)e(cluster.)28 b(The)18
b(directory)f(k)o(eeps)h(the)g(summary)e(information)f(for)i(eac)o(h)h
(memory)d(blo)q(c)o(k,)30 2670 y(sp)q(ecifying)g(its)f(state)h(and)g(the)h
(clusters)e(that)h(are)g(cac)o(hing)g(it.)101 2752 y(The)e(D)o(ASH)f(memory)f
(system)g(can)i(b)q(e)h(logically)d(brok)o(en)i(in)o(to)e(four)i(lev)o(els)f
(of)h(hierarc)o(h)o(y)f(as)g(illustrated)964 2904 y(7)p eop
%%Page: 8 8
8 7 bop 588 4 a
 12219616 14208860 13024788 23681433 30391173 43810652 startTexFig
 588 4 a
%%BeginDocument: empty.ps
%%EndDocument
 588 4 a
%%BeginDocument: mem_hierarchy.ps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: FreeHand
%%Title: mem.hier.1090
%%CreationDate: 12/6/90 6:50 PM
%%BoundingBox: 198 360 462 666
%%DocumentProcSets: FreeHand_header 2 0
%%DocumentSuppliedProcSets: FreeHand_header 2 0
%%ColorUsage: Color
%%CMYKProcessColor: 0 0 0 0.1  (10% gray)
%%+ 0 0 0 0.2  (20% gray)
%%+ 0 0 0 0.4  (40% gray)
%%+ 0 0 0 0.6  (60% gray)
%%+ 0 0 0 0.8  (80% gray)
%%DocumentFonts: Symbol
%%+Times-Roman
%%+Times-Bold
%%DocumentNeededFonts: Symbol
%%+Times-Roman
%%+Times-Bold
%%EndComments
%%BeginProcSet: FreeHand_header 2 0
/FreeHandDict 200 dict def
FreeHandDict begin
/currentpacking where{pop true setpacking}if
/bdf{bind def}bind def
/bdef{bind def}bdf
/xdf{exch def}bdf
/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf
/min{2 copy gt{exch}if pop}bdf
/max{2 copy lt{exch}if pop}bdf
/dr{transform .25 sub round .25 add
exch .25 sub round .25 add exch itransform}bdf
/curveto{dr curveto}bdf
/lineto{dr lineto}bdf
/moveto{dr moveto}bdf
/graystep 1 256 div def
/bottom -0 def
/delta -0 def
/frac -0 def
/left -0 def
/numsteps -0 def
/numsteps1 -0 def
/radius -0 def
/right -0 def
/top -0 def
/x -0 def
/y -0 def
/df currentflat def
/tempstr 1 string def
/clipflatness 3 def
/inverted?
0 currenttransfer exec .5 ge def
/concatprocs{
/proc2 exch cvlit def/proc1 exch cvlit def
/newproc proc1 length proc2 length add array def
newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval
newproc cvx}bdf
/storerect{/top xdf/right xdf/bottom xdf/left xdf}bdf
/rectpath{newpath left bottom moveto left top lineto
right top lineto right bottom lineto closepath}bdf
/sf{dup 0 eq{pop df dup 3 mul}{dup} ifelse /clipflatness xdf setflat}bdf
version cvr 38.0 le
{/setrgbcolor{
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
setrgbcolor}bdf}if
/gettint{0 get}bdf
/puttint{0 exch put}bdf
/vms{/vmsv save def}bdf
/vmr{vmsv restore}bdf
/vmrs{vmr vms}bdf
/CD{/NF exch def
{exch dup/FID ne{exch NF 3 1 roll put}
{pop pop}ifelse}forall NF}bdf
/MN{1 index length/Len exch def
dup length Len add string dup
Len 4 -1 roll putinterval dup 0 4 -1 roll putinterval}bdf
/RC{256 string cvs(|______)anchorsearch
{1 index MN cvn/NewN exch def cvn
findfont dup maxlength dict CD dup/FontName NewN put dup
/Encoding MacVec put NewN exch definefont pop}{pop}ifelse}bdf
/RF{dup FontDirectory exch known{pop}{RC}ifelse}bdf
/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known
{exch}if pop findfont}bdf
userdict begin /BDFontDict 20 dict def end
BDFontDict begin
/bu{}def
/bn{}def
/setTxMode{pop}def
/gm{moveto}def
/show{pop}def
/gr{pop}def
/fnt{pop pop pop}def
/fs{pop}def
/fz{pop}def
/lin{pop pop}def
end
/MacVec 256 array def
MacVec 0 /Helvetica findfont
/Encoding get 0 128 getinterval putinterval
MacVec 127 /DEL put MacVec 16#27 /quotesingle put MacVec 16#60 /grave put
/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI
/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/US
MacVec 0 32 getinterval astore pop
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/register/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/nbspace/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase
/perthousand/Acircumflex/Ecircumflex/Aacute
/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex
/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacVec 128 128 getinterval astore pop
/fps{currentflat exch dup 0 le{pop 1}if
{dup setflat 3 index stopped
{1.3 mul dup 3 index gt{pop setflat pop pop stop}if}{exit}ifelse
}loop pop setflat pop pop
}bdf
/fp{100 currentflat fps}bdf
/rfp{clipflatness currentflat fps}bdf
/fcp{100 clipflatness fps}bdf
/fclip{{clip}fcp}bdf
/feoclip{{eoclip}fcp}bdf
end %. FreeHandDict
%%EndProcSet
%%BeginSetup
FreeHandDict begin
/ccmyk{dup 5 -1 roll sub 0 max exch}ndf
/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf
/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf
/findcmykcustomcolor{5 /packedarray where{pop packedarray}{array astore readonly}ifelse}ndf
/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf
/setseparationgray{1 exch sub dup dup dup setcmykcolor}ndf
/setoverprint{pop}ndf
/currentoverprint false ndf
/colorimage{pop pop
[5 -1 roll/exec cvx 6 -1 roll/exec cvx 7 -1 roll/exec cvx 8 -1 roll/exec cvx
/exch cvx/pop cvx/exch cvx/pop cvx/exch cvx/pop cvx/invbuf cvx]cvx image}
%. version 47.1 of Postscript defines colorimage incorrectly (rgb model only)
version cvr 47.1 le{userdict begin bdf end}{ndf}ifelse
/customcolorimage{pop image}ndf
/separationimage{image}ndf
/newcmykcustomcolor{6 /packedarray where{pop packedarray}{array astore readonly}ifelse}ndf
/inkoverprint false ndf
/setinkoverprint{pop}ndf
/overprintprocess{pop}ndf
/setspotcolor
{spots exch get 0 5 getinterval exch setcustomcolor}ndf
/currentcolortransfer{currenttransfer dup dup dup}ndf
/setcolortransfer{systemdict begin settransfer end pop pop pop}ndf
/setimagecmyk{dup length 4 eq
{aload pop}
{aload pop spots exch get 0 4 getinterval aload pop 4
{4 index mul 4 1 roll}repeat 5 -1 roll pop} ifelse
systemdict /colorimage known{version cvr 47.1 gt}{false}ifelse
not{pop 1 currentgray sub}if
/ik xdf /iy xdf /im xdf /ic xdf
}ndf
/setcolor{dup length 4 eq
{aload overprintprocess setcmykcolor}
{aload 1 get spots exch get 5 get setinkoverprint setspotcolor}
ifelse}ndf
/bc2[0 0]def
/bc4[0 0 0 0]def
/c1[0 0 0 0]def
/c2[0 0 0 0]def
/absmax{2 copy abs exch abs gt{exch}if pop}bdf
/calcstep
{c1 length 4 eq
{
0 1 3
{c1 1 index get
c2 3 -1 roll get
sub
}for
absmax absmax absmax
}
{
bc2 c1 1 get 1 exch put
c1 gettint c2 gettint
sub abs
}ifelse
graystep div abs round dup 0 eq{pop 1}if
dup /numsteps xdf 1 sub dup 0 eq{pop 1}if /numsteps1 xdf
}bdf
/cblend{
c1 length 4 eq
{
0 1 3
{bc4 exch
c1 1 index get
c2 2 index get
1 index sub
frac mul add put
}for bc4
}{
bc2
c1 gettint
c2 gettint
1 index sub
frac mul add
puttint bc2
}ifelse
setcolor
}bdf
/logtaper{/frac frac 9 mul 1 add log def}bdf
/imbits 1 def
/iminv false def
/invbuf{0 1 2 index length 1 sub{dup 2 index exch get 255 exch sub 2 index 3 1 roll put}for}bdf
/cyanrp{currentfile cyanbuf readhexstring pop iminv{invbuf}if}def
/magentarp{cyanbuf magentabuf copy}bdf
/yellowrp{cyanbuf yellowbuf copy}bdf
/blackrp{cyanbuf blackbuf copy}bdf
/fixtransfer{
dup{ic mul ic sub 1 add}concatprocs exch
dup{im mul im sub 1 add}concatprocs exch
dup{iy mul iy sub 1 add}concatprocs exch
{ik mul ik sub 1 add}concatprocs
currentcolortransfer
5 -1 roll exch concatprocs 7 1 roll
4 -1 roll exch concatprocs 6 1 roll
3 -1 roll exch concatprocs 5 1 roll
concatprocs 4 1 roll
setcolortransfer
}bdf
/textopf false def
/curtextmtx{}def
/otw .25 def
/msf{dup/curtextmtx xdf makefont setfont}bdf
/makesetfont/msf load def
/curtextheight{.707104 .707104 curtextmtx dtransform
dup mul exch dup mul add sqrt}bdf
/ta{1 index
{tempstr 0 2 index put tempstr 2 index
gsave exec grestore
tempstr stringwidth rmoveto
5 index eq{6 index 6 index rmoveto}if
3 index 3 index rmoveto
}forall 7{pop}repeat}bdf
/sts{setcolor textopf setoverprint/ts{awidthshow}def exec}bdf
/stol{setlinewidth setcolor textopf setoverprint newpath
/ts{{false charpath stroke}ta}def exec}bdf
/currentpacking where{pop false setpacking}if
%%EndSetup
/spots[1 0 0 0 (Process Cyan) false newcmykcustomcolor
0 1 0 0 (Process Magenta) false newcmykcustomcolor
0 0 1 0 (Process Yellow) false newcmykcustomcolor
0 0 0 1 (Process Black) false newcmykcustomcolor
]def
vms
0 sf
newpath
277.8 652.5 moveto
387 652.5 lineto
391.9 652.5 396 648.4 396 643.5 curveto
396 603 lineto
396 598.1 391.9 594 387 594 curveto
277.8 594 lineto
272.9 594 268.8 598.1 268.8 603 curveto
268.8 643.5 lineto
268.8 648.4 272.9 652.5 277.8 652.5 curveto
closepath
gsave
[0 0 0 0.4]setcolor  {fill}fp 
grestore
0 sf
newpath
271.6 661.5 moveto
380.8 661.5 lineto
385.7 661.5 389.8 657.4 389.8 652.5 curveto
389.8 612 lineto
389.8 607.1 385.7 603 380.8 603 curveto
271.6 603 lineto
266.7 603 262.6 607.1 262.6 612 curveto
262.6 652.5 lineto
262.6 657.4 266.7 661.5 271.6 661.5 curveto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [14 0 0 14 0 0] makesetfont
281.313538 620.970093 moveto
0 0 32 0 0 (Processor cache) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Bold
/f2 /|______Times-Bold dup RF findfont def
{
f2 [14 0 0 14 0 0] makesetfont
279.200012 647.970093 moveto
0 0 32 0 0 (Pr) ts
293.716125 647.970093 moveto
0 0 32 0 0 (ocessor) ts
336.997864 647.970093 moveto
0 0 32 0 0 ( Level) ts
} 
[0 0 0 1]
sts
vmrs
0 sf
newpath
263.2 643.5 moveto
389.2 643.5 lineto
gsave
0.5 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
263.2 423 moveto
405 423 lineto
409.9 423 414 418.9 414 414 curveto
414 369 lineto
414 364.1 409.9 360 405 360 curveto
263.2 360 lineto
258.3 360 254.2 364.1 254.2 369 curveto
254.2 414 lineto
254.2 418.9 258.3 423 263.2 423 curveto
closepath
gsave
[0 0 0 0.4]setcolor  {fill}fp 
grestore
0 sf
newpath
255.3 432 moveto
397.1 432 lineto
402 432 406.1 427.9 406.1 423 curveto
406.1 378 lineto
406.1 373.1 402 369 397.1 369 curveto
255.3 369 lineto
250.4 369 246.3 373.1 246.3 378 curveto
246.3 423 lineto
246.3 427.9 250.4 432 255.3 432 curveto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
246.3 414 moveto
406.1 414 lineto
gsave
0.5 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
0 sf
newpath
218.2 508.5 moveto
452.2 508.5 lineto
457.1 508.5 461.2 504.4 461.2 499.5 curveto
461.2 454.5 lineto
461.2 449.6 457.1 445.5 452.2 445.5 curveto
218.2 445.5 lineto
213.3 445.5 209.2 449.6 209.2 454.5 curveto
209.2 499.5 lineto
209.2 504.4 213.3 508.5 218.2 508.5 curveto
closepath
gsave
[0 0 0 0.4]setcolor  {fill}fp 
grestore
0 sf
newpath
254.2 594 moveto
416.2 594 lineto
421.1 594 425.2 589.9 425.2 585 curveto
425.2 540 lineto
425.2 535.1 421.1 531 416.2 531 curveto
254.2 531 lineto
249.3 531 245.2 535.1 245.2 540 curveto
245.2 585 lineto
245.2 589.9 249.3 594 254.2 594 curveto
closepath
gsave
[0 0 0 0.4]setcolor  {fill}fp 
grestore
0 sf
newpath
245.2 603 moveto
407.2 603 lineto
412.1 603 416.2 598.9 416.2 594 curveto
416.2 549 lineto
416.2 544.1 412.1 540 407.2 540 curveto
245.2 540 lineto
240.3 540 236.2 544.1 236.2 549 curveto
236.2 594 lineto
236.2 598.9 240.3 603 245.2 603 curveto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [14 0 0 14 0 0] makesetfont
257.5979 566.970093 moveto
0 0 32 0 0 (Other processor caches) ts
267.487793 552.970093 moveto
0 0 32 0 0 (within local cluster) ts
374.012207 552.970093 moveto
0 0 32 0 0 (.) ts
} 
[0 0 0 1]
sts
vmrs
0 sf
newpath
236.2 585 moveto
416.2 585 lineto
gsave
0.5 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
%%IncludeFont: Times-Bold
/f2 /|______Times-Bold dup RF findfont def
{
f2 [14 0 0 14 0 0] makesetfont
267.599976 589.470093 moveto
0 0 32 0 0 (Local Cluster) ts
348.602417 589.470093 moveto
0 0 32 0 0 ( Level) ts
} 
[0 0 0 1]
sts
vmrs
0 sf
newpath
209.2 517.5 moveto
443.2 517.5 lineto
448.1 517.5 452.2 513.4 452.2 508.5 curveto
452.2 463.5 lineto
452.2 458.6 448.1 454.5 443.2 454.5 curveto
209.2 454.5 lineto
204.3 454.5 200.2 458.6 200.2 463.5 curveto
200.2 508.5 lineto
200.2 513.4 204.3 517.5 209.2 517.5 curveto
closepath
gsave
[0 0 0 0]setcolor  {fill}fp 
grestore
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [14 0 0 14 0 0] makesetfont
246.70488 481.470093 moveto
0 0 32 0 0 (Directory and main memory) ts
236.597946 467.470093 moveto
0 0 32 0 0 (associated with a given address.) ts
} 
[0 0 0 1]
sts
vmrs
0 sf
newpath
200.2 499.5 moveto
452.2 499.5 lineto
gsave
0.5 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
%%IncludeFont: Times-Bold
/f2 /|______Times-Bold dup RF findfont def
{
f2 [14 0 0 14 0 0] makesetfont
259.899994 503.970093 moveto
0 0 32 0 0 (Dir) ts
279.860931 503.970093 moveto
0 0 32 0 0 (ectory Home Level) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
/f1 /|______Times-Roman dup RF findfont def
{
f1 [14 0 0 14 0 0] makesetfont
271.396301 395.970093 moveto
0 0 32 0 0 (Processor caches in ) ts
281.889465 381.970093 moveto
0 0 32 0 0 (remote clusters.) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Bold
/f2 /|______Times-Bold dup RF findfont def
{
f2 [14 0 0 14 0 0] makesetfont
261.399994 418.470093 moveto
0 0 32 0 0 (Remote Cluster) ts
354.81308 418.470093 moveto
0 0 32 0 0 ( Level) ts
} 
[0 0 0 1]
sts
vmrs
vmrs
gsave [1 0 0 1 22.399994 0] concat
vms
gsave [1 0 0 1 130.5 22.5] concat
vms
0 sf
newpath
162 432 moveto
162 409.5 lineto
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
gsave [0.5 0 0 1 80.949997 0] concat
vms
0 sf
newpath
162 432 moveto
157.5 423 lineto
166.5 423 lineto
162 432 lineto
closepath
gsave
[0 0 0 1]setcolor  {fill}fp 
grestore
gsave
0.7 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
vmr
grestore
gsave [-0.5 0 0 -1 243.049988 841.5] concat
vms
0 sf
newpath
162 432 moveto
157.5 423 lineto
166.5 423 lineto
162 432 lineto
closepath
gsave
[0 0 0 1]setcolor  {fill}fp 
grestore
gsave
0.7 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
vmr
grestore
vmr
grestore
gsave [1 0 0 1 153 22.5] concat
vms
0 sf
newpath
162 432 moveto
162 409.5 lineto
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
gsave [0.5 0 0 1 80.949997 0] concat
vms
0 sf
newpath
162 432 moveto
157.5 423 lineto
166.5 423 lineto
162 432 lineto
closepath
gsave
[0 0 0 1]setcolor  {fill}fp 
grestore
gsave
0.7 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
vmr
grestore
gsave [-0.5 0 0 -1 243.049988 841.5] concat
vms
0 sf
newpath
162 432 moveto
157.5 423 lineto
166.5 423 lineto
162 432 lineto
closepath
gsave
[0 0 0 1]setcolor  {fill}fp 
grestore
gsave
0.7 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
vmr
grestore
vmr
grestore
vmr
grestore
gsave [1 0 0 1 22.399994 85.5] concat
vms
gsave [1 0 0 1 130.5 22.5] concat
vms
0 sf
newpath
162 432 moveto
162 409.5 lineto
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
gsave [0.5 0 0 1 80.949997 0] concat
vms
0 sf
newpath
162 432 moveto
157.5 423 lineto
166.5 423 lineto
162 432 lineto
closepath
gsave
[0 0 0 1]setcolor  {fill}fp 
grestore
gsave
0.7 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
vmr
grestore
gsave [-0.5 0 0 -1 243.049988 841.5] concat
vms
0 sf
newpath
162 432 moveto
157.5 423 lineto
166.5 423 lineto
162 432 lineto
closepath
gsave
[0 0 0 1]setcolor  {fill}fp 
grestore
gsave
0.7 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
vmr
grestore
vmr
grestore
gsave [1 0 0 1 153 22.5] concat
vms
0 sf
newpath
162 432 moveto
162 409.5 lineto
gsave
1 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
gsave [0.5 0 0 1 80.949997 0] concat
vms
0 sf
newpath
162 432 moveto
157.5 423 lineto
166.5 423 lineto
162 432 lineto
closepath
gsave
[0 0 0 1]setcolor  {fill}fp 
grestore
gsave
0.7 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
vmr
grestore
gsave [-0.5 0 0 -1 243.049988 841.5] concat
vms
0 sf
newpath
162 432 moveto
157.5 423 lineto
166.5 423 lineto
162 432 lineto
closepath
gsave
[0 0 0 1]setcolor  {fill}fp 
grestore
gsave
0.7 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp 
grestore
vmr
grestore
vmr
grestore
vmr
grestore
vmr
end  % FreeHandDict
%%EndDocument: _
%%EndDocument

 endTexFig
 583 1036 a Fi(Figure)15 b(4:)k(Memory)14 b(hierarc)o(h)o(y)g(of)h(D)o(ASH.)
30 1213 y(in)h(Figure)f(4.)22 b(The)16 b(\014rst)f(lev)o(el)h(is)f(the)h(pro)
q(cessor's)f(cac)o(he.)23 b(This)15 b(cac)o(he)h(is)g(designed)g(to)f(matc)o
(h)g(the)h(sp)q(eed)30 1275 y(of)k(the)g(pro)q(cessor)h(and)f(supp)q(ort)h
(sno)q(oping)f(from)e(the)j(bus.)36 b(A)20 b(request)g(that)g(cannot)g(b)q(e)
h(serviced)g(b)o(y)30 1338 y(the)e(pro)q(cessor's)e(cac)o(he)i(is)f(sen)o(t)g
(to)g(the)h(second)g(lev)o(el)f(in)g(the)h(hierarc)o(h)o(y)l(,)f(the)h
Ff(lo)n(c)n(al)f(cluster)g Fi(lev)o(el.)29 b(This)30 1400 y(lev)o(el)15
b(includes)g(the)g(other)g(pro)q(cessors')g(cac)o(hes)g(within)f(the)i
(requesting)f(pro)q(cessor's)f(cluster.)20 b(If)15 b(the)g(data)30
1462 y(is)i(lo)q(cally)g(cac)o(hed,)i(the)f(request)f(can)h(b)q(e)h(serviced)
f(within)f(the)h(cluster,)g(otherwise)f(the)h(request)g(is)f(sen)o(t)30
1524 y(to)f(the)h Ff(dir)n(e)n(ctory)h(home)g Fi(lev)o(el.)24
b(The)17 b(home)f(lev)o(el)h(consists)f(of)g(the)i(cluster)e(that)g(con)o
(tains)g(the)h(directory)30 1586 y(and)g(ph)o(ysical)f(memory)e(for)i(a)h
(giv)o(en)f(memory)e(address.)25 b(F)l(or)16 b(man)o(y)f(accesses)i(\(e.g.,)f
(most)f(priv)m(ate)h(data)30 1648 y(references\),)e(the)h(lo)q(cal)e(and)h
(home)f(cluster)h(are)g(the)g(same,)f(and)h(the)g(hierarc)o(h)o(y)g
(collapses)f(to)h(three)g(lev)o(els.)30 1710 y(In)22 b(general,)g(ho)o(w)o
(ev)o(er,)g(a)f(request)h(will)e(tra)o(v)o(el)g(through)h(the)g(in)o
(terconnection)g(net)o(w)o(ork)f(to)h(the)h(home)30 1772 y(cluster.)d(The)14
b(home)e(cluster)i(can)f(usually)g(satisfy)f(the)i(request)g(immediat)o(ely)l
(,)d(but)j(if)f(the)g(directory)g(en)o(try)30 1834 y(is)g(dirt)o(y)g(\(in)g
(a)g(remote)g(cluster\))f(or)i(in)f(shared)h(state)f(when)h(the)g(requesting)
f(pro)q(cessor)g(requests)h(exclusiv)o(e)30 1896 y(access,)21
b(the)f(fourth)f(lev)o(el)g(m)o(ust)f(also)h(b)q(e)i(accessed.)34
b(The)20 b Ff(r)n(emote)h(cluster)e Fi(lev)o(el)g(for)g(a)h(memory)d(blo)q(c)
o(k)30 1959 y(consists)d(of)h(the)g(clusters)g(mark)o(ed)f(b)o(y)h(the)g
(directory)g(as)g(holding)f(a)h(cop)o(y)g(of)g(the)g(blo)q(c)o(k.)101
2040 y(T)l(o)d(illustrate)f(the)h(directory)g(proto)q(col,)g(\014rst)g
(consider)g(ho)o(w)g(a)h(pro)q(cessor)f(read)g(tra)o(v)o(erses)g(the)g
(memory)30 2102 y(hierarc)o(h)o(y:)30 2214 y Fb(Pro)q(cessor)k(Lev)o(el:)22
b Fi(If)12 b(the)g(requested)h(lo)q(cation)d(is)i(presen)o(t)g(in)g(the)g
(pro)q(cessor's)f(cac)o(he,)i(the)f(cac)o(he)g(simply)144 2276
y(supplies)j(the)g(data.)k(Otherwise,)c(the)g(request)g(go)q(es)g(to)g(the)g
(lo)q(cal)g(cluster)g(lev)o(el.)30 2372 y Fb(Lo)q(cal)k(Cluster)d(Lev)o(el:)
21 b Fi(If)14 b(the)f(data)g(resides)g(within)g(one)g(of)g(the)h(other)f(cac)
o(hes)g(within)g(the)h(cluster,)f(the)144 2434 y(data)k(is)g(supplied)h(b)o
(y)g(that)f(cac)o(he)h(and)g(no)g(state)f(c)o(hange)h(is)f(required)h(at)f
(the)h(directory)f(lev)o(el.)27 b(If)144 2496 y(the)15 b(request)g(m)o(ust)e
(b)q(e)j(sen)o(t)f(b)q(ey)o(ond)g(the)g(lo)q(cal)g(cluster)f(lev)o(el,)g(it)h
(is)f(\014rst)h(sen)o(t)g(to)f(the)h(home)f(cluster)144 2559
y(corresp)q(onding)h(to)f(that)h(address.)30 2655 y Fb(Home)f(Directory)i
(Lev)o(el:)22 b Fi(The)15 b(home)g(cluster)g(examines)f(the)i(directory)f
(state)f(of)h(the)h(memory)d(lo)q(ca-)144 2717 y(tion)19 b(while)g(sim)o
(ultaneously)f(fetc)o(hing)h(the)h(blo)q(c)o(k)g(from)e(main)h(memory)l(.)32
b(If)20 b(the)g(blo)q(c)o(k)g(is)f(clean,)144 2779 y(the)h(data)g(is)g(sen)o
(t)h(to)e(the)i(requester)g(and)f(the)h(directory)f(is)g(up)q(dated)h(to)f
(sho)o(w)g(sharing)g(b)o(y)h(the)964 2904 y(8)p eop
%%Page: 9 9
9 8 bop 144 45 a Fi(requester.)19 b(If)c(the)g(lo)q(cation)e(is)h(dirt)o(y)l
(,)g(the)g(request)h(is)f(forw)o(arded)f(to)h(the)h(remote)e(cluster)h
(indicated)144 107 y(b)o(y)h(the)g(directory)l(.)30 207 y Fb(Remote)g(Lev)o
(el:)21 b Fi(The)15 b(dirt)o(y)f(cluster)h(replies)g(with)f(a)h(shared)g(cop)
o(y)g(of)g(the)g(data)f(whic)o(h)h(is)g(sen)o(t)f(directly)144
269 y(to)g(the)h(requester.)20 b(In)15 b(addition,)f(a)h(sharing)f(write-bac)
o(k)g(message)f(is)i(sen)o(t)g(to)f(the)h(home)f(to)g(up)q(date)144
331 y(main)h(memory)f(and)i(c)o(hange)h(the)g(directory)e(state)h(to)g
(indicate)g(that)g(the)g(requesting)h(and)f(remote)144 393
y(cluster)g(no)o(w)h(ha)o(v)o(e)g(shared)g(copies)g(of)g(the)g(data.)25
b(Ha)o(ving)17 b(the)g(dirt)o(y)f(cluster)h(resp)q(ond)h(directly)e(to)144
455 y(the)e(requester,)h(as)f(opp)q(osed)h(to)f(routing)f(it)h(through)g(the)
h(home,)e(reduces)i(the)g(latency)f(seen)h(b)o(y)g(the)144
517 y(requesting)f(pro)q(cessor.)101 636 y(No)o(w)g(consider)h(the)h
(sequence)g(of)f(op)q(erations)f(that)h(o)q(ccurs)g(when)h(a)f(lo)q(cation)f
(is)g(written.)30 768 y Fb(Pro)q(cessor)i(Lev)o(el:)22 b Fi(If)16
b(the)g(lo)q(cation)g(is)f(dirt)o(y)h(in)g(the)g(writing)f(pro)q(cessor's)g
(cac)o(he,)i(the)f(write)f(can)i(com-)144 830 y(plete)e(immediately)l(.)i
(Otherwise,)e(a)g(read-exclusiv)o(e)g(request)g(is)g(issued)h(on)f(the)g(lo)q
(cal)g(cluster's)f(bus)144 892 y(to)h(obtain)h(exclusiv)o(e)g(o)o(wnership)g
(of)g(the)h(line)f(and)h(retriev)o(e)e(the)i(remaining)d(p)q(ortion)i(of)g
(the)g(cac)o(he)144 954 y(line.)30 1053 y Fb(Lo)q(cal)j(Cluster)d(Lev)o(el:)
21 b Fi(If)12 b(the)f(cac)o(he)h(line)f(is)g(already)g(o)o(wned)h(b)o(y)f
(one)h(of)f(the)g(cac)o(hes)h(within)f(the)g(cluster,)144 1116
y(then)16 b(the)g(read-exclusiv)o(e)g(request)h(is)e(serviced)i(at)e(the)i
(lo)q(cal)e(lev)o(el)g(b)o(y)h(a)g(cac)o(he-to-cac)o(he)h(transfer.)144
1178 y(This)k(allo)o(ws)g(pro)q(cessors)h(within)f(a)h(cluster)g(to)g
(alternately)e(mo)q(dify)h(the)h(same)f(memory)f(blo)q(c)o(k)144
1240 y(without)11 b(an)o(y)i(in)o(tercluster)e(in)o(teraction.)18
b(If)12 b(no)h(lo)q(cal)f(cac)o(he)h(o)o(wns)f(the)g(blo)q(c)o(k)h(then)g(a)f
(read-exclusiv)o(e)144 1302 y(request)j(is)g(sen)o(t)g(to)f(the)h(home)g
(cluster.)30 1401 y Fb(Home)f(Directory)i(Lev)o(el:)22 b Fi(The)16
b(home)f(cluster)h(can)g(immediately)d(satisfy)i(an)h(o)o(wnership)g(request)
g(for)144 1463 y(a)f(lo)q(cation)f(that)h(is)g(in)h(the)f(uncac)o(hed)i(or)e
(shared)h(state.)k(In)c(addition,)f(if)g(a)g(blo)q(c)o(k)g(is)g(in)h(the)g
(shared)144 1526 y(state)k(then)i(all)e(cac)o(hed)i(copies)g(m)o(ust)e(b)q(e)
i(in)o(v)m(alidated.)37 b(The)22 b(directory)f(indicates)g(the)g(clusters)144
1588 y(that)f(ha)o(v)o(e)h(the)h(blo)q(c)o(k)f(cac)o(hed.)39
b(In)o(v)m(alidation)20 b(requests)h(are)g(sen)o(t)h(to)e(these)i(clusters)f
(while)g(the)144 1650 y(home)c(concurren)o(tly)i(sends)g(an)g(exclusiv)o(e)g
(data)f(reply)g(to)g(the)h(requesting)g(cluster.)30 b(Alternately)l(,)144
1712 y(if)16 b(the)g(directory)g(indicates)g(that)g(the)h(blo)q(c)o(k)f(is)g
(dirt)o(y)l(,)g(then)h(the)f(read-exclusiv)o(e)h(request)f(m)o(ust)f(b)q(e)
144 1774 y(forw)o(arded)f(to)h(the)g(dirt)o(y)f(cluster)h(as)g(in)g(the)g
(case)g(of)g(a)g(read.)30 1873 y Fb(Remote)g(Lev)o(el:)21 b
Fi(If)f(the)f(directory)g(had)g(indicated)h(that)e(the)i(memory)d(blo)q(c)o
(k)i(w)o(as)g(shared,)h(then)g(the)144 1935 y(remote)c(clusters)i(receiv)o(e)
g(an)g(in)o(v)m(alidation)e(request)i(to)f(eliminate)f(their)i(shared)g(cop)o
(y)l(.)28 b(Up)q(on)19 b(re-)144 1998 y(ceiving)f(the)i(in)o(v)m(alidation,)e
(the)h(remote)f(clusters)g(send)i(an)f(ac)o(kno)o(wledgmen)o(t)e(to)i(the)g
(requesting)144 2060 y(cluster.)28 b(If)18 b(the)g(directory)f(had)h
(indicated)g(a)g(dirt)o(y)f(state,)g(then)i(a)e(read-exclusiv)o(e)h(request)g
(is)g(re-)144 2122 y(ceiv)o(ed)13 b(b)o(y)g(the)g(dirt)o(y)f(cluster.)19
b(As)13 b(in)g(the)g(case)g(of)g(the)g(read,)g(the)g(remote)f(cluster)h(resp)
q(onds)g(directly)144 2184 y(to)j(the)h(requesting)g(cluster)f(and)i(sends)f
(a)g(dirt)o(y-transfer)e(message)h(to)g(the)h(home)f(indicating)g(that)144
2246 y(the)f(requesting)g(cluster)g(no)o(w)f(holds)h(the)g(blo)q(c)o(k)g
(exclusiv)o(ely)l(.)101 2377 y(When)j(the)g(writing)f(cluster)h(receiv)o(es)g
(all)f(the)h(in)o(v)m(alidation)e(ac)o(kno)o(wledgmen)o(ts,)h(or)g(the)h
(reply)g(from)30 2440 y(the)i(home)f(or)h(dirt)o(y)f(cluster,)i(it)e(is)h
(guaran)o(teed)g(that)f(all)g(copies)h(of)g(the)g(old)g(data)f(ha)o(v)o(e)h
(b)q(een)h(purged)30 2502 y(from)c(the)j(system.)30 b(If)19
b(the)h(pro)q(cessor)f(dela)o(ys)f(completing)f(the)j(write)e(un)o(til)g(all)
g(ac)o(kno)o(wledgmen)o(ts)f(are)30 2564 y(bac)o(k,)f(then)h(the)g(new)g
(write)f(v)m(alue)h(will)e(b)q(ecome)h(a)o(v)m(ailable)g(to)g(all)f(other)h
(pro)q(cessors)h(at)f(the)g(same)g(time.)30 2626 y(Ho)o(w)o(ev)o(er,)e(in)o
(v)m(alidations)f(in)o(v)o(olv)o(e)h(round)h(trip)f(messages)g(to)g(m)o
(ultiple)f(clusters,)h(resulting)g(in)h(p)q(oten)o(tially)30
2688 y(long)21 b(dela)o(ys.)39 b(Higher)21 b(pro)q(cessor)g(utilization)f
(can)i(b)q(e)g(obtained)f(b)o(y)h(allo)o(wing)d(the)j(write)f(to)g(pro)q
(ceed)30 2750 y(immediately)12 b(after)i(the)i(o)o(wnership)e(reply)i(is)e
(receiv)o(ed)i(from)d(the)j(home.)j(Unfortunately)l(,)14 b(this)g(ma)o(y)g
(lead)964 2904 y(9)p eop
%%Page: 10 10
10 9 bop 30 45 a Fi(to)17 b(inconsistencies)h(with)f(the)h(memory)d(mo)q(del)
i(assumed)g(b)o(y)h(the)g(programmer.)25 b(The)18 b(next)g(subsection)30
107 y(describ)q(es)f(ho)o(w)f(D)o(ASH)g(relaxes)g(the)h(constrain)o(ts)e(on)h
(memory)e(request)i(ordering,)g(while)g(still)f(pro)o(viding)30
169 y(a)g(reasonable)f(programming)e(mo)q(del)i(to)h(the)g(user.)30
316 y Fg(3.2)56 b(Memory)17 b(Consistency)30 427 y Fi(The)k(memory)e
(consistency)h(mo)q(del)g(supp)q(orted)i(b)o(y)f(an)f(arc)o(hitecture)h
(directly)f(a\013ects)g(the)h(amoun)o(t)e(of)30 490 y(bu\013ering)h(and)h
(pip)q(elining)g(that)f(can)g(tak)o(e)g(place)h(among)e(memory)f(requests.)36
b(In)22 b(addition,)f(it)e(has)i(a)30 552 y(direct)d(e\013ect)f(on)h(the)g
(complexit)o(y)d(of)j(the)f(programming)e(mo)q(del)h(presen)o(ted)j(to)e(the)
h(user.)27 b(The)18 b(goal)f(in)30 614 y(D)o(ASH)j(is)g(to)f(pro)o(vide)h
(substan)o(tial)f(freedom)g(in)h(the)g(ordering)g(among)e(memory)g(requests,)
j(while)e(still)30 676 y(pro)o(viding)14 b(a)h(reasonable)g(programm)o(ing)d
(mo)q(del)i(to)h(the)g(user.)101 758 y(A)o(t)10 b(one)i(end)g(of)f(the)h
(consistency)f(sp)q(ectrum)g(is)g(the)g Ff(se)n(quential)h(c)n(onsistency)e
Fi(mo)q(del)g([8)o(],)i(whic)o(h)f(requires)30 820 y(the)20
b(execution)f(of)g(the)h(parallel)e(program)f(to)i(app)q(ear)h(as)f(some)f
(in)o(terlea)o(ving)f(of)i(the)h(execution)g(of)f(the)30 882
y(parallel)9 b(pro)q(cesses)h(on)g(a)g(sequen)o(tial)g(mac)o(hine.)17
b(Sequen)o(tial)9 b(consistency)h(can)h(b)q(e)g(guaran)o(teed)e(b)o(y)h
(requiring)30 944 y(one)17 b(memory)e(request)j(to)e(complete)g(b)q(efore)i
(the)f(next)h(request)f(is)g(issued)h(b)o(y)f(the)g(same)f(pro)q(cessor)h
([11].)30 1006 y(Sequen)o(tial)h(consistency)l(,)g(while)g(conceptually)f
(app)q(ealing,)h(imp)q(oses)f(a)h(large)f(p)q(erformance)g(p)q(enalt)o(y)h
(on)30 1068 y(memory)13 b(accesses.)22 b(F)l(or)15 b(man)o(y)f(applications,)
g(suc)o(h)i(a)f(mo)q(del)g(is)g(to)q(o)g(strict)f(and)i(one)g(can)g(mak)o(e)e
(do)h(with)30 1130 y(a)g(w)o(eak)o(er)f(notion)h(of)f(consistency)l(.)101
1212 y(As)i(an)g(example,)e(consider)i(the)g(case)g(of)g(a)g(pro)q(cessor)f
(up)q(dating)h(a)g(data)g(structure)f(within)h(a)f(critical)30
1274 y(section.)38 b(If)22 b(up)q(dating)f(the)h(data)e(structure)h(requires)
h(sev)o(eral)e(writes,)i(eac)o(h)f(write)g(in)g(a)g(sequen)o(tially)30
1336 y(consisten)o(t)13 b(system)f(will)g(stall)g(the)h(pro)q(cessor)h(un)o
(til)e(all)h(other)g(cac)o(hed)h(copies)f(of)g(that)g(lo)q(cation)f(ha)o(v)o
(e)i(b)q(een)30 1398 y(in)o(v)m(alidated.)19 b(But)14 b(these)h(stalls)e(are)
h(unnecessary)i(as)e(the)g(programmer)e(has)i(already)g(made)f(sure)i(that)f
(no)30 1460 y(other)f(pro)q(cess)h(can)g(rely)g(on)f(that)g(data)g(structure)
h(b)q(eing)g(consisten)o(t)f(un)o(til)g(the)g(critical)g(section)g(is)g
(exited.)30 1522 y(If)20 b(the)h(sync)o(hronization)e(p)q(oin)o(ts)g(can)h(b)
q(e)h(iden)o(ti\014ed,)g(then)g(the)f(memory)e(need)j(only)e(b)q(e)i
(consisten)o(t)e(at)30 1584 y(those)d(p)q(oin)o(ts.)24 b(In)17
b(particular,)f(D)o(ASH)g(supp)q(orts)h(the)g(use)g(of)f(the)h
Ff(r)n(ele)n(ase)f(c)n(onsistency)f Fi(mo)q(del)g([3])h(whic)o(h)30
1646 y(only)e(requires)g(the)g(op)q(erations)g(to)g(ha)o(v)o(e)g(completed)f
(b)q(efore)i(a)f(critical)f(section)g(is)h(released)h(\(i.e.)j(a)c(lo)q(c)o
(k)g(is)30 1709 y(unlo)q(c)o(k)o(ed\).)101 1790 y(Suc)o(h)j(a)g(sc)o(heme)f
(has)h(t)o(w)o(o)f(adv)m(an)o(tages.)25 b(First,)15 b(it)i(pro)o(vides)f(the)
h(user)g(with)g(a)f(reasonable)h(program-)30 1852 y(ming)e(mo)q(del,)f(since)
j(the)f(programmer)d(is)i(assured)h(that)g(when)g(the)g(critical)f(section)h
(is)f(exited,)h(all)f(other)30 1914 y(pro)q(cessors)h(will)f(ha)o(v)o(e)g(a)h
(consisten)o(t)f(view)h(of)g(the)g(mo)q(di\014ed)f(data)h(structure.)22
b(Second,)17 b(it)e(p)q(ermits)g(reads)30 1977 y(to)e(b)o(ypass)h(writes)f
(and)h(the)g(in)o(v)m(alidations)e(of)h(di\013eren)o(t)h(write)f(op)q
(erations)g(to)g(o)o(v)o(erlap,)f(resulting)h(in)h(lo)o(w)o(er)30
2039 y(latencies)f(for)h(accesses)g(and)g(higher)g(o)o(v)o(erall)e(p)q
(erformance.)18 b(Detailed)13 b(sim)o(ulation)e(studies)j(for)f(pro)q
(cessors)30 2101 y(with)20 b(blo)q(c)o(king)g(reads)h(ha)o(v)o(e)g(sho)o(wn)f
(that)g(release)h(consistency)g(pro)o(vides)f(a)h(10\045)f(to)g(40\045)g
(increase)h(in)30 2163 y(p)q(erformance)14 b(o)o(v)o(er)g(sequen)o(tial)g
(consistency)h([3)o(].)20 b(The)15 b(disadv)m(an)o(tage)f(of)h(the)f(mo)q
(del)g(is)h(that)f(all)g(sync)o(hro-)30 2225 y(nization)g(accesses)i(m)o(ust)
d(b)q(e)j(iden)o(ti\014ed)f(b)o(y)h(the)f(programmer)d(or)i(compiler.)101
2307 y(The)20 b(D)o(ASH)g(protot)o(yp)q(e)g(supp)q(orts)g(the)h(release)e
(consistency)i(mo)q(del)e(in)h(hardw)o(are.)35 b(Since)20 b(w)o(e)g(use)30
2369 y(commercial)15 b(micropro)q(cessors,)i(the)h(pro)q(cessor)g(stalls)f
(on)h(read)g(op)q(erations)f(un)o(til)h(the)g(read)g(data)g(is)g(re-)30
2431 y(turned)e(from)f(the)h(cac)o(he)g(or)f(lo)o(w)o(er)g(lev)o(els)g(of)h
(the)g(memory)d(hierarc)o(h)o(y)l(.)22 b(W)l(rite)15 b(op)q(erations,)g(ho)o
(w)o(ev)o(er,)g(are)30 2493 y(non-blo)q(c)o(king.)k(There)13
b(is)g(a)g(write)f(bu\013er)h(b)q(et)o(w)o(een)h(the)f(\014rst)g(and)g
(second)h(lev)o(el)f(cac)o(hes.)19 b(The)13 b(write)g(bu\013er)30
2555 y(queues)k(up)f(the)g(write)f(requests)g(and)h(issues)g(them)f(in)g
(order.)21 b(F)l(urthermore,)14 b(the)i(servicing)f(of)h(the)g(write)30
2617 y(requests)d(are)g(o)o(v)o(erlapp)q(ed.)19 b(As)14 b(so)q(on)f(as)g(the)
g(cac)o(he)h(receiv)o(es)f(the)h(o)o(wnership)f(and)g(data)g(for)g(the)g
(requested)30 2679 y(cac)o(he)21 b(line,)g(the)g(write)f(data)g(is)g(remo)o
(v)o(ed)f(from)g(the)h(write)g(bu\013er)h(and)g(written)e(in)o(to)h(the)h
(cac)o(he)f(line.)30 2741 y(The)14 b(next)g(write)f(request)h(can)g(b)q(e)h
(serviced)f(while)g(the)g(in)o(v)m(alidation)e(ac)o(kno)o(wledgmen)o(ts)g
(for)h(the)h(previous)952 2904 y(10)p eop
%%Page: 11 11
11 10 bop 30 45 a Fi(write)18 b(op)q(erations)g(\014lter)h(in.)30
b(Th)o(us)19 b(parallelism)d(exists)i(at)h(t)o(w)o(o)e(lev)o(els:)27
b(the)19 b(pro)q(cessor)g(executes)g(other)30 107 y(instructions)12
b(and)h(read)g(hits)g(\(in)f(the)h(\014rst)g(lev)o(el)f(cac)o(he\))h(while)g
(preceding)g(write)f(op)q(erations)h(are)f(p)q(ending,)30 169
y(and)j(in)o(v)m(alidations)f(of)h(m)o(ultiple)e(write)h(op)q(erations)g(are)
h(o)o(v)o(erlapp)q(ed.)101 251 y(The)e(D)o(ASH)g(protot)o(yp)q(e)f(also)g
(pro)o(vides)h(fence)h(op)q(erations)e(whic)o(h)h(stall)f(the)h(pro)q(cessor)
g(or)f(write-bu\013er)30 313 y(un)o(til)19 b(previous)h(op)q(erations)f
(complete.)32 b(These)21 b(fence)f(op)q(erations)f(allo)o(w)g(more)f
(stringen)o(t)h(consistency)30 375 y(mo)q(dels)14 b(to)h(b)q(e)g(em)o(ulated)
f(b)o(y)h(soft)o(w)o(are.)30 522 y Fg(3.3)56 b(Memory)17 b(Access)i
(Optimizations)30 633 y Fi(The)g(use)f(of)g(release)g(consistency)h(helps)f
(hide)h(the)f(latency)g(of)g(write)g(op)q(erations.)28 b(Ho)o(w)o(ev)o(er,)18
b(since)h(the)30 695 y(pro)q(cessor)e(stalls)e(on)i(read)g(op)q(erations,)f
(the)h(en)o(tire)g(duration)f(of)g(access)h(is)g(seen)g(b)o(y)g(the)g(pro)q
(cessor.)25 b(F)l(or)30 757 y(applications)10 b(that)h(exhibit)f(p)q(o)q(or)i
(cac)o(he)f(b)q(eha)o(vior,)h(or)e(do)i(extensiv)o(e)f(sharing,)g(this)g(can)
g(lead)g(to)g(signi\014can)o(t)30 819 y(dela)o(ys)g(while)g(the)h(pro)q
(cessor)f(w)o(aits)f(for)h(remote)f(cac)o(he)i(misses)e(to)h(b)q(e)i
(\014lled.)18 b(T)l(o)11 b(help)h(with)f(these)h(problems)30
881 y(D)o(ASH)j(pro)o(vides)g(a)g(v)m(ariet)o(y)f(of)h(prefetc)o(h)g(and)g
(pip)q(elining)g(op)q(erations.)30 1026 y Fb(3.3.1)52 b(Prefetc)o(h)16
b(Op)q(erations)30 1137 y Fi(A)e(prefetc)o(h)g(op)q(eration)g(is)f(an)h
(explicit)g(non-blo)q(c)o(king)f(request)i(to)e(fetc)o(h)h(data)f(b)q(efore)i
(the)f(actual)f(memory)30 1199 y(op)q(eration)19 b(is)h(issued.)35
b(Hop)q(efully)l(,)21 b(b)o(y)f(the)h(time)d(the)i(pro)q(cess)h(needs)g(that)
e(data)h(v)m(alue,)h(the)f(data)g(has)30 1262 y(already)13
b(b)q(een)i(brough)o(t)e(closer)g(to)g(the)h(pro)q(cessor,)f(hiding)h(the)g
(latency)f(of)g(the)h(regular)f(blo)q(c)o(king)g(read.)19 b(In)30
1324 y(addition,)14 b(non-blo)q(c)o(king)g(prefetc)o(h)h(allo)o(ws)e(the)i
(pip)q(elining)g(of)f(read)h(misses)e(when)i(m)o(ultiple)e(cac)o(he)i(blo)q
(c)o(ks)30 1386 y(are)i(prefetc)o(hed.)26 b(As)17 b(a)g(simple)f(example)g
(of)h(its)f(use,)i(a)e(pro)q(cess)i(w)o(an)o(ting)e(to)g(access)h(a)g(ro)o(w)
f(of)h(a)g(matrix)30 1448 y(stored)h(in)h(another)g(cluster's)f(memory)e(can)
j(do)g(so)g(e\016cien)o(tly)f(b)o(y)h(\014rst)f(issuing)h(prefetc)o(h)g
(reads)f(for)h(all)30 1510 y(cac)o(he)c(blo)q(c)o(ks)g(corresp)q(onding)h(to)
e(that)h(ro)o(w.)101 1592 y(D)o(ASH's)h(prefetc)o(h)h(op)q(erations)e(are)i
(non-binding)g(and)g(soft)o(w)o(are)e(con)o(trolled.)23 b(Explicit)16
b(prefetc)o(h)h(op-)30 1654 y(erations)e(are)h(issued)g(b)o(y)g(the)g(pro)q
(cessor)g(and)g(bring)g(a)g(shared)g(or)g(exclusiv)o(e)g(cop)o(y)g(of)f(the)h
(memory)e(blo)q(c)o(k)30 1716 y(in)o(to)k(the)g(pro)q(cessor's)g(cac)o(he.)30
b(Not)18 b(binding)h(the)f(v)m(alue)h(at)f(the)g(time)f(of)h(the)h(prefetc)o
(h)g(is)f(imp)q(ortan)o(t)e(in)30 1778 y(that)k(issuing)g(the)h(prefetc)o(h)g
(do)q(es)g(not)g(a\013ect)f(the)h(consistency)g(mo)q(del,)g(or)f(force)h(the)
f(compiler)g(to)g(do)30 1840 y(a)f(conserv)m(ativ)o(e)f(static)g(dep)q
(endency)j(analysis.)30 b(The)20 b(prefetc)o(hed)f(cac)o(he)h(line)e(is)h(k)o
(ept)g(coheren)o(t)g(b)o(y)g(the)30 1902 y(coherence)i(proto)q(col.)31
b(If)20 b(another)f(pro)q(cessor)h(happ)q(ens)g(to)f(write)g(to)g(the)g(lo)q
(cation)g(b)q(efore)h(the)f(data)g(is)30 1964 y(accessed)d(b)o(y)e(the)h
(prefetc)o(hing)g(pro)q(cessor,)g(the)g(data)f(will)f(simply)h(b)q(e)h(in)o
(v)m(alidated.)k(The)c(prefetc)o(h)g(will)f(b)q(e)30 2026 y(rendered)k
(ine\013ectiv)o(e,)e(but)h(the)g(program)d(will)i(execute)i(correctly)l(.)24
b(Supp)q(ort)17 b(for)f(an)h(exclusiv)o(e)g(prefetc)o(h)30
2088 y(op)q(eration)11 b(aids)h(cases)g(where)g(the)g(blo)q(c)o(k)g(is)g
(\014rst)f(read)h(and)h(then)f(up)q(dated.)20 b(By)12 b(\014rst)g(issuing)f
(the)h(exclusiv)o(e)30 2151 y(prefetc)o(h,)19 b(the)g(pro)q(cessor)g(a)o(v)o
(oids)e(\014rst)h(obtaining)g(a)g(shared)h(cop)o(y)g(and)g(then)g(ha)o(ving)f
(to)g(re-request)h(an)30 2213 y(exclusiv)o(e)e(cop)o(y)g(of)f(the)i(blo)q(c)o
(k.)25 b(Studies)17 b(ha)o(v)o(e)g(sho)o(wn)g(that,)f(for)g(certain)h
(applications,)f(the)h(addition)f(of)30 2275 y(small)f(n)o(um)o(b)q(er)h(of)h
(prefetc)o(h)g(instructions)f(can)h(increase)g(pro)q(cessor)g(utilization)e
(b)o(y)i(more)e(than)i(a)g(factor)30 2337 y(of)e(t)o(w)o(o)f([5)o(].)30
2482 y Fb(3.3.2)52 b(Up)q(date)19 b(and)f(Deliv)o(er)d(Op)q(erations)30
2593 y Fi(In)i(some)d(applications,)h(it)g(ma)o(y)f(not)i(b)q(e)h(p)q
(ossible)e(for)h(the)g(consumer)f(pro)q(cess)h(to)g(issue)g(a)f(prefetc)o(h)h
(early)30 2655 y(enough)d(to)g(e\013ectiv)o(ely)f(hide)h(the)g(latency)g(of)f
(memory)l(.)17 b(Lik)o(ewise,)c(if)f(m)o(ultiple)f(consumers)h(need)i(the)f
(same)30 2717 y(item)g(of)g(data,)h(the)g(comm)o(unication)d(tra\016c)j(can)g
(b)q(e)h(reduced)h(if)d(data)h(is)g(m)o(ulticast)d(to)j(all)f(the)i
(consumers)30 2779 y(sim)o(ultaneously)l(.)34 b(Therefore,)21
b(D)o(ASH)g(pro)o(vides)f(op)q(erations)g(that)g(allo)o(w)f(the)i(pro)q
(ducer)g(to)f(send)h(data)952 2904 y(11)p eop
%%Page: 12 12
12 11 bop 30 45 a Fi(directly)12 b(to)h(consumers.)18 b(There)c(are)f(t)o(w)o
(o)e(w)o(a)o(ys)h(for)h(the)g(pro)q(ducing)h(pro)q(cessor)f(to)f(sp)q(ecify)i
(the)f(consuming)30 107 y(pro)q(cessors.)22 b(The)17 b Ff(up)n(date-write)g
Fi(op)q(eration)e(sends)i(the)f(new)h(data)e(directly)g(to)h(all)f(pro)q
(cessors)h(that)f(ha)o(v)o(e)30 169 y(cac)o(hed)h(the)f(data,)f(while)h(the)g
Ff(deliver)g Fi(op)q(eration)f(sends)i(the)f(data)g(to)f(sp)q(eci\014ed)j
(clusters.)101 251 y(The)h Ff(up)n(date-write)i Fi(primitiv)o(e)c(up)q(dates)
j(the)g(v)m(alue)f(of)h(all)e(existing)g(copies)i(of)f(a)g(data)g(w)o(ord.)29
b(Using)30 313 y(this)19 b(primitiv)o(e,)e(a)i(pro)q(cessor)g(do)q(es)g(not)g
(need)h(to)e(\014rst)h(acquire)g(an)g(exclusiv)o(e)g(cop)o(y)g(of)g(the)g
(cac)o(he)g(line,)30 375 y(whic)o(h)g(w)o(ould)h(result)f(in)g(in)o(v)m
(alidating)f(all)h(other)g(copies.)33 b(Rather,)20 b(data)f(is)g(directly)g
(written)g(in)o(to)g(the)30 437 y(home)14 b(memory)f(and)i(all)f(other)g(cac)
o(hes)i(holding)e(a)h(cop)o(y)g(of)f(the)i(line.)j(These)d(seman)o(tics)d
(are)h(particularly)30 499 y(useful)h(for)g(ev)o(en)o(t)g(sync)o
(hronization,)f(suc)o(h)h(as)g(the)g(release)g(ev)o(en)o(t)g(for)g(a)f
(barrier.)101 581 y(The)19 b Ff(deliver)f Fi(instruction)g(explicitly)g(sp)q
(eci\014es)i(the)f(destination)